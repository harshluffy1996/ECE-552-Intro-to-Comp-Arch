$date
	Thu Oct 27 20:57:55 2022
$end
$version
	ModelSim Version 10.4d
$end
$timescale
	1ps
$end

$scope module proc_hier_bench $end
$var wire 1 ! PC [15] $end
$var wire 1 " PC [14] $end
$var wire 1 # PC [13] $end
$var wire 1 $ PC [12] $end
$var wire 1 % PC [11] $end
$var wire 1 & PC [10] $end
$var wire 1 ' PC [9] $end
$var wire 1 ( PC [8] $end
$var wire 1 ) PC [7] $end
$var wire 1 * PC [6] $end
$var wire 1 + PC [5] $end
$var wire 1 , PC [4] $end
$var wire 1 - PC [3] $end
$var wire 1 . PC [2] $end
$var wire 1 / PC [1] $end
$var wire 1 0 PC [0] $end
$var wire 1 1 Inst [15] $end
$var wire 1 2 Inst [14] $end
$var wire 1 3 Inst [13] $end
$var wire 1 4 Inst [12] $end
$var wire 1 5 Inst [11] $end
$var wire 1 6 Inst [10] $end
$var wire 1 7 Inst [9] $end
$var wire 1 8 Inst [8] $end
$var wire 1 9 Inst [7] $end
$var wire 1 : Inst [6] $end
$var wire 1 ; Inst [5] $end
$var wire 1 < Inst [4] $end
$var wire 1 = Inst [3] $end
$var wire 1 > Inst [2] $end
$var wire 1 ? Inst [1] $end
$var wire 1 @ Inst [0] $end
$var wire 1 A RegWrite $end
$var wire 1 B WriteRegister [2] $end
$var wire 1 C WriteRegister [1] $end
$var wire 1 D WriteRegister [0] $end
$var wire 1 E WriteData [15] $end
$var wire 1 F WriteData [14] $end
$var wire 1 G WriteData [13] $end
$var wire 1 H WriteData [12] $end
$var wire 1 I WriteData [11] $end
$var wire 1 J WriteData [10] $end
$var wire 1 K WriteData [9] $end
$var wire 1 L WriteData [8] $end
$var wire 1 M WriteData [7] $end
$var wire 1 N WriteData [6] $end
$var wire 1 O WriteData [5] $end
$var wire 1 P WriteData [4] $end
$var wire 1 Q WriteData [3] $end
$var wire 1 R WriteData [2] $end
$var wire 1 S WriteData [1] $end
$var wire 1 T WriteData [0] $end
$var wire 1 U MemWrite $end
$var wire 1 V MemRead $end
$var wire 1 W MemAddress [15] $end
$var wire 1 X MemAddress [14] $end
$var wire 1 Y MemAddress [13] $end
$var wire 1 Z MemAddress [12] $end
$var wire 1 [ MemAddress [11] $end
$var wire 1 \ MemAddress [10] $end
$var wire 1 ] MemAddress [9] $end
$var wire 1 ^ MemAddress [8] $end
$var wire 1 _ MemAddress [7] $end
$var wire 1 ` MemAddress [6] $end
$var wire 1 a MemAddress [5] $end
$var wire 1 b MemAddress [4] $end
$var wire 1 c MemAddress [3] $end
$var wire 1 d MemAddress [2] $end
$var wire 1 e MemAddress [1] $end
$var wire 1 f MemAddress [0] $end
$var wire 1 g MemData [15] $end
$var wire 1 h MemData [14] $end
$var wire 1 i MemData [13] $end
$var wire 1 j MemData [12] $end
$var wire 1 k MemData [11] $end
$var wire 1 l MemData [10] $end
$var wire 1 m MemData [9] $end
$var wire 1 n MemData [8] $end
$var wire 1 o MemData [7] $end
$var wire 1 p MemData [6] $end
$var wire 1 q MemData [5] $end
$var wire 1 r MemData [4] $end
$var wire 1 s MemData [3] $end
$var wire 1 t MemData [2] $end
$var wire 1 u MemData [1] $end
$var wire 1 v MemData [0] $end
$var wire 1 w Halt $end
$var integer 32 x inst_count $end
$var integer 32 y trace_file $end
$var integer 32 z sim_log_file $end

$scope module DUT $end
$var wire 1 { clk $end
$var wire 1 | err $end
$var wire 1 } rst $end

$scope module c0 $end
$var reg 1 ~ clk $end
$var reg 1 !! rst $end
$var wire 1 | err $end
$var integer 32 "! cycle_count $end
$upscope $end

$scope module p0 $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 | err $end
$var wire 1 #! regdst [1] $end
$var wire 1 $! regdst [0] $end
$var wire 1 %! branch $end
$var wire 1 &! jump [1] $end
$var wire 1 '! jump [0] $end
$var wire 1 (! memread $end
$var wire 1 )! memtoreg $end
$var wire 1 *! ALUop [2] $end
$var wire 1 +! ALUop [1] $end
$var wire 1 ,! ALUop [0] $end
$var wire 1 -! memwrite $end
$var wire 1 .! ALUsrc [1] $end
$var wire 1 /! ALUsrc [0] $end
$var wire 1 0! regwrite $end
$var wire 1 1! regload [1] $end
$var wire 1 2! regload [0] $end
$var wire 1 3! trunc [1] $end
$var wire 1 4! trunc [0] $end
$var wire 1 5! hlt $end
$var wire 1 6! siic $end
$var wire 1 7! rti $end
$var wire 1 8! Cout $end
$var wire 1 9! branch_and $end
$var wire 1 :! zero_out $end
$var reg 1 ;! branch_alu_out $end
$var wire 1 <! AltB $end
$var wire 1 =! AgtB $end
$var wire 1 >! AeqB $end
$var wire 1 ?! ALU_control_op [3] $end
$var wire 1 @! ALU_control_op [2] $end
$var wire 1 A! ALU_control_op [1] $end
$var wire 1 B! ALU_control_op [0] $end
$var wire 1 C! instruction [15] $end
$var wire 1 D! instruction [14] $end
$var wire 1 E! instruction [13] $end
$var wire 1 F! instruction [12] $end
$var wire 1 G! instruction [11] $end
$var wire 1 H! instruction [10] $end
$var wire 1 I! instruction [9] $end
$var wire 1 J! instruction [8] $end
$var wire 1 K! instruction [7] $end
$var wire 1 L! instruction [6] $end
$var wire 1 M! instruction [5] $end
$var wire 1 N! instruction [4] $end
$var wire 1 O! instruction [3] $end
$var wire 1 P! instruction [2] $end
$var wire 1 Q! instruction [1] $end
$var wire 1 R! instruction [0] $end
$var wire 1 S! se_instruction_7_0 [15] $end
$var wire 1 T! se_instruction_7_0 [14] $end
$var wire 1 U! se_instruction_7_0 [13] $end
$var wire 1 V! se_instruction_7_0 [12] $end
$var wire 1 W! se_instruction_7_0 [11] $end
$var wire 1 X! se_instruction_7_0 [10] $end
$var wire 1 Y! se_instruction_7_0 [9] $end
$var wire 1 Z! se_instruction_7_0 [8] $end
$var wire 1 [! se_instruction_7_0 [7] $end
$var wire 1 \! se_instruction_7_0 [6] $end
$var wire 1 ]! se_instruction_7_0 [5] $end
$var wire 1 ^! se_instruction_7_0 [4] $end
$var wire 1 _! se_instruction_7_0 [3] $end
$var wire 1 `! se_instruction_7_0 [2] $end
$var wire 1 a! se_instruction_7_0 [1] $end
$var wire 1 b! se_instruction_7_0 [0] $end
$var wire 1 c! ze_instruction_7_0 [15] $end
$var wire 1 d! ze_instruction_7_0 [14] $end
$var wire 1 e! ze_instruction_7_0 [13] $end
$var wire 1 f! ze_instruction_7_0 [12] $end
$var wire 1 g! ze_instruction_7_0 [11] $end
$var wire 1 h! ze_instruction_7_0 [10] $end
$var wire 1 i! ze_instruction_7_0 [9] $end
$var wire 1 j! ze_instruction_7_0 [8] $end
$var wire 1 k! ze_instruction_7_0 [7] $end
$var wire 1 l! ze_instruction_7_0 [6] $end
$var wire 1 m! ze_instruction_7_0 [5] $end
$var wire 1 n! ze_instruction_7_0 [4] $end
$var wire 1 o! ze_instruction_7_0 [3] $end
$var wire 1 p! ze_instruction_7_0 [2] $end
$var wire 1 q! ze_instruction_7_0 [1] $end
$var wire 1 r! ze_instruction_7_0 [0] $end
$var wire 1 s! se_instruction_4_0 [15] $end
$var wire 1 t! se_instruction_4_0 [14] $end
$var wire 1 u! se_instruction_4_0 [13] $end
$var wire 1 v! se_instruction_4_0 [12] $end
$var wire 1 w! se_instruction_4_0 [11] $end
$var wire 1 x! se_instruction_4_0 [10] $end
$var wire 1 y! se_instruction_4_0 [9] $end
$var wire 1 z! se_instruction_4_0 [8] $end
$var wire 1 {! se_instruction_4_0 [7] $end
$var wire 1 |! se_instruction_4_0 [6] $end
$var wire 1 }! se_instruction_4_0 [5] $end
$var wire 1 ~! se_instruction_4_0 [4] $end
$var wire 1 !" se_instruction_4_0 [3] $end
$var wire 1 "" se_instruction_4_0 [2] $end
$var wire 1 #" se_instruction_4_0 [1] $end
$var wire 1 $" se_instruction_4_0 [0] $end
$var wire 1 %" ALU_out [15] $end
$var wire 1 &" ALU_out [14] $end
$var wire 1 '" ALU_out [13] $end
$var wire 1 (" ALU_out [12] $end
$var wire 1 )" ALU_out [11] $end
$var wire 1 *" ALU_out [10] $end
$var wire 1 +" ALU_out [9] $end
$var wire 1 ," ALU_out [8] $end
$var wire 1 -" ALU_out [7] $end
$var wire 1 ." ALU_out [6] $end
$var wire 1 /" ALU_out [5] $end
$var wire 1 0" ALU_out [4] $end
$var wire 1 1" ALU_out [3] $end
$var wire 1 2" ALU_out [2] $end
$var wire 1 3" ALU_out [1] $end
$var wire 1 4" ALU_out [0] $end
$var wire 1 5" PC_adder_out [15] $end
$var wire 1 6" PC_adder_out [14] $end
$var wire 1 7" PC_adder_out [13] $end
$var wire 1 8" PC_adder_out [12] $end
$var wire 1 9" PC_adder_out [11] $end
$var wire 1 :" PC_adder_out [10] $end
$var wire 1 ;" PC_adder_out [9] $end
$var wire 1 <" PC_adder_out [8] $end
$var wire 1 =" PC_adder_out [7] $end
$var wire 1 >" PC_adder_out [6] $end
$var wire 1 ?" PC_adder_out [5] $end
$var wire 1 @" PC_adder_out [4] $end
$var wire 1 A" PC_adder_out [3] $end
$var wire 1 B" PC_adder_out [2] $end
$var wire 1 C" PC_adder_out [1] $end
$var wire 1 D" PC_adder_out [0] $end
$var wire 1 E" adder_ex_out [15] $end
$var wire 1 F" adder_ex_out [14] $end
$var wire 1 G" adder_ex_out [13] $end
$var wire 1 H" adder_ex_out [12] $end
$var wire 1 I" adder_ex_out [11] $end
$var wire 1 J" adder_ex_out [10] $end
$var wire 1 K" adder_ex_out [9] $end
$var wire 1 L" adder_ex_out [8] $end
$var wire 1 M" adder_ex_out [7] $end
$var wire 1 N" adder_ex_out [6] $end
$var wire 1 O" adder_ex_out [5] $end
$var wire 1 P" adder_ex_out [4] $end
$var wire 1 Q" adder_ex_out [3] $end
$var wire 1 R" adder_ex_out [2] $end
$var wire 1 S" adder_ex_out [1] $end
$var wire 1 T" adder_ex_out [0] $end
$var wire 1 U" jump_shift [15] $end
$var wire 1 V" jump_shift [14] $end
$var wire 1 W" jump_shift [13] $end
$var wire 1 X" jump_shift [12] $end
$var wire 1 Y" jump_shift [11] $end
$var wire 1 Z" jump_shift [10] $end
$var wire 1 [" jump_shift [9] $end
$var wire 1 \" jump_shift [8] $end
$var wire 1 ]" jump_shift [7] $end
$var wire 1 ^" jump_shift [6] $end
$var wire 1 _" jump_shift [5] $end
$var wire 1 `" jump_shift [4] $end
$var wire 1 a" jump_shift [3] $end
$var wire 1 b" jump_shift [2] $end
$var wire 1 c" jump_shift [1] $end
$var wire 1 d" jump_shift [0] $end
$var wire 1 e" mem_rd_data [15] $end
$var wire 1 f" mem_rd_data [14] $end
$var wire 1 g" mem_rd_data [13] $end
$var wire 1 h" mem_rd_data [12] $end
$var wire 1 i" mem_rd_data [11] $end
$var wire 1 j" mem_rd_data [10] $end
$var wire 1 k" mem_rd_data [9] $end
$var wire 1 l" mem_rd_data [8] $end
$var wire 1 m" mem_rd_data [7] $end
$var wire 1 n" mem_rd_data [6] $end
$var wire 1 o" mem_rd_data [5] $end
$var wire 1 p" mem_rd_data [4] $end
$var wire 1 q" mem_rd_data [3] $end
$var wire 1 r" mem_rd_data [2] $end
$var wire 1 s" mem_rd_data [1] $end
$var wire 1 t" mem_rd_data [0] $end
$var wire 1 u" read1Data [15] $end
$var wire 1 v" read1Data [14] $end
$var wire 1 w" read1Data [13] $end
$var wire 1 x" read1Data [12] $end
$var wire 1 y" read1Data [11] $end
$var wire 1 z" read1Data [10] $end
$var wire 1 {" read1Data [9] $end
$var wire 1 |" read1Data [8] $end
$var wire 1 }" read1Data [7] $end
$var wire 1 ~" read1Data [6] $end
$var wire 1 !# read1Data [5] $end
$var wire 1 "# read1Data [4] $end
$var wire 1 ## read1Data [3] $end
$var wire 1 $# read1Data [2] $end
$var wire 1 %# read1Data [1] $end
$var wire 1 &# read1Data [0] $end
$var wire 1 '# read2Data [15] $end
$var wire 1 (# read2Data [14] $end
$var wire 1 )# read2Data [13] $end
$var wire 1 *# read2Data [12] $end
$var wire 1 +# read2Data [11] $end
$var wire 1 ,# read2Data [10] $end
$var wire 1 -# read2Data [9] $end
$var wire 1 .# read2Data [8] $end
$var wire 1 /# read2Data [7] $end
$var wire 1 0# read2Data [6] $end
$var wire 1 1# read2Data [5] $end
$var wire 1 2# read2Data [4] $end
$var wire 1 3# read2Data [3] $end
$var wire 1 4# read2Data [2] $end
$var wire 1 5# read2Data [1] $end
$var wire 1 6# read2Data [0] $end
$var wire 1 7# writeData [15] $end
$var wire 1 8# writeData [14] $end
$var wire 1 9# writeData [13] $end
$var wire 1 :# writeData [12] $end
$var wire 1 ;# writeData [11] $end
$var wire 1 <# writeData [10] $end
$var wire 1 =# writeData [9] $end
$var wire 1 ># writeData [8] $end
$var wire 1 ?# writeData [7] $end
$var wire 1 @# writeData [6] $end
$var wire 1 A# writeData [5] $end
$var wire 1 B# writeData [4] $end
$var wire 1 C# writeData [3] $end
$var wire 1 D# writeData [2] $end
$var wire 1 E# writeData [1] $end
$var wire 1 F# writeData [0] $end
$var wire 1 G# comp_value_out $end
$var wire 1 H# err_reg_mod $end

$scope module fetch_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 9! branch_and $end
$var wire 1 %" ALU_out [15] $end
$var wire 1 &" ALU_out [14] $end
$var wire 1 '" ALU_out [13] $end
$var wire 1 (" ALU_out [12] $end
$var wire 1 )" ALU_out [11] $end
$var wire 1 *" ALU_out [10] $end
$var wire 1 +" ALU_out [9] $end
$var wire 1 ," ALU_out [8] $end
$var wire 1 -" ALU_out [7] $end
$var wire 1 ." ALU_out [6] $end
$var wire 1 /" ALU_out [5] $end
$var wire 1 0" ALU_out [4] $end
$var wire 1 1" ALU_out [3] $end
$var wire 1 2" ALU_out [2] $end
$var wire 1 3" ALU_out [1] $end
$var wire 1 4" ALU_out [0] $end
$var wire 1 E" adder_ex_out [15] $end
$var wire 1 F" adder_ex_out [14] $end
$var wire 1 G" adder_ex_out [13] $end
$var wire 1 H" adder_ex_out [12] $end
$var wire 1 I" adder_ex_out [11] $end
$var wire 1 J" adder_ex_out [10] $end
$var wire 1 K" adder_ex_out [9] $end
$var wire 1 L" adder_ex_out [8] $end
$var wire 1 M" adder_ex_out [7] $end
$var wire 1 N" adder_ex_out [6] $end
$var wire 1 O" adder_ex_out [5] $end
$var wire 1 P" adder_ex_out [4] $end
$var wire 1 Q" adder_ex_out [3] $end
$var wire 1 R" adder_ex_out [2] $end
$var wire 1 S" adder_ex_out [1] $end
$var wire 1 T" adder_ex_out [0] $end
$var wire 1 &! jump [1] $end
$var wire 1 '! jump [0] $end
$var wire 1 5! hlt $end
$var wire 1 7! rti $end
$var wire 1 6! siic $end
$var wire 1 I# err $end
$var wire 1 C! instruction [15] $end
$var wire 1 D! instruction [14] $end
$var wire 1 E! instruction [13] $end
$var wire 1 F! instruction [12] $end
$var wire 1 G! instruction [11] $end
$var wire 1 H! instruction [10] $end
$var wire 1 I! instruction [9] $end
$var wire 1 J! instruction [8] $end
$var wire 1 K! instruction [7] $end
$var wire 1 L! instruction [6] $end
$var wire 1 M! instruction [5] $end
$var wire 1 N! instruction [4] $end
$var wire 1 O! instruction [3] $end
$var wire 1 P! instruction [2] $end
$var wire 1 Q! instruction [1] $end
$var wire 1 R! instruction [0] $end
$var wire 1 5" PC_adder_out [15] $end
$var wire 1 6" PC_adder_out [14] $end
$var wire 1 7" PC_adder_out [13] $end
$var wire 1 8" PC_adder_out [12] $end
$var wire 1 9" PC_adder_out [11] $end
$var wire 1 :" PC_adder_out [10] $end
$var wire 1 ;" PC_adder_out [9] $end
$var wire 1 <" PC_adder_out [8] $end
$var wire 1 =" PC_adder_out [7] $end
$var wire 1 >" PC_adder_out [6] $end
$var wire 1 ?" PC_adder_out [5] $end
$var wire 1 @" PC_adder_out [4] $end
$var wire 1 A" PC_adder_out [3] $end
$var wire 1 B" PC_adder_out [2] $end
$var wire 1 C" PC_adder_out [1] $end
$var wire 1 D" PC_adder_out [0] $end
$var wire 1 J# mux5_out [15] $end
$var wire 1 K# mux5_out [14] $end
$var wire 1 L# mux5_out [13] $end
$var wire 1 M# mux5_out [12] $end
$var wire 1 N# mux5_out [11] $end
$var wire 1 O# mux5_out [10] $end
$var wire 1 P# mux5_out [9] $end
$var wire 1 Q# mux5_out [8] $end
$var wire 1 R# mux5_out [7] $end
$var wire 1 S# mux5_out [6] $end
$var wire 1 T# mux5_out [5] $end
$var wire 1 U# mux5_out [4] $end
$var wire 1 V# mux5_out [3] $end
$var wire 1 W# mux5_out [2] $end
$var wire 1 X# mux5_out [1] $end
$var wire 1 Y# mux5_out [0] $end
$var wire 1 Z# jump_shift [15] $end
$var wire 1 [# jump_shift [14] $end
$var wire 1 \# jump_shift [13] $end
$var wire 1 ]# jump_shift [12] $end
$var wire 1 ^# jump_shift [11] $end
$var wire 1 _# jump_shift [10] $end
$var wire 1 `# jump_shift [9] $end
$var wire 1 a# jump_shift [8] $end
$var wire 1 b# jump_shift [7] $end
$var wire 1 c# jump_shift [6] $end
$var wire 1 d# jump_shift [5] $end
$var wire 1 e# jump_shift [4] $end
$var wire 1 f# jump_shift [3] $end
$var wire 1 g# jump_shift [2] $end
$var wire 1 h# jump_shift [1] $end
$var wire 1 i# jump_shift [0] $end
$var wire 1 j# jump_adder_out [15] $end
$var wire 1 k# jump_adder_out [14] $end
$var wire 1 l# jump_adder_out [13] $end
$var wire 1 m# jump_adder_out [12] $end
$var wire 1 n# jump_adder_out [11] $end
$var wire 1 o# jump_adder_out [10] $end
$var wire 1 p# jump_adder_out [9] $end
$var wire 1 q# jump_adder_out [8] $end
$var wire 1 r# jump_adder_out [7] $end
$var wire 1 s# jump_adder_out [6] $end
$var wire 1 t# jump_adder_out [5] $end
$var wire 1 u# jump_adder_out [4] $end
$var wire 1 v# jump_adder_out [3] $end
$var wire 1 w# jump_adder_out [2] $end
$var wire 1 x# jump_adder_out [1] $end
$var wire 1 y# jump_adder_out [0] $end
$var wire 1 z# PC_in [15] $end
$var wire 1 {# PC_in [14] $end
$var wire 1 |# PC_in [13] $end
$var wire 1 }# PC_in [12] $end
$var wire 1 ~# PC_in [11] $end
$var wire 1 !$ PC_in [10] $end
$var wire 1 "$ PC_in [9] $end
$var wire 1 #$ PC_in [8] $end
$var wire 1 $$ PC_in [7] $end
$var wire 1 %$ PC_in [6] $end
$var wire 1 &$ PC_in [5] $end
$var wire 1 '$ PC_in [4] $end
$var wire 1 ($ PC_in [3] $end
$var wire 1 )$ PC_in [2] $end
$var wire 1 *$ PC_in [1] $end
$var wire 1 +$ PC_in [0] $end
$var wire 1 ,$ PC_in_i [15] $end
$var wire 1 -$ PC_in_i [14] $end
$var wire 1 .$ PC_in_i [13] $end
$var wire 1 /$ PC_in_i [12] $end
$var wire 1 0$ PC_in_i [11] $end
$var wire 1 1$ PC_in_i [10] $end
$var wire 1 2$ PC_in_i [9] $end
$var wire 1 3$ PC_in_i [8] $end
$var wire 1 4$ PC_in_i [7] $end
$var wire 1 5$ PC_in_i [6] $end
$var wire 1 6$ PC_in_i [5] $end
$var wire 1 7$ PC_in_i [4] $end
$var wire 1 8$ PC_in_i [3] $end
$var wire 1 9$ PC_in_i [2] $end
$var wire 1 :$ PC_in_i [1] $end
$var wire 1 ;$ PC_in_i [0] $end
$var wire 1 <$ PC_out [15] $end
$var wire 1 =$ PC_out [14] $end
$var wire 1 >$ PC_out [13] $end
$var wire 1 ?$ PC_out [12] $end
$var wire 1 @$ PC_out [11] $end
$var wire 1 A$ PC_out [10] $end
$var wire 1 B$ PC_out [9] $end
$var wire 1 C$ PC_out [8] $end
$var wire 1 D$ PC_out [7] $end
$var wire 1 E$ PC_out [6] $end
$var wire 1 F$ PC_out [5] $end
$var wire 1 G$ PC_out [4] $end
$var wire 1 H$ PC_out [3] $end
$var wire 1 I$ PC_out [2] $end
$var wire 1 J$ PC_out [1] $end
$var wire 1 K$ PC_out [0] $end
$var wire 1 L$ EPC_reg [15] $end
$var wire 1 M$ EPC_reg [14] $end
$var wire 1 N$ EPC_reg [13] $end
$var wire 1 O$ EPC_reg [12] $end
$var wire 1 P$ EPC_reg [11] $end
$var wire 1 Q$ EPC_reg [10] $end
$var wire 1 R$ EPC_reg [9] $end
$var wire 1 S$ EPC_reg [8] $end
$var wire 1 T$ EPC_reg [7] $end
$var wire 1 U$ EPC_reg [6] $end
$var wire 1 V$ EPC_reg [5] $end
$var wire 1 W$ EPC_reg [4] $end
$var wire 1 X$ EPC_reg [3] $end
$var wire 1 Y$ EPC_reg [2] $end
$var wire 1 Z$ EPC_reg [1] $end
$var wire 1 [$ EPC_reg [0] $end

$scope module mux4 $end
$var wire 1 J# InA [15] $end
$var wire 1 K# InA [14] $end
$var wire 1 L# InA [13] $end
$var wire 1 M# InA [12] $end
$var wire 1 N# InA [11] $end
$var wire 1 O# InA [10] $end
$var wire 1 P# InA [9] $end
$var wire 1 Q# InA [8] $end
$var wire 1 R# InA [7] $end
$var wire 1 S# InA [6] $end
$var wire 1 T# InA [5] $end
$var wire 1 U# InA [4] $end
$var wire 1 V# InA [3] $end
$var wire 1 W# InA [2] $end
$var wire 1 X# InA [1] $end
$var wire 1 Y# InA [0] $end
$var wire 1 j# InB [15] $end
$var wire 1 k# InB [14] $end
$var wire 1 l# InB [13] $end
$var wire 1 m# InB [12] $end
$var wire 1 n# InB [11] $end
$var wire 1 o# InB [10] $end
$var wire 1 p# InB [9] $end
$var wire 1 q# InB [8] $end
$var wire 1 r# InB [7] $end
$var wire 1 s# InB [6] $end
$var wire 1 t# InB [5] $end
$var wire 1 u# InB [4] $end
$var wire 1 v# InB [3] $end
$var wire 1 w# InB [2] $end
$var wire 1 x# InB [1] $end
$var wire 1 y# InB [0] $end
$var wire 1 %" InC [15] $end
$var wire 1 &" InC [14] $end
$var wire 1 '" InC [13] $end
$var wire 1 (" InC [12] $end
$var wire 1 )" InC [11] $end
$var wire 1 *" InC [10] $end
$var wire 1 +" InC [9] $end
$var wire 1 ," InC [8] $end
$var wire 1 -" InC [7] $end
$var wire 1 ." InC [6] $end
$var wire 1 /" InC [5] $end
$var wire 1 0" InC [4] $end
$var wire 1 1" InC [3] $end
$var wire 1 2" InC [2] $end
$var wire 1 3" InC [1] $end
$var wire 1 4" InC [0] $end
$var wire 1 \$ InD [15] $end
$var wire 1 ]$ InD [14] $end
$var wire 1 ^$ InD [13] $end
$var wire 1 _$ InD [12] $end
$var wire 1 `$ InD [11] $end
$var wire 1 a$ InD [10] $end
$var wire 1 b$ InD [9] $end
$var wire 1 c$ InD [8] $end
$var wire 1 d$ InD [7] $end
$var wire 1 e$ InD [6] $end
$var wire 1 f$ InD [5] $end
$var wire 1 g$ InD [4] $end
$var wire 1 h$ InD [3] $end
$var wire 1 i$ InD [2] $end
$var wire 1 j$ InD [1] $end
$var wire 1 k$ InD [0] $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 ,$ Out [15] $end
$var wire 1 -$ Out [14] $end
$var wire 1 .$ Out [13] $end
$var wire 1 /$ Out [12] $end
$var wire 1 0$ Out [11] $end
$var wire 1 1$ Out [10] $end
$var wire 1 2$ Out [9] $end
$var wire 1 3$ Out [8] $end
$var wire 1 4$ Out [7] $end
$var wire 1 5$ Out [6] $end
$var wire 1 6$ Out [5] $end
$var wire 1 7$ Out [4] $end
$var wire 1 8$ Out [3] $end
$var wire 1 9$ Out [2] $end
$var wire 1 :$ Out [1] $end
$var wire 1 ;$ Out [0] $end

$scope module inst_0 $end
$var wire 1 Y# InA $end
$var wire 1 y# InB $end
$var wire 1 4" InC $end
$var wire 1 k$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 ;$ Out $end
$var wire 1 l$ Out_1 $end
$var wire 1 m$ Out_2 $end

$scope module inst_1 $end
$var wire 1 Y# InA $end
$var wire 1 y# InB $end
$var wire 1 '! S $end
$var wire 1 l$ Out $end
$var wire 1 n$ notS $end
$var wire 1 o$ pdt1 $end
$var wire 1 p$ pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 n$ out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 y# in2 $end
$var wire 1 o$ out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 n$ in1 $end
$var wire 1 Y# in2 $end
$var wire 1 p$ out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 o$ in1 $end
$var wire 1 p$ in2 $end
$var wire 1 l$ out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 4" InA $end
$var wire 1 k$ InB $end
$var wire 1 '! S $end
$var wire 1 m$ Out $end
$var wire 1 q$ notS $end
$var wire 1 r$ pdt1 $end
$var wire 1 s$ pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 q$ out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 k$ in2 $end
$var wire 1 r$ out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 q$ in1 $end
$var wire 1 4" in2 $end
$var wire 1 s$ out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 r$ in1 $end
$var wire 1 s$ in2 $end
$var wire 1 m$ out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 l$ InA $end
$var wire 1 m$ InB $end
$var wire 1 &! S $end
$var wire 1 ;$ Out $end
$var wire 1 t$ notS $end
$var wire 1 u$ pdt1 $end
$var wire 1 v$ pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 t$ out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 m$ in2 $end
$var wire 1 u$ out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 t$ in1 $end
$var wire 1 l$ in2 $end
$var wire 1 v$ out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 u$ in1 $end
$var wire 1 v$ in2 $end
$var wire 1 ;$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 X# InA $end
$var wire 1 x# InB $end
$var wire 1 3" InC $end
$var wire 1 j$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 :$ Out $end
$var wire 1 w$ Out_1 $end
$var wire 1 x$ Out_2 $end

$scope module inst_1 $end
$var wire 1 X# InA $end
$var wire 1 x# InB $end
$var wire 1 '! S $end
$var wire 1 w$ Out $end
$var wire 1 y$ notS $end
$var wire 1 z$ pdt1 $end
$var wire 1 {$ pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 y$ out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 x# in2 $end
$var wire 1 z$ out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 y$ in1 $end
$var wire 1 X# in2 $end
$var wire 1 {$ out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 z$ in1 $end
$var wire 1 {$ in2 $end
$var wire 1 w$ out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 3" InA $end
$var wire 1 j$ InB $end
$var wire 1 '! S $end
$var wire 1 x$ Out $end
$var wire 1 |$ notS $end
$var wire 1 }$ pdt1 $end
$var wire 1 ~$ pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 |$ out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 j$ in2 $end
$var wire 1 }$ out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 |$ in1 $end
$var wire 1 3" in2 $end
$var wire 1 ~$ out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 }$ in1 $end
$var wire 1 ~$ in2 $end
$var wire 1 x$ out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 w$ InA $end
$var wire 1 x$ InB $end
$var wire 1 &! S $end
$var wire 1 :$ Out $end
$var wire 1 !% notS $end
$var wire 1 "% pdt1 $end
$var wire 1 #% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 !% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 x$ in2 $end
$var wire 1 "% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 !% in1 $end
$var wire 1 w$ in2 $end
$var wire 1 #% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 "% in1 $end
$var wire 1 #% in2 $end
$var wire 1 :$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 W# InA $end
$var wire 1 w# InB $end
$var wire 1 2" InC $end
$var wire 1 i$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 9$ Out $end
$var wire 1 $% Out_1 $end
$var wire 1 %% Out_2 $end

$scope module inst_1 $end
$var wire 1 W# InA $end
$var wire 1 w# InB $end
$var wire 1 '! S $end
$var wire 1 $% Out $end
$var wire 1 &% notS $end
$var wire 1 '% pdt1 $end
$var wire 1 (% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 &% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 w# in2 $end
$var wire 1 '% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 &% in1 $end
$var wire 1 W# in2 $end
$var wire 1 (% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 '% in1 $end
$var wire 1 (% in2 $end
$var wire 1 $% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 2" InA $end
$var wire 1 i$ InB $end
$var wire 1 '! S $end
$var wire 1 %% Out $end
$var wire 1 )% notS $end
$var wire 1 *% pdt1 $end
$var wire 1 +% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 )% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 i$ in2 $end
$var wire 1 *% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 )% in1 $end
$var wire 1 2" in2 $end
$var wire 1 +% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 *% in1 $end
$var wire 1 +% in2 $end
$var wire 1 %% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 $% InA $end
$var wire 1 %% InB $end
$var wire 1 &! S $end
$var wire 1 9$ Out $end
$var wire 1 ,% notS $end
$var wire 1 -% pdt1 $end
$var wire 1 .% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 ,% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 %% in2 $end
$var wire 1 -% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ,% in1 $end
$var wire 1 $% in2 $end
$var wire 1 .% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 -% in1 $end
$var wire 1 .% in2 $end
$var wire 1 9$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 V# InA $end
$var wire 1 v# InB $end
$var wire 1 1" InC $end
$var wire 1 h$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 8$ Out $end
$var wire 1 /% Out_1 $end
$var wire 1 0% Out_2 $end

$scope module inst_1 $end
$var wire 1 V# InA $end
$var wire 1 v# InB $end
$var wire 1 '! S $end
$var wire 1 /% Out $end
$var wire 1 1% notS $end
$var wire 1 2% pdt1 $end
$var wire 1 3% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 1% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 v# in2 $end
$var wire 1 2% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 1% in1 $end
$var wire 1 V# in2 $end
$var wire 1 3% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 2% in1 $end
$var wire 1 3% in2 $end
$var wire 1 /% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 1" InA $end
$var wire 1 h$ InB $end
$var wire 1 '! S $end
$var wire 1 0% Out $end
$var wire 1 4% notS $end
$var wire 1 5% pdt1 $end
$var wire 1 6% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 4% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 h$ in2 $end
$var wire 1 5% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 4% in1 $end
$var wire 1 1" in2 $end
$var wire 1 6% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 5% in1 $end
$var wire 1 6% in2 $end
$var wire 1 0% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 /% InA $end
$var wire 1 0% InB $end
$var wire 1 &! S $end
$var wire 1 8$ Out $end
$var wire 1 7% notS $end
$var wire 1 8% pdt1 $end
$var wire 1 9% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 7% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 0% in2 $end
$var wire 1 8% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 7% in1 $end
$var wire 1 /% in2 $end
$var wire 1 9% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 8% in1 $end
$var wire 1 9% in2 $end
$var wire 1 8$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 U# InA $end
$var wire 1 u# InB $end
$var wire 1 0" InC $end
$var wire 1 g$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 7$ Out $end
$var wire 1 :% Out_1 $end
$var wire 1 ;% Out_2 $end

$scope module inst_1 $end
$var wire 1 U# InA $end
$var wire 1 u# InB $end
$var wire 1 '! S $end
$var wire 1 :% Out $end
$var wire 1 <% notS $end
$var wire 1 =% pdt1 $end
$var wire 1 >% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 <% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 u# in2 $end
$var wire 1 =% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 <% in1 $end
$var wire 1 U# in2 $end
$var wire 1 >% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 =% in1 $end
$var wire 1 >% in2 $end
$var wire 1 :% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 0" InA $end
$var wire 1 g$ InB $end
$var wire 1 '! S $end
$var wire 1 ;% Out $end
$var wire 1 ?% notS $end
$var wire 1 @% pdt1 $end
$var wire 1 A% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 ?% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 g$ in2 $end
$var wire 1 @% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ?% in1 $end
$var wire 1 0" in2 $end
$var wire 1 A% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 @% in1 $end
$var wire 1 A% in2 $end
$var wire 1 ;% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 :% InA $end
$var wire 1 ;% InB $end
$var wire 1 &! S $end
$var wire 1 7$ Out $end
$var wire 1 B% notS $end
$var wire 1 C% pdt1 $end
$var wire 1 D% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 B% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 ;% in2 $end
$var wire 1 C% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 B% in1 $end
$var wire 1 :% in2 $end
$var wire 1 D% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 C% in1 $end
$var wire 1 D% in2 $end
$var wire 1 7$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 T# InA $end
$var wire 1 t# InB $end
$var wire 1 /" InC $end
$var wire 1 f$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 6$ Out $end
$var wire 1 E% Out_1 $end
$var wire 1 F% Out_2 $end

$scope module inst_1 $end
$var wire 1 T# InA $end
$var wire 1 t# InB $end
$var wire 1 '! S $end
$var wire 1 E% Out $end
$var wire 1 G% notS $end
$var wire 1 H% pdt1 $end
$var wire 1 I% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 G% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 t# in2 $end
$var wire 1 H% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 G% in1 $end
$var wire 1 T# in2 $end
$var wire 1 I% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 H% in1 $end
$var wire 1 I% in2 $end
$var wire 1 E% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 /" InA $end
$var wire 1 f$ InB $end
$var wire 1 '! S $end
$var wire 1 F% Out $end
$var wire 1 J% notS $end
$var wire 1 K% pdt1 $end
$var wire 1 L% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 J% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 f$ in2 $end
$var wire 1 K% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 J% in1 $end
$var wire 1 /" in2 $end
$var wire 1 L% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 K% in1 $end
$var wire 1 L% in2 $end
$var wire 1 F% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 E% InA $end
$var wire 1 F% InB $end
$var wire 1 &! S $end
$var wire 1 6$ Out $end
$var wire 1 M% notS $end
$var wire 1 N% pdt1 $end
$var wire 1 O% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 M% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 F% in2 $end
$var wire 1 N% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 M% in1 $end
$var wire 1 E% in2 $end
$var wire 1 O% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 N% in1 $end
$var wire 1 O% in2 $end
$var wire 1 6$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 S# InA $end
$var wire 1 s# InB $end
$var wire 1 ." InC $end
$var wire 1 e$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 5$ Out $end
$var wire 1 P% Out_1 $end
$var wire 1 Q% Out_2 $end

$scope module inst_1 $end
$var wire 1 S# InA $end
$var wire 1 s# InB $end
$var wire 1 '! S $end
$var wire 1 P% Out $end
$var wire 1 R% notS $end
$var wire 1 S% pdt1 $end
$var wire 1 T% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 R% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 s# in2 $end
$var wire 1 S% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 R% in1 $end
$var wire 1 S# in2 $end
$var wire 1 T% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 S% in1 $end
$var wire 1 T% in2 $end
$var wire 1 P% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ." InA $end
$var wire 1 e$ InB $end
$var wire 1 '! S $end
$var wire 1 Q% Out $end
$var wire 1 U% notS $end
$var wire 1 V% pdt1 $end
$var wire 1 W% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 U% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 e$ in2 $end
$var wire 1 V% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 U% in1 $end
$var wire 1 ." in2 $end
$var wire 1 W% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 V% in1 $end
$var wire 1 W% in2 $end
$var wire 1 Q% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 P% InA $end
$var wire 1 Q% InB $end
$var wire 1 &! S $end
$var wire 1 5$ Out $end
$var wire 1 X% notS $end
$var wire 1 Y% pdt1 $end
$var wire 1 Z% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 X% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 Q% in2 $end
$var wire 1 Y% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 X% in1 $end
$var wire 1 P% in2 $end
$var wire 1 Z% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Y% in1 $end
$var wire 1 Z% in2 $end
$var wire 1 5$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 R# InA $end
$var wire 1 r# InB $end
$var wire 1 -" InC $end
$var wire 1 d$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 4$ Out $end
$var wire 1 [% Out_1 $end
$var wire 1 \% Out_2 $end

$scope module inst_1 $end
$var wire 1 R# InA $end
$var wire 1 r# InB $end
$var wire 1 '! S $end
$var wire 1 [% Out $end
$var wire 1 ]% notS $end
$var wire 1 ^% pdt1 $end
$var wire 1 _% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 ]% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 r# in2 $end
$var wire 1 ^% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ]% in1 $end
$var wire 1 R# in2 $end
$var wire 1 _% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ^% in1 $end
$var wire 1 _% in2 $end
$var wire 1 [% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 -" InA $end
$var wire 1 d$ InB $end
$var wire 1 '! S $end
$var wire 1 \% Out $end
$var wire 1 `% notS $end
$var wire 1 a% pdt1 $end
$var wire 1 b% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 `% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 d$ in2 $end
$var wire 1 a% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 `% in1 $end
$var wire 1 -" in2 $end
$var wire 1 b% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 a% in1 $end
$var wire 1 b% in2 $end
$var wire 1 \% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 [% InA $end
$var wire 1 \% InB $end
$var wire 1 &! S $end
$var wire 1 4$ Out $end
$var wire 1 c% notS $end
$var wire 1 d% pdt1 $end
$var wire 1 e% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 c% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 \% in2 $end
$var wire 1 d% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 c% in1 $end
$var wire 1 [% in2 $end
$var wire 1 e% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 d% in1 $end
$var wire 1 e% in2 $end
$var wire 1 4$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 Q# InA $end
$var wire 1 q# InB $end
$var wire 1 ," InC $end
$var wire 1 c$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 3$ Out $end
$var wire 1 f% Out_1 $end
$var wire 1 g% Out_2 $end

$scope module inst_1 $end
$var wire 1 Q# InA $end
$var wire 1 q# InB $end
$var wire 1 '! S $end
$var wire 1 f% Out $end
$var wire 1 h% notS $end
$var wire 1 i% pdt1 $end
$var wire 1 j% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 h% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 q# in2 $end
$var wire 1 i% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 h% in1 $end
$var wire 1 Q# in2 $end
$var wire 1 j% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 i% in1 $end
$var wire 1 j% in2 $end
$var wire 1 f% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ," InA $end
$var wire 1 c$ InB $end
$var wire 1 '! S $end
$var wire 1 g% Out $end
$var wire 1 k% notS $end
$var wire 1 l% pdt1 $end
$var wire 1 m% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 k% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 c$ in2 $end
$var wire 1 l% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 k% in1 $end
$var wire 1 ," in2 $end
$var wire 1 m% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 l% in1 $end
$var wire 1 m% in2 $end
$var wire 1 g% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 f% InA $end
$var wire 1 g% InB $end
$var wire 1 &! S $end
$var wire 1 3$ Out $end
$var wire 1 n% notS $end
$var wire 1 o% pdt1 $end
$var wire 1 p% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 n% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 g% in2 $end
$var wire 1 o% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 n% in1 $end
$var wire 1 f% in2 $end
$var wire 1 p% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 o% in1 $end
$var wire 1 p% in2 $end
$var wire 1 3$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 P# InA $end
$var wire 1 p# InB $end
$var wire 1 +" InC $end
$var wire 1 b$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 2$ Out $end
$var wire 1 q% Out_1 $end
$var wire 1 r% Out_2 $end

$scope module inst_1 $end
$var wire 1 P# InA $end
$var wire 1 p# InB $end
$var wire 1 '! S $end
$var wire 1 q% Out $end
$var wire 1 s% notS $end
$var wire 1 t% pdt1 $end
$var wire 1 u% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 s% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 p# in2 $end
$var wire 1 t% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 s% in1 $end
$var wire 1 P# in2 $end
$var wire 1 u% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 t% in1 $end
$var wire 1 u% in2 $end
$var wire 1 q% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 +" InA $end
$var wire 1 b$ InB $end
$var wire 1 '! S $end
$var wire 1 r% Out $end
$var wire 1 v% notS $end
$var wire 1 w% pdt1 $end
$var wire 1 x% pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 v% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 b$ in2 $end
$var wire 1 w% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 v% in1 $end
$var wire 1 +" in2 $end
$var wire 1 x% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 w% in1 $end
$var wire 1 x% in2 $end
$var wire 1 r% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 q% InA $end
$var wire 1 r% InB $end
$var wire 1 &! S $end
$var wire 1 2$ Out $end
$var wire 1 y% notS $end
$var wire 1 z% pdt1 $end
$var wire 1 {% pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 y% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 r% in2 $end
$var wire 1 z% out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 y% in1 $end
$var wire 1 q% in2 $end
$var wire 1 {% out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 z% in1 $end
$var wire 1 {% in2 $end
$var wire 1 2$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 O# InA $end
$var wire 1 o# InB $end
$var wire 1 *" InC $end
$var wire 1 a$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 1$ Out $end
$var wire 1 |% Out_1 $end
$var wire 1 }% Out_2 $end

$scope module inst_1 $end
$var wire 1 O# InA $end
$var wire 1 o# InB $end
$var wire 1 '! S $end
$var wire 1 |% Out $end
$var wire 1 ~% notS $end
$var wire 1 !& pdt1 $end
$var wire 1 "& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 ~% out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 o# in2 $end
$var wire 1 !& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ~% in1 $end
$var wire 1 O# in2 $end
$var wire 1 "& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 !& in1 $end
$var wire 1 "& in2 $end
$var wire 1 |% out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 *" InA $end
$var wire 1 a$ InB $end
$var wire 1 '! S $end
$var wire 1 }% Out $end
$var wire 1 #& notS $end
$var wire 1 $& pdt1 $end
$var wire 1 %& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 #& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 a$ in2 $end
$var wire 1 $& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 #& in1 $end
$var wire 1 *" in2 $end
$var wire 1 %& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 $& in1 $end
$var wire 1 %& in2 $end
$var wire 1 }% out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 |% InA $end
$var wire 1 }% InB $end
$var wire 1 &! S $end
$var wire 1 1$ Out $end
$var wire 1 && notS $end
$var wire 1 '& pdt1 $end
$var wire 1 (& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 && out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 }% in2 $end
$var wire 1 '& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 && in1 $end
$var wire 1 |% in2 $end
$var wire 1 (& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 '& in1 $end
$var wire 1 (& in2 $end
$var wire 1 1$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 N# InA $end
$var wire 1 n# InB $end
$var wire 1 )" InC $end
$var wire 1 `$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 0$ Out $end
$var wire 1 )& Out_1 $end
$var wire 1 *& Out_2 $end

$scope module inst_1 $end
$var wire 1 N# InA $end
$var wire 1 n# InB $end
$var wire 1 '! S $end
$var wire 1 )& Out $end
$var wire 1 +& notS $end
$var wire 1 ,& pdt1 $end
$var wire 1 -& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 +& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 n# in2 $end
$var wire 1 ,& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 +& in1 $end
$var wire 1 N# in2 $end
$var wire 1 -& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ,& in1 $end
$var wire 1 -& in2 $end
$var wire 1 )& out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 )" InA $end
$var wire 1 `$ InB $end
$var wire 1 '! S $end
$var wire 1 *& Out $end
$var wire 1 .& notS $end
$var wire 1 /& pdt1 $end
$var wire 1 0& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 .& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 `$ in2 $end
$var wire 1 /& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 .& in1 $end
$var wire 1 )" in2 $end
$var wire 1 0& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 /& in1 $end
$var wire 1 0& in2 $end
$var wire 1 *& out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 )& InA $end
$var wire 1 *& InB $end
$var wire 1 &! S $end
$var wire 1 0$ Out $end
$var wire 1 1& notS $end
$var wire 1 2& pdt1 $end
$var wire 1 3& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 1& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 *& in2 $end
$var wire 1 2& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 1& in1 $end
$var wire 1 )& in2 $end
$var wire 1 3& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 2& in1 $end
$var wire 1 3& in2 $end
$var wire 1 0$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 M# InA $end
$var wire 1 m# InB $end
$var wire 1 (" InC $end
$var wire 1 _$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 /$ Out $end
$var wire 1 4& Out_1 $end
$var wire 1 5& Out_2 $end

$scope module inst_1 $end
$var wire 1 M# InA $end
$var wire 1 m# InB $end
$var wire 1 '! S $end
$var wire 1 4& Out $end
$var wire 1 6& notS $end
$var wire 1 7& pdt1 $end
$var wire 1 8& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 6& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 m# in2 $end
$var wire 1 7& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 6& in1 $end
$var wire 1 M# in2 $end
$var wire 1 8& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 7& in1 $end
$var wire 1 8& in2 $end
$var wire 1 4& out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 (" InA $end
$var wire 1 _$ InB $end
$var wire 1 '! S $end
$var wire 1 5& Out $end
$var wire 1 9& notS $end
$var wire 1 :& pdt1 $end
$var wire 1 ;& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 9& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 _$ in2 $end
$var wire 1 :& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 9& in1 $end
$var wire 1 (" in2 $end
$var wire 1 ;& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 :& in1 $end
$var wire 1 ;& in2 $end
$var wire 1 5& out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 4& InA $end
$var wire 1 5& InB $end
$var wire 1 &! S $end
$var wire 1 /$ Out $end
$var wire 1 <& notS $end
$var wire 1 =& pdt1 $end
$var wire 1 >& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 <& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 5& in2 $end
$var wire 1 =& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 <& in1 $end
$var wire 1 4& in2 $end
$var wire 1 >& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 =& in1 $end
$var wire 1 >& in2 $end
$var wire 1 /$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 L# InA $end
$var wire 1 l# InB $end
$var wire 1 '" InC $end
$var wire 1 ^$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 .$ Out $end
$var wire 1 ?& Out_1 $end
$var wire 1 @& Out_2 $end

$scope module inst_1 $end
$var wire 1 L# InA $end
$var wire 1 l# InB $end
$var wire 1 '! S $end
$var wire 1 ?& Out $end
$var wire 1 A& notS $end
$var wire 1 B& pdt1 $end
$var wire 1 C& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 A& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 l# in2 $end
$var wire 1 B& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 A& in1 $end
$var wire 1 L# in2 $end
$var wire 1 C& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 B& in1 $end
$var wire 1 C& in2 $end
$var wire 1 ?& out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 '" InA $end
$var wire 1 ^$ InB $end
$var wire 1 '! S $end
$var wire 1 @& Out $end
$var wire 1 D& notS $end
$var wire 1 E& pdt1 $end
$var wire 1 F& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 D& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 ^$ in2 $end
$var wire 1 E& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 D& in1 $end
$var wire 1 '" in2 $end
$var wire 1 F& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 E& in1 $end
$var wire 1 F& in2 $end
$var wire 1 @& out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 ?& InA $end
$var wire 1 @& InB $end
$var wire 1 &! S $end
$var wire 1 .$ Out $end
$var wire 1 G& notS $end
$var wire 1 H& pdt1 $end
$var wire 1 I& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 G& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 @& in2 $end
$var wire 1 H& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 G& in1 $end
$var wire 1 ?& in2 $end
$var wire 1 I& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 H& in1 $end
$var wire 1 I& in2 $end
$var wire 1 .$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 K# InA $end
$var wire 1 k# InB $end
$var wire 1 &" InC $end
$var wire 1 ]$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 -$ Out $end
$var wire 1 J& Out_1 $end
$var wire 1 K& Out_2 $end

$scope module inst_1 $end
$var wire 1 K# InA $end
$var wire 1 k# InB $end
$var wire 1 '! S $end
$var wire 1 J& Out $end
$var wire 1 L& notS $end
$var wire 1 M& pdt1 $end
$var wire 1 N& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 L& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 k# in2 $end
$var wire 1 M& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 L& in1 $end
$var wire 1 K# in2 $end
$var wire 1 N& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 M& in1 $end
$var wire 1 N& in2 $end
$var wire 1 J& out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 &" InA $end
$var wire 1 ]$ InB $end
$var wire 1 '! S $end
$var wire 1 K& Out $end
$var wire 1 O& notS $end
$var wire 1 P& pdt1 $end
$var wire 1 Q& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 O& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 ]$ in2 $end
$var wire 1 P& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 O& in1 $end
$var wire 1 &" in2 $end
$var wire 1 Q& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 P& in1 $end
$var wire 1 Q& in2 $end
$var wire 1 K& out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 J& InA $end
$var wire 1 K& InB $end
$var wire 1 &! S $end
$var wire 1 -$ Out $end
$var wire 1 R& notS $end
$var wire 1 S& pdt1 $end
$var wire 1 T& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 R& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 K& in2 $end
$var wire 1 S& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 R& in1 $end
$var wire 1 J& in2 $end
$var wire 1 T& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 S& in1 $end
$var wire 1 T& in2 $end
$var wire 1 -$ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 J# InA $end
$var wire 1 j# InB $end
$var wire 1 %" InC $end
$var wire 1 \$ InD $end
$var wire 1 &! S [1] $end
$var wire 1 '! S [0] $end
$var wire 1 ,$ Out $end
$var wire 1 U& Out_1 $end
$var wire 1 V& Out_2 $end

$scope module inst_1 $end
$var wire 1 J# InA $end
$var wire 1 j# InB $end
$var wire 1 '! S $end
$var wire 1 U& Out $end
$var wire 1 W& notS $end
$var wire 1 X& pdt1 $end
$var wire 1 Y& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 W& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 j# in2 $end
$var wire 1 X& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 W& in1 $end
$var wire 1 J# in2 $end
$var wire 1 Y& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 X& in1 $end
$var wire 1 Y& in2 $end
$var wire 1 U& out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 %" InA $end
$var wire 1 \$ InB $end
$var wire 1 '! S $end
$var wire 1 V& Out $end
$var wire 1 Z& notS $end
$var wire 1 [& pdt1 $end
$var wire 1 \& pdt2 $end

$scope module not_inst $end
$var wire 1 '! in1 $end
$var wire 1 Z& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 '! in1 $end
$var wire 1 \$ in2 $end
$var wire 1 [& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 Z& in1 $end
$var wire 1 %" in2 $end
$var wire 1 \& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 [& in1 $end
$var wire 1 \& in2 $end
$var wire 1 V& out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 U& InA $end
$var wire 1 V& InB $end
$var wire 1 &! S $end
$var wire 1 ,$ Out $end
$var wire 1 ]& notS $end
$var wire 1 ^& pdt1 $end
$var wire 1 _& pdt2 $end

$scope module not_inst $end
$var wire 1 &! in1 $end
$var wire 1 ]& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 &! in1 $end
$var wire 1 V& in2 $end
$var wire 1 ^& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ]& in1 $end
$var wire 1 U& in2 $end
$var wire 1 _& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ^& in1 $end
$var wire 1 _& in2 $end
$var wire 1 ,$ out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux5 $end
$var wire 1 5" InA [15] $end
$var wire 1 6" InA [14] $end
$var wire 1 7" InA [13] $end
$var wire 1 8" InA [12] $end
$var wire 1 9" InA [11] $end
$var wire 1 :" InA [10] $end
$var wire 1 ;" InA [9] $end
$var wire 1 <" InA [8] $end
$var wire 1 =" InA [7] $end
$var wire 1 >" InA [6] $end
$var wire 1 ?" InA [5] $end
$var wire 1 @" InA [4] $end
$var wire 1 A" InA [3] $end
$var wire 1 B" InA [2] $end
$var wire 1 C" InA [1] $end
$var wire 1 D" InA [0] $end
$var wire 1 E" InB [15] $end
$var wire 1 F" InB [14] $end
$var wire 1 G" InB [13] $end
$var wire 1 H" InB [12] $end
$var wire 1 I" InB [11] $end
$var wire 1 J" InB [10] $end
$var wire 1 K" InB [9] $end
$var wire 1 L" InB [8] $end
$var wire 1 M" InB [7] $end
$var wire 1 N" InB [6] $end
$var wire 1 O" InB [5] $end
$var wire 1 P" InB [4] $end
$var wire 1 Q" InB [3] $end
$var wire 1 R" InB [2] $end
$var wire 1 S" InB [1] $end
$var wire 1 T" InB [0] $end
$var wire 1 9! S $end
$var wire 1 J# Out [15] $end
$var wire 1 K# Out [14] $end
$var wire 1 L# Out [13] $end
$var wire 1 M# Out [12] $end
$var wire 1 N# Out [11] $end
$var wire 1 O# Out [10] $end
$var wire 1 P# Out [9] $end
$var wire 1 Q# Out [8] $end
$var wire 1 R# Out [7] $end
$var wire 1 S# Out [6] $end
$var wire 1 T# Out [5] $end
$var wire 1 U# Out [4] $end
$var wire 1 V# Out [3] $end
$var wire 1 W# Out [2] $end
$var wire 1 X# Out [1] $end
$var wire 1 Y# Out [0] $end

$scope module inst_0 $end
$var wire 1 D" InA $end
$var wire 1 T" InB $end
$var wire 1 9! S $end
$var wire 1 Y# Out $end
$var wire 1 `& notS $end
$var wire 1 a& pdt1 $end
$var wire 1 b& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 `& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 T" in2 $end
$var wire 1 a& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 `& in1 $end
$var wire 1 D" in2 $end
$var wire 1 b& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 a& in1 $end
$var wire 1 b& in2 $end
$var wire 1 Y# out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 C" InA $end
$var wire 1 S" InB $end
$var wire 1 9! S $end
$var wire 1 X# Out $end
$var wire 1 c& notS $end
$var wire 1 d& pdt1 $end
$var wire 1 e& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 c& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 S" in2 $end
$var wire 1 d& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 c& in1 $end
$var wire 1 C" in2 $end
$var wire 1 e& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 d& in1 $end
$var wire 1 e& in2 $end
$var wire 1 X# out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 B" InA $end
$var wire 1 R" InB $end
$var wire 1 9! S $end
$var wire 1 W# Out $end
$var wire 1 f& notS $end
$var wire 1 g& pdt1 $end
$var wire 1 h& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 f& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 R" in2 $end
$var wire 1 g& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 f& in1 $end
$var wire 1 B" in2 $end
$var wire 1 h& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 g& in1 $end
$var wire 1 h& in2 $end
$var wire 1 W# out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 A" InA $end
$var wire 1 Q" InB $end
$var wire 1 9! S $end
$var wire 1 V# Out $end
$var wire 1 i& notS $end
$var wire 1 j& pdt1 $end
$var wire 1 k& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 i& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 Q" in2 $end
$var wire 1 j& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 i& in1 $end
$var wire 1 A" in2 $end
$var wire 1 k& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 j& in1 $end
$var wire 1 k& in2 $end
$var wire 1 V# out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 @" InA $end
$var wire 1 P" InB $end
$var wire 1 9! S $end
$var wire 1 U# Out $end
$var wire 1 l& notS $end
$var wire 1 m& pdt1 $end
$var wire 1 n& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 l& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 P" in2 $end
$var wire 1 m& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 l& in1 $end
$var wire 1 @" in2 $end
$var wire 1 n& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 m& in1 $end
$var wire 1 n& in2 $end
$var wire 1 U# out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 ?" InA $end
$var wire 1 O" InB $end
$var wire 1 9! S $end
$var wire 1 T# Out $end
$var wire 1 o& notS $end
$var wire 1 p& pdt1 $end
$var wire 1 q& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 o& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 O" in2 $end
$var wire 1 p& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 o& in1 $end
$var wire 1 ?" in2 $end
$var wire 1 q& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 p& in1 $end
$var wire 1 q& in2 $end
$var wire 1 T# out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 >" InA $end
$var wire 1 N" InB $end
$var wire 1 9! S $end
$var wire 1 S# Out $end
$var wire 1 r& notS $end
$var wire 1 s& pdt1 $end
$var wire 1 t& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 r& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 N" in2 $end
$var wire 1 s& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 r& in1 $end
$var wire 1 >" in2 $end
$var wire 1 t& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 s& in1 $end
$var wire 1 t& in2 $end
$var wire 1 S# out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 =" InA $end
$var wire 1 M" InB $end
$var wire 1 9! S $end
$var wire 1 R# Out $end
$var wire 1 u& notS $end
$var wire 1 v& pdt1 $end
$var wire 1 w& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 u& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 M" in2 $end
$var wire 1 v& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 u& in1 $end
$var wire 1 =" in2 $end
$var wire 1 w& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 v& in1 $end
$var wire 1 w& in2 $end
$var wire 1 R# out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 <" InA $end
$var wire 1 L" InB $end
$var wire 1 9! S $end
$var wire 1 Q# Out $end
$var wire 1 x& notS $end
$var wire 1 y& pdt1 $end
$var wire 1 z& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 x& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 L" in2 $end
$var wire 1 y& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 x& in1 $end
$var wire 1 <" in2 $end
$var wire 1 z& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 y& in1 $end
$var wire 1 z& in2 $end
$var wire 1 Q# out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 ;" InA $end
$var wire 1 K" InB $end
$var wire 1 9! S $end
$var wire 1 P# Out $end
$var wire 1 {& notS $end
$var wire 1 |& pdt1 $end
$var wire 1 }& pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 {& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 K" in2 $end
$var wire 1 |& out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 {& in1 $end
$var wire 1 ;" in2 $end
$var wire 1 }& out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 |& in1 $end
$var wire 1 }& in2 $end
$var wire 1 P# out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 :" InA $end
$var wire 1 J" InB $end
$var wire 1 9! S $end
$var wire 1 O# Out $end
$var wire 1 ~& notS $end
$var wire 1 !' pdt1 $end
$var wire 1 "' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 ~& out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 J" in2 $end
$var wire 1 !' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ~& in1 $end
$var wire 1 :" in2 $end
$var wire 1 "' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 !' in1 $end
$var wire 1 "' in2 $end
$var wire 1 O# out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 9" InA $end
$var wire 1 I" InB $end
$var wire 1 9! S $end
$var wire 1 N# Out $end
$var wire 1 #' notS $end
$var wire 1 $' pdt1 $end
$var wire 1 %' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 #' out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 I" in2 $end
$var wire 1 $' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 #' in1 $end
$var wire 1 9" in2 $end
$var wire 1 %' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 $' in1 $end
$var wire 1 %' in2 $end
$var wire 1 N# out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 8" InA $end
$var wire 1 H" InB $end
$var wire 1 9! S $end
$var wire 1 M# Out $end
$var wire 1 &' notS $end
$var wire 1 '' pdt1 $end
$var wire 1 (' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 &' out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 H" in2 $end
$var wire 1 '' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 &' in1 $end
$var wire 1 8" in2 $end
$var wire 1 (' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 '' in1 $end
$var wire 1 (' in2 $end
$var wire 1 M# out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 7" InA $end
$var wire 1 G" InB $end
$var wire 1 9! S $end
$var wire 1 L# Out $end
$var wire 1 )' notS $end
$var wire 1 *' pdt1 $end
$var wire 1 +' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 )' out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 G" in2 $end
$var wire 1 *' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 )' in1 $end
$var wire 1 7" in2 $end
$var wire 1 +' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 *' in1 $end
$var wire 1 +' in2 $end
$var wire 1 L# out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 6" InA $end
$var wire 1 F" InB $end
$var wire 1 9! S $end
$var wire 1 K# Out $end
$var wire 1 ,' notS $end
$var wire 1 -' pdt1 $end
$var wire 1 .' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 ,' out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 F" in2 $end
$var wire 1 -' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ,' in1 $end
$var wire 1 6" in2 $end
$var wire 1 .' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 -' in1 $end
$var wire 1 .' in2 $end
$var wire 1 K# out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 5" InA $end
$var wire 1 E" InB $end
$var wire 1 9! S $end
$var wire 1 J# Out $end
$var wire 1 /' notS $end
$var wire 1 0' pdt1 $end
$var wire 1 1' pdt2 $end

$scope module not_inst $end
$var wire 1 9! in1 $end
$var wire 1 /' out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 9! in1 $end
$var wire 1 E" in2 $end
$var wire 1 0' out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 /' in1 $end
$var wire 1 5" in2 $end
$var wire 1 1' out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 0' in1 $end
$var wire 1 1' in2 $end
$var wire 1 J# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module adder0 $end
$var parameter 4 2' OP_ROT_LEFT $end
$var parameter 4 3' OP_SFT_LEFT $end
$var parameter 4 4' OP_SFT_RT_A $end
$var parameter 4 5' OP_SFT_RT_L $end
$var parameter 4 6' OP_ADD $end
$var parameter 4 7' OP_OR $end
$var parameter 4 8' OP_XOR $end
$var parameter 4 9' OP_ANDN $end
$var parameter 4 :' OP_COMP $end
$var parameter 4 ;' OP_ROT_RIGHT $end
$var parameter 4 <' OP_SUB $end
$var parameter 4 =' OP_BITR $end
$var parameter 4 >' OP_SLT $end
$var wire 1 <$ A [15] $end
$var wire 1 =$ A [14] $end
$var wire 1 >$ A [13] $end
$var wire 1 ?$ A [12] $end
$var wire 1 @$ A [11] $end
$var wire 1 A$ A [10] $end
$var wire 1 B$ A [9] $end
$var wire 1 C$ A [8] $end
$var wire 1 D$ A [7] $end
$var wire 1 E$ A [6] $end
$var wire 1 F$ A [5] $end
$var wire 1 G$ A [4] $end
$var wire 1 H$ A [3] $end
$var wire 1 I$ A [2] $end
$var wire 1 J$ A [1] $end
$var wire 1 K$ A [0] $end
$var wire 1 ?' B [15] $end
$var wire 1 @' B [14] $end
$var wire 1 A' B [13] $end
$var wire 1 B' B [12] $end
$var wire 1 C' B [11] $end
$var wire 1 D' B [10] $end
$var wire 1 E' B [9] $end
$var wire 1 F' B [8] $end
$var wire 1 G' B [7] $end
$var wire 1 H' B [6] $end
$var wire 1 I' B [5] $end
$var wire 1 J' B [4] $end
$var wire 1 K' B [3] $end
$var wire 1 L' B [2] $end
$var wire 1 M' B [1] $end
$var wire 1 N' B [0] $end
$var wire 1 O' Cin $end
$var wire 1 P' Op [3] $end
$var wire 1 Q' Op [2] $end
$var wire 1 R' Op [1] $end
$var wire 1 S' Op [0] $end
$var wire 1 T' invA $end
$var wire 1 U' invB $end
$var wire 1 V' sign $end
$var wire 1 5" Out [15] $end
$var wire 1 6" Out [14] $end
$var wire 1 7" Out [13] $end
$var wire 1 8" Out [12] $end
$var wire 1 9" Out [11] $end
$var wire 1 :" Out [10] $end
$var wire 1 ;" Out [9] $end
$var wire 1 <" Out [8] $end
$var wire 1 =" Out [7] $end
$var wire 1 >" Out [6] $end
$var wire 1 ?" Out [5] $end
$var wire 1 @" Out [4] $end
$var wire 1 A" Out [3] $end
$var wire 1 B" Out [2] $end
$var wire 1 C" Out [1] $end
$var wire 1 D" Out [0] $end
$var wire 1 W' Ofl $end
$var wire 1 X' Z $end
$var wire 1 Y' Cout $end
$var wire 1 Z' AltB $end
$var wire 1 [' AgtB $end
$var wire 1 \' AeqB $end
$var wire 1 ]' A_int [15] $end
$var wire 1 ^' A_int [14] $end
$var wire 1 _' A_int [13] $end
$var wire 1 `' A_int [12] $end
$var wire 1 a' A_int [11] $end
$var wire 1 b' A_int [10] $end
$var wire 1 c' A_int [9] $end
$var wire 1 d' A_int [8] $end
$var wire 1 e' A_int [7] $end
$var wire 1 f' A_int [6] $end
$var wire 1 g' A_int [5] $end
$var wire 1 h' A_int [4] $end
$var wire 1 i' A_int [3] $end
$var wire 1 j' A_int [2] $end
$var wire 1 k' A_int [1] $end
$var wire 1 l' A_int [0] $end
$var wire 1 m' B_int [15] $end
$var wire 1 n' B_int [14] $end
$var wire 1 o' B_int [13] $end
$var wire 1 p' B_int [12] $end
$var wire 1 q' B_int [11] $end
$var wire 1 r' B_int [10] $end
$var wire 1 s' B_int [9] $end
$var wire 1 t' B_int [8] $end
$var wire 1 u' B_int [7] $end
$var wire 1 v' B_int [6] $end
$var wire 1 w' B_int [5] $end
$var wire 1 x' B_int [4] $end
$var wire 1 y' B_int [3] $end
$var wire 1 z' B_int [2] $end
$var wire 1 {' B_int [1] $end
$var wire 1 |' B_int [0] $end
$var wire 1 }' A_int_i [15] $end
$var wire 1 ~' A_int_i [14] $end
$var wire 1 !( A_int_i [13] $end
$var wire 1 "( A_int_i [12] $end
$var wire 1 #( A_int_i [11] $end
$var wire 1 $( A_int_i [10] $end
$var wire 1 %( A_int_i [9] $end
$var wire 1 &( A_int_i [8] $end
$var wire 1 '( A_int_i [7] $end
$var wire 1 (( A_int_i [6] $end
$var wire 1 )( A_int_i [5] $end
$var wire 1 *( A_int_i [4] $end
$var wire 1 +( A_int_i [3] $end
$var wire 1 ,( A_int_i [2] $end
$var wire 1 -( A_int_i [1] $end
$var wire 1 .( A_int_i [0] $end
$var wire 1 /( notA_int [15] $end
$var wire 1 0( notA_int [14] $end
$var wire 1 1( notA_int [13] $end
$var wire 1 2( notA_int [12] $end
$var wire 1 3( notA_int [11] $end
$var wire 1 4( notA_int [10] $end
$var wire 1 5( notA_int [9] $end
$var wire 1 6( notA_int [8] $end
$var wire 1 7( notA_int [7] $end
$var wire 1 8( notA_int [6] $end
$var wire 1 9( notA_int [5] $end
$var wire 1 :( notA_int [4] $end
$var wire 1 ;( notA_int [3] $end
$var wire 1 <( notA_int [2] $end
$var wire 1 =( notA_int [1] $end
$var wire 1 >( notA_int [0] $end
$var wire 1 ?( Cin_i $end
$var wire 1 @( cla_Sout [15] $end
$var wire 1 A( cla_Sout [14] $end
$var wire 1 B( cla_Sout [13] $end
$var wire 1 C( cla_Sout [12] $end
$var wire 1 D( cla_Sout [11] $end
$var wire 1 E( cla_Sout [10] $end
$var wire 1 F( cla_Sout [9] $end
$var wire 1 G( cla_Sout [8] $end
$var wire 1 H( cla_Sout [7] $end
$var wire 1 I( cla_Sout [6] $end
$var wire 1 J( cla_Sout [5] $end
$var wire 1 K( cla_Sout [4] $end
$var wire 1 L( cla_Sout [3] $end
$var wire 1 M( cla_Sout [2] $end
$var wire 1 N( cla_Sout [1] $end
$var wire 1 O( cla_Sout [0] $end
$var wire 1 P( cla_Cout $end
$var wire 1 Q( Out_barrel_shifter [15] $end
$var wire 1 R( Out_barrel_shifter [14] $end
$var wire 1 S( Out_barrel_shifter [13] $end
$var wire 1 T( Out_barrel_shifter [12] $end
$var wire 1 U( Out_barrel_shifter [11] $end
$var wire 1 V( Out_barrel_shifter [10] $end
$var wire 1 W( Out_barrel_shifter [9] $end
$var wire 1 X( Out_barrel_shifter [8] $end
$var wire 1 Y( Out_barrel_shifter [7] $end
$var wire 1 Z( Out_barrel_shifter [6] $end
$var wire 1 [( Out_barrel_shifter [5] $end
$var wire 1 \( Out_barrel_shifter [4] $end
$var wire 1 ]( Out_barrel_shifter [3] $end
$var wire 1 ^( Out_barrel_shifter [2] $end
$var wire 1 _( Out_barrel_shifter [1] $end
$var wire 1 `( Out_barrel_shifter [0] $end
$var wire 1 a( Out_or [15] $end
$var wire 1 b( Out_or [14] $end
$var wire 1 c( Out_or [13] $end
$var wire 1 d( Out_or [12] $end
$var wire 1 e( Out_or [11] $end
$var wire 1 f( Out_or [10] $end
$var wire 1 g( Out_or [9] $end
$var wire 1 h( Out_or [8] $end
$var wire 1 i( Out_or [7] $end
$var wire 1 j( Out_or [6] $end
$var wire 1 k( Out_or [5] $end
$var wire 1 l( Out_or [4] $end
$var wire 1 m( Out_or [3] $end
$var wire 1 n( Out_or [2] $end
$var wire 1 o( Out_or [1] $end
$var wire 1 p( Out_or [0] $end
$var wire 1 q( Out_xor [15] $end
$var wire 1 r( Out_xor [14] $end
$var wire 1 s( Out_xor [13] $end
$var wire 1 t( Out_xor [12] $end
$var wire 1 u( Out_xor [11] $end
$var wire 1 v( Out_xor [10] $end
$var wire 1 w( Out_xor [9] $end
$var wire 1 x( Out_xor [8] $end
$var wire 1 y( Out_xor [7] $end
$var wire 1 z( Out_xor [6] $end
$var wire 1 {( Out_xor [5] $end
$var wire 1 |( Out_xor [4] $end
$var wire 1 }( Out_xor [3] $end
$var wire 1 ~( Out_xor [2] $end
$var wire 1 !) Out_xor [1] $end
$var wire 1 ") Out_xor [0] $end
$var wire 1 #) Out_andn [15] $end
$var wire 1 $) Out_andn [14] $end
$var wire 1 %) Out_andn [13] $end
$var wire 1 &) Out_andn [12] $end
$var wire 1 ') Out_andn [11] $end
$var wire 1 () Out_andn [10] $end
$var wire 1 )) Out_andn [9] $end
$var wire 1 *) Out_andn [8] $end
$var wire 1 +) Out_andn [7] $end
$var wire 1 ,) Out_andn [6] $end
$var wire 1 -) Out_andn [5] $end
$var wire 1 .) Out_andn [4] $end
$var wire 1 /) Out_andn [3] $end
$var wire 1 0) Out_andn [2] $end
$var wire 1 1) Out_andn [1] $end
$var wire 1 2) Out_andn [0] $end
$var wire 1 3) Ofl_det $end

$scope module cla_16_inst $end
$var wire 1 }' in_1 [15] $end
$var wire 1 ~' in_1 [14] $end
$var wire 1 !( in_1 [13] $end
$var wire 1 "( in_1 [12] $end
$var wire 1 #( in_1 [11] $end
$var wire 1 $( in_1 [10] $end
$var wire 1 %( in_1 [9] $end
$var wire 1 &( in_1 [8] $end
$var wire 1 '( in_1 [7] $end
$var wire 1 (( in_1 [6] $end
$var wire 1 )( in_1 [5] $end
$var wire 1 *( in_1 [4] $end
$var wire 1 +( in_1 [3] $end
$var wire 1 ,( in_1 [2] $end
$var wire 1 -( in_1 [1] $end
$var wire 1 .( in_1 [0] $end
$var wire 1 m' in_2 [15] $end
$var wire 1 n' in_2 [14] $end
$var wire 1 o' in_2 [13] $end
$var wire 1 p' in_2 [12] $end
$var wire 1 q' in_2 [11] $end
$var wire 1 r' in_2 [10] $end
$var wire 1 s' in_2 [9] $end
$var wire 1 t' in_2 [8] $end
$var wire 1 u' in_2 [7] $end
$var wire 1 v' in_2 [6] $end
$var wire 1 w' in_2 [5] $end
$var wire 1 x' in_2 [4] $end
$var wire 1 y' in_2 [3] $end
$var wire 1 z' in_2 [2] $end
$var wire 1 {' in_2 [1] $end
$var wire 1 |' in_2 [0] $end
$var wire 1 ?( Cin $end
$var wire 1 @( Sum [15] $end
$var wire 1 A( Sum [14] $end
$var wire 1 B( Sum [13] $end
$var wire 1 C( Sum [12] $end
$var wire 1 D( Sum [11] $end
$var wire 1 E( Sum [10] $end
$var wire 1 F( Sum [9] $end
$var wire 1 G( Sum [8] $end
$var wire 1 H( Sum [7] $end
$var wire 1 I( Sum [6] $end
$var wire 1 J( Sum [5] $end
$var wire 1 K( Sum [4] $end
$var wire 1 L( Sum [3] $end
$var wire 1 M( Sum [2] $end
$var wire 1 N( Sum [1] $end
$var wire 1 O( Sum [0] $end
$var wire 1 P( Cout $end
$var wire 1 4) sum_0_3_bits [3] $end
$var wire 1 5) sum_0_3_bits [2] $end
$var wire 1 6) sum_0_3_bits [1] $end
$var wire 1 7) sum_0_3_bits [0] $end
$var wire 1 8) carry_1 $end
$var wire 1 9) sum_4_7_bits [3] $end
$var wire 1 :) sum_4_7_bits [2] $end
$var wire 1 ;) sum_4_7_bits [1] $end
$var wire 1 <) sum_4_7_bits [0] $end
$var wire 1 =) carry_2 $end
$var wire 1 >) sum_8_11_bits [3] $end
$var wire 1 ?) sum_8_11_bits [2] $end
$var wire 1 @) sum_8_11_bits [1] $end
$var wire 1 A) sum_8_11_bits [0] $end
$var wire 1 B) carry_3 $end
$var wire 1 C) sum_12_15_bits [3] $end
$var wire 1 D) sum_12_15_bits [2] $end
$var wire 1 E) sum_12_15_bits [1] $end
$var wire 1 F) sum_12_15_bits [0] $end
$var wire 1 G) carry_4 $end

$scope module cla_0_3_bits $end
$var wire 1 +( i_add1 [3] $end
$var wire 1 ,( i_add1 [2] $end
$var wire 1 -( i_add1 [1] $end
$var wire 1 .( i_add1 [0] $end
$var wire 1 y' i_add2 [3] $end
$var wire 1 z' i_add2 [2] $end
$var wire 1 {' i_add2 [1] $end
$var wire 1 |' i_add2 [0] $end
$var wire 1 ?( Cin_4_bit $end
$var wire 1 4) Sum_4_bit [3] $end
$var wire 1 5) Sum_4_bit [2] $end
$var wire 1 6) Sum_4_bit [1] $end
$var wire 1 7) Sum_4_bit [0] $end
$var wire 1 8) Cout_4_bit $end
$var wire 1 H) w_C [4] $end
$var wire 1 I) w_C [3] $end
$var wire 1 J) w_C [2] $end
$var wire 1 K) w_C [1] $end
$var wire 1 L) w_C [0] $end
$var wire 1 M) w_G [3] $end
$var wire 1 N) w_G [2] $end
$var wire 1 O) w_G [1] $end
$var wire 1 P) w_G [0] $end
$var wire 1 Q) w_P [3] $end
$var wire 1 R) w_P [2] $end
$var wire 1 S) w_P [1] $end
$var wire 1 T) w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 .( i_bit1 $end
$var wire 1 |' i_bit2 $end
$var wire 1 L) i_carry $end
$var wire 1 7) o_sum $end
$var wire 1 U) o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 -( i_bit1 $end
$var wire 1 {' i_bit2 $end
$var wire 1 K) i_carry $end
$var wire 1 6) o_sum $end
$var wire 1 V) o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 ,( i_bit1 $end
$var wire 1 z' i_bit2 $end
$var wire 1 J) i_carry $end
$var wire 1 5) o_sum $end
$var wire 1 W) o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 +( i_bit1 $end
$var wire 1 y' i_bit2 $end
$var wire 1 I) i_carry $end
$var wire 1 4) o_sum $end
$var wire 1 X) o_carry $end
$upscope $end
$upscope $end

$scope module cla_4_7_bits $end
$var wire 1 '( i_add1 [3] $end
$var wire 1 (( i_add1 [2] $end
$var wire 1 )( i_add1 [1] $end
$var wire 1 *( i_add1 [0] $end
$var wire 1 u' i_add2 [3] $end
$var wire 1 v' i_add2 [2] $end
$var wire 1 w' i_add2 [1] $end
$var wire 1 x' i_add2 [0] $end
$var wire 1 8) Cin_4_bit $end
$var wire 1 9) Sum_4_bit [3] $end
$var wire 1 :) Sum_4_bit [2] $end
$var wire 1 ;) Sum_4_bit [1] $end
$var wire 1 <) Sum_4_bit [0] $end
$var wire 1 =) Cout_4_bit $end
$var wire 1 Y) w_C [4] $end
$var wire 1 Z) w_C [3] $end
$var wire 1 [) w_C [2] $end
$var wire 1 \) w_C [1] $end
$var wire 1 ]) w_C [0] $end
$var wire 1 ^) w_G [3] $end
$var wire 1 _) w_G [2] $end
$var wire 1 `) w_G [1] $end
$var wire 1 a) w_G [0] $end
$var wire 1 b) w_P [3] $end
$var wire 1 c) w_P [2] $end
$var wire 1 d) w_P [1] $end
$var wire 1 e) w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 *( i_bit1 $end
$var wire 1 x' i_bit2 $end
$var wire 1 ]) i_carry $end
$var wire 1 <) o_sum $end
$var wire 1 f) o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 )( i_bit1 $end
$var wire 1 w' i_bit2 $end
$var wire 1 \) i_carry $end
$var wire 1 ;) o_sum $end
$var wire 1 g) o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 (( i_bit1 $end
$var wire 1 v' i_bit2 $end
$var wire 1 [) i_carry $end
$var wire 1 :) o_sum $end
$var wire 1 h) o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 '( i_bit1 $end
$var wire 1 u' i_bit2 $end
$var wire 1 Z) i_carry $end
$var wire 1 9) o_sum $end
$var wire 1 i) o_carry $end
$upscope $end
$upscope $end

$scope module cla_8_11_bits $end
$var wire 1 #( i_add1 [3] $end
$var wire 1 $( i_add1 [2] $end
$var wire 1 %( i_add1 [1] $end
$var wire 1 &( i_add1 [0] $end
$var wire 1 q' i_add2 [3] $end
$var wire 1 r' i_add2 [2] $end
$var wire 1 s' i_add2 [1] $end
$var wire 1 t' i_add2 [0] $end
$var wire 1 =) Cin_4_bit $end
$var wire 1 >) Sum_4_bit [3] $end
$var wire 1 ?) Sum_4_bit [2] $end
$var wire 1 @) Sum_4_bit [1] $end
$var wire 1 A) Sum_4_bit [0] $end
$var wire 1 B) Cout_4_bit $end
$var wire 1 j) w_C [4] $end
$var wire 1 k) w_C [3] $end
$var wire 1 l) w_C [2] $end
$var wire 1 m) w_C [1] $end
$var wire 1 n) w_C [0] $end
$var wire 1 o) w_G [3] $end
$var wire 1 p) w_G [2] $end
$var wire 1 q) w_G [1] $end
$var wire 1 r) w_G [0] $end
$var wire 1 s) w_P [3] $end
$var wire 1 t) w_P [2] $end
$var wire 1 u) w_P [1] $end
$var wire 1 v) w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 &( i_bit1 $end
$var wire 1 t' i_bit2 $end
$var wire 1 n) i_carry $end
$var wire 1 A) o_sum $end
$var wire 1 w) o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 %( i_bit1 $end
$var wire 1 s' i_bit2 $end
$var wire 1 m) i_carry $end
$var wire 1 @) o_sum $end
$var wire 1 x) o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 $( i_bit1 $end
$var wire 1 r' i_bit2 $end
$var wire 1 l) i_carry $end
$var wire 1 ?) o_sum $end
$var wire 1 y) o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 #( i_bit1 $end
$var wire 1 q' i_bit2 $end
$var wire 1 k) i_carry $end
$var wire 1 >) o_sum $end
$var wire 1 z) o_carry $end
$upscope $end
$upscope $end

$scope module cla_12_15_bits $end
$var wire 1 }' i_add1 [3] $end
$var wire 1 ~' i_add1 [2] $end
$var wire 1 !( i_add1 [1] $end
$var wire 1 "( i_add1 [0] $end
$var wire 1 m' i_add2 [3] $end
$var wire 1 n' i_add2 [2] $end
$var wire 1 o' i_add2 [1] $end
$var wire 1 p' i_add2 [0] $end
$var wire 1 B) Cin_4_bit $end
$var wire 1 C) Sum_4_bit [3] $end
$var wire 1 D) Sum_4_bit [2] $end
$var wire 1 E) Sum_4_bit [1] $end
$var wire 1 F) Sum_4_bit [0] $end
$var wire 1 P( Cout_4_bit $end
$var wire 1 {) w_C [4] $end
$var wire 1 |) w_C [3] $end
$var wire 1 }) w_C [2] $end
$var wire 1 ~) w_C [1] $end
$var wire 1 !* w_C [0] $end
$var wire 1 "* w_G [3] $end
$var wire 1 #* w_G [2] $end
$var wire 1 $* w_G [1] $end
$var wire 1 %* w_G [0] $end
$var wire 1 &* w_P [3] $end
$var wire 1 '* w_P [2] $end
$var wire 1 (* w_P [1] $end
$var wire 1 )* w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 "( i_bit1 $end
$var wire 1 p' i_bit2 $end
$var wire 1 !* i_carry $end
$var wire 1 F) o_sum $end
$var wire 1 ** o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 !( i_bit1 $end
$var wire 1 o' i_bit2 $end
$var wire 1 ~) i_carry $end
$var wire 1 E) o_sum $end
$var wire 1 +* o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 ~' i_bit1 $end
$var wire 1 n' i_bit2 $end
$var wire 1 }) i_carry $end
$var wire 1 D) o_sum $end
$var wire 1 ,* o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 }' i_bit1 $end
$var wire 1 m' i_bit2 $end
$var wire 1 |) i_carry $end
$var wire 1 C) o_sum $end
$var wire 1 -* o_carry $end
$upscope $end
$upscope $end
$upscope $end

$scope module barrel_shifter $end
$var wire 1 ]' In [15] $end
$var wire 1 ^' In [14] $end
$var wire 1 _' In [13] $end
$var wire 1 `' In [12] $end
$var wire 1 a' In [11] $end
$var wire 1 b' In [10] $end
$var wire 1 c' In [9] $end
$var wire 1 d' In [8] $end
$var wire 1 e' In [7] $end
$var wire 1 f' In [6] $end
$var wire 1 g' In [5] $end
$var wire 1 h' In [4] $end
$var wire 1 i' In [3] $end
$var wire 1 j' In [2] $end
$var wire 1 k' In [1] $end
$var wire 1 l' In [0] $end
$var wire 1 y' Cnt [3] $end
$var wire 1 z' Cnt [2] $end
$var wire 1 {' Cnt [1] $end
$var wire 1 |' Cnt [0] $end
$var wire 1 P' Op [3] $end
$var wire 1 Q' Op [2] $end
$var wire 1 R' Op [1] $end
$var wire 1 S' Op [0] $end
$var reg 16 .* Out [15:0] $end
$var wire 1 /* select $end
$var wire 1 0* append $end
$var reg 16 1* stage_0 [15:0] $end
$var reg 16 2* stage_1 [15:0] $end
$var reg 16 3* stage_2 [15:0] $end
$var wire 1 4* In_rev [15] $end
$var wire 1 5* In_rev [14] $end
$var wire 1 6* In_rev [13] $end
$var wire 1 7* In_rev [12] $end
$var wire 1 8* In_rev [11] $end
$var wire 1 9* In_rev [10] $end
$var wire 1 :* In_rev [9] $end
$var wire 1 ;* In_rev [8] $end
$var wire 1 <* In_rev [7] $end
$var wire 1 =* In_rev [6] $end
$var wire 1 >* In_rev [5] $end
$var wire 1 ?* In_rev [4] $end
$var wire 1 @* In_rev [3] $end
$var wire 1 A* In_rev [2] $end
$var wire 1 B* In_rev [1] $end
$var wire 1 C* In_rev [0] $end
$upscope $end

$scope module mag_inst $end
$var wire 1 ]' A [15] $end
$var wire 1 ^' A [14] $end
$var wire 1 _' A [13] $end
$var wire 1 `' A [12] $end
$var wire 1 a' A [11] $end
$var wire 1 b' A [10] $end
$var wire 1 c' A [9] $end
$var wire 1 d' A [8] $end
$var wire 1 e' A [7] $end
$var wire 1 f' A [6] $end
$var wire 1 g' A [5] $end
$var wire 1 h' A [4] $end
$var wire 1 i' A [3] $end
$var wire 1 j' A [2] $end
$var wire 1 k' A [1] $end
$var wire 1 l' A [0] $end
$var wire 1 m' B [15] $end
$var wire 1 n' B [14] $end
$var wire 1 o' B [13] $end
$var wire 1 p' B [12] $end
$var wire 1 q' B [11] $end
$var wire 1 r' B [10] $end
$var wire 1 s' B [9] $end
$var wire 1 t' B [8] $end
$var wire 1 u' B [7] $end
$var wire 1 v' B [6] $end
$var wire 1 w' B [5] $end
$var wire 1 x' B [4] $end
$var wire 1 y' B [3] $end
$var wire 1 z' B [2] $end
$var wire 1 {' B [1] $end
$var wire 1 |' B [0] $end
$var wire 1 [' AgtB $end
$var wire 1 \' AeqB $end
$var wire 1 Z' AltB $end
$var wire 1 D* gt_vec [15] $end
$var wire 1 E* gt_vec [14] $end
$var wire 1 F* gt_vec [13] $end
$var wire 1 G* gt_vec [12] $end
$var wire 1 H* gt_vec [11] $end
$var wire 1 I* gt_vec [10] $end
$var wire 1 J* gt_vec [9] $end
$var wire 1 K* gt_vec [8] $end
$var wire 1 L* gt_vec [7] $end
$var wire 1 M* gt_vec [6] $end
$var wire 1 N* gt_vec [5] $end
$var wire 1 O* gt_vec [4] $end
$var wire 1 P* gt_vec [3] $end
$var wire 1 Q* gt_vec [2] $end
$var wire 1 R* gt_vec [1] $end
$var wire 1 S* gt_vec [0] $end
$var wire 1 T* eq_vec [15] $end
$var wire 1 U* eq_vec [14] $end
$var wire 1 V* eq_vec [13] $end
$var wire 1 W* eq_vec [12] $end
$var wire 1 X* eq_vec [11] $end
$var wire 1 Y* eq_vec [10] $end
$var wire 1 Z* eq_vec [9] $end
$var wire 1 [* eq_vec [8] $end
$var wire 1 \* eq_vec [7] $end
$var wire 1 ]* eq_vec [6] $end
$var wire 1 ^* eq_vec [5] $end
$var wire 1 _* eq_vec [4] $end
$var wire 1 `* eq_vec [3] $end
$var wire 1 a* eq_vec [2] $end
$var wire 1 b* eq_vec [1] $end
$var wire 1 c* eq_vec [0] $end
$var wire 1 d* lt_vec [15] $end
$var wire 1 e* lt_vec [14] $end
$var wire 1 f* lt_vec [13] $end
$var wire 1 g* lt_vec [12] $end
$var wire 1 h* lt_vec [11] $end
$var wire 1 i* lt_vec [10] $end
$var wire 1 j* lt_vec [9] $end
$var wire 1 k* lt_vec [8] $end
$var wire 1 l* lt_vec [7] $end
$var wire 1 m* lt_vec [6] $end
$var wire 1 n* lt_vec [5] $end
$var wire 1 o* lt_vec [4] $end
$var wire 1 p* lt_vec [3] $end
$var wire 1 q* lt_vec [2] $end
$var wire 1 r* lt_vec [1] $end
$var wire 1 s* lt_vec [0] $end

$scope module iCMP[15] $end
$var wire 1 ]' A $end
$var wire 1 m' B $end
$var wire 1 E* AgtBi $end
$var wire 1 U* AeqBi $end
$var wire 1 e* AltBi $end
$var wire 1 D* AgtBo $end
$var wire 1 T* AeqBo $end
$var wire 1 d* AltBo $end
$upscope $end

$scope module iCMP[14] $end
$var wire 1 ^' A $end
$var wire 1 n' B $end
$var wire 1 F* AgtBi $end
$var wire 1 V* AeqBi $end
$var wire 1 f* AltBi $end
$var wire 1 E* AgtBo $end
$var wire 1 U* AeqBo $end
$var wire 1 e* AltBo $end
$upscope $end

$scope module iCMP[13] $end
$var wire 1 _' A $end
$var wire 1 o' B $end
$var wire 1 G* AgtBi $end
$var wire 1 W* AeqBi $end
$var wire 1 g* AltBi $end
$var wire 1 F* AgtBo $end
$var wire 1 V* AeqBo $end
$var wire 1 f* AltBo $end
$upscope $end

$scope module iCMP[12] $end
$var wire 1 `' A $end
$var wire 1 p' B $end
$var wire 1 H* AgtBi $end
$var wire 1 X* AeqBi $end
$var wire 1 h* AltBi $end
$var wire 1 G* AgtBo $end
$var wire 1 W* AeqBo $end
$var wire 1 g* AltBo $end
$upscope $end

$scope module iCMP[11] $end
$var wire 1 a' A $end
$var wire 1 q' B $end
$var wire 1 I* AgtBi $end
$var wire 1 Y* AeqBi $end
$var wire 1 i* AltBi $end
$var wire 1 H* AgtBo $end
$var wire 1 X* AeqBo $end
$var wire 1 h* AltBo $end
$upscope $end

$scope module iCMP[10] $end
$var wire 1 b' A $end
$var wire 1 r' B $end
$var wire 1 J* AgtBi $end
$var wire 1 Z* AeqBi $end
$var wire 1 j* AltBi $end
$var wire 1 I* AgtBo $end
$var wire 1 Y* AeqBo $end
$var wire 1 i* AltBo $end
$upscope $end

$scope module iCMP[9] $end
$var wire 1 c' A $end
$var wire 1 s' B $end
$var wire 1 K* AgtBi $end
$var wire 1 [* AeqBi $end
$var wire 1 k* AltBi $end
$var wire 1 J* AgtBo $end
$var wire 1 Z* AeqBo $end
$var wire 1 j* AltBo $end
$upscope $end

$scope module iCMP[8] $end
$var wire 1 d' A $end
$var wire 1 t' B $end
$var wire 1 L* AgtBi $end
$var wire 1 \* AeqBi $end
$var wire 1 l* AltBi $end
$var wire 1 K* AgtBo $end
$var wire 1 [* AeqBo $end
$var wire 1 k* AltBo $end
$upscope $end

$scope module iCMP[7] $end
$var wire 1 e' A $end
$var wire 1 u' B $end
$var wire 1 M* AgtBi $end
$var wire 1 ]* AeqBi $end
$var wire 1 m* AltBi $end
$var wire 1 L* AgtBo $end
$var wire 1 \* AeqBo $end
$var wire 1 l* AltBo $end
$upscope $end

$scope module iCMP[6] $end
$var wire 1 f' A $end
$var wire 1 v' B $end
$var wire 1 N* AgtBi $end
$var wire 1 ^* AeqBi $end
$var wire 1 n* AltBi $end
$var wire 1 M* AgtBo $end
$var wire 1 ]* AeqBo $end
$var wire 1 m* AltBo $end
$upscope $end

$scope module iCMP[5] $end
$var wire 1 g' A $end
$var wire 1 w' B $end
$var wire 1 O* AgtBi $end
$var wire 1 _* AeqBi $end
$var wire 1 o* AltBi $end
$var wire 1 N* AgtBo $end
$var wire 1 ^* AeqBo $end
$var wire 1 n* AltBo $end
$upscope $end

$scope module iCMP[4] $end
$var wire 1 h' A $end
$var wire 1 x' B $end
$var wire 1 P* AgtBi $end
$var wire 1 `* AeqBi $end
$var wire 1 p* AltBi $end
$var wire 1 O* AgtBo $end
$var wire 1 _* AeqBo $end
$var wire 1 o* AltBo $end
$upscope $end

$scope module iCMP[3] $end
$var wire 1 i' A $end
$var wire 1 y' B $end
$var wire 1 Q* AgtBi $end
$var wire 1 a* AeqBi $end
$var wire 1 q* AltBi $end
$var wire 1 P* AgtBo $end
$var wire 1 `* AeqBo $end
$var wire 1 p* AltBo $end
$upscope $end

$scope module iCMP[2] $end
$var wire 1 j' A $end
$var wire 1 z' B $end
$var wire 1 R* AgtBi $end
$var wire 1 b* AeqBi $end
$var wire 1 r* AltBi $end
$var wire 1 Q* AgtBo $end
$var wire 1 a* AeqBo $end
$var wire 1 q* AltBo $end
$upscope $end

$scope module iCMP[1] $end
$var wire 1 k' A $end
$var wire 1 {' B $end
$var wire 1 S* AgtBi $end
$var wire 1 c* AeqBi $end
$var wire 1 s* AltBi $end
$var wire 1 R* AgtBo $end
$var wire 1 b* AeqBo $end
$var wire 1 r* AltBo $end
$upscope $end

$scope module iCMP[0] $end
$var wire 1 l' A $end
$var wire 1 |' B $end
$var wire 1 t* AgtBi $end
$var wire 1 u* AeqBi $end
$var wire 1 v* AltBi $end
$var wire 1 S* AgtBo $end
$var wire 1 c* AeqBo $end
$var wire 1 s* AltBo $end
$upscope $end
$upscope $end
$upscope $end

$scope module adderjump $end
$var parameter 4 w* OP_ROT_LEFT $end
$var parameter 4 x* OP_SFT_LEFT $end
$var parameter 4 y* OP_SFT_RT_A $end
$var parameter 4 z* OP_SFT_RT_L $end
$var parameter 4 {* OP_ADD $end
$var parameter 4 |* OP_OR $end
$var parameter 4 }* OP_XOR $end
$var parameter 4 ~* OP_ANDN $end
$var parameter 4 !+ OP_COMP $end
$var parameter 4 "+ OP_ROT_RIGHT $end
$var parameter 4 #+ OP_SUB $end
$var parameter 4 $+ OP_BITR $end
$var parameter 4 %+ OP_SLT $end
$var wire 1 Z# A [15] $end
$var wire 1 [# A [14] $end
$var wire 1 \# A [13] $end
$var wire 1 ]# A [12] $end
$var wire 1 ^# A [11] $end
$var wire 1 _# A [10] $end
$var wire 1 `# A [9] $end
$var wire 1 a# A [8] $end
$var wire 1 b# A [7] $end
$var wire 1 c# A [6] $end
$var wire 1 d# A [5] $end
$var wire 1 e# A [4] $end
$var wire 1 f# A [3] $end
$var wire 1 g# A [2] $end
$var wire 1 h# A [1] $end
$var wire 1 i# A [0] $end
$var wire 1 5" B [15] $end
$var wire 1 6" B [14] $end
$var wire 1 7" B [13] $end
$var wire 1 8" B [12] $end
$var wire 1 9" B [11] $end
$var wire 1 :" B [10] $end
$var wire 1 ;" B [9] $end
$var wire 1 <" B [8] $end
$var wire 1 =" B [7] $end
$var wire 1 >" B [6] $end
$var wire 1 ?" B [5] $end
$var wire 1 @" B [4] $end
$var wire 1 A" B [3] $end
$var wire 1 B" B [2] $end
$var wire 1 C" B [1] $end
$var wire 1 D" B [0] $end
$var wire 1 &+ Cin $end
$var wire 1 '+ Op [3] $end
$var wire 1 (+ Op [2] $end
$var wire 1 )+ Op [1] $end
$var wire 1 *+ Op [0] $end
$var wire 1 ++ invA $end
$var wire 1 ,+ invB $end
$var wire 1 -+ sign $end
$var wire 1 j# Out [15] $end
$var wire 1 k# Out [14] $end
$var wire 1 l# Out [13] $end
$var wire 1 m# Out [12] $end
$var wire 1 n# Out [11] $end
$var wire 1 o# Out [10] $end
$var wire 1 p# Out [9] $end
$var wire 1 q# Out [8] $end
$var wire 1 r# Out [7] $end
$var wire 1 s# Out [6] $end
$var wire 1 t# Out [5] $end
$var wire 1 u# Out [4] $end
$var wire 1 v# Out [3] $end
$var wire 1 w# Out [2] $end
$var wire 1 x# Out [1] $end
$var wire 1 y# Out [0] $end
$var wire 1 .+ Ofl $end
$var wire 1 /+ Z $end
$var wire 1 0+ Cout $end
$var wire 1 1+ AltB $end
$var wire 1 2+ AgtB $end
$var wire 1 3+ AeqB $end
$var wire 1 4+ A_int [15] $end
$var wire 1 5+ A_int [14] $end
$var wire 1 6+ A_int [13] $end
$var wire 1 7+ A_int [12] $end
$var wire 1 8+ A_int [11] $end
$var wire 1 9+ A_int [10] $end
$var wire 1 :+ A_int [9] $end
$var wire 1 ;+ A_int [8] $end
$var wire 1 <+ A_int [7] $end
$var wire 1 =+ A_int [6] $end
$var wire 1 >+ A_int [5] $end
$var wire 1 ?+ A_int [4] $end
$var wire 1 @+ A_int [3] $end
$var wire 1 A+ A_int [2] $end
$var wire 1 B+ A_int [1] $end
$var wire 1 C+ A_int [0] $end
$var wire 1 D+ B_int [15] $end
$var wire 1 E+ B_int [14] $end
$var wire 1 F+ B_int [13] $end
$var wire 1 G+ B_int [12] $end
$var wire 1 H+ B_int [11] $end
$var wire 1 I+ B_int [10] $end
$var wire 1 J+ B_int [9] $end
$var wire 1 K+ B_int [8] $end
$var wire 1 L+ B_int [7] $end
$var wire 1 M+ B_int [6] $end
$var wire 1 N+ B_int [5] $end
$var wire 1 O+ B_int [4] $end
$var wire 1 P+ B_int [3] $end
$var wire 1 Q+ B_int [2] $end
$var wire 1 R+ B_int [1] $end
$var wire 1 S+ B_int [0] $end
$var wire 1 T+ A_int_i [15] $end
$var wire 1 U+ A_int_i [14] $end
$var wire 1 V+ A_int_i [13] $end
$var wire 1 W+ A_int_i [12] $end
$var wire 1 X+ A_int_i [11] $end
$var wire 1 Y+ A_int_i [10] $end
$var wire 1 Z+ A_int_i [9] $end
$var wire 1 [+ A_int_i [8] $end
$var wire 1 \+ A_int_i [7] $end
$var wire 1 ]+ A_int_i [6] $end
$var wire 1 ^+ A_int_i [5] $end
$var wire 1 _+ A_int_i [4] $end
$var wire 1 `+ A_int_i [3] $end
$var wire 1 a+ A_int_i [2] $end
$var wire 1 b+ A_int_i [1] $end
$var wire 1 c+ A_int_i [0] $end
$var wire 1 d+ notA_int [15] $end
$var wire 1 e+ notA_int [14] $end
$var wire 1 f+ notA_int [13] $end
$var wire 1 g+ notA_int [12] $end
$var wire 1 h+ notA_int [11] $end
$var wire 1 i+ notA_int [10] $end
$var wire 1 j+ notA_int [9] $end
$var wire 1 k+ notA_int [8] $end
$var wire 1 l+ notA_int [7] $end
$var wire 1 m+ notA_int [6] $end
$var wire 1 n+ notA_int [5] $end
$var wire 1 o+ notA_int [4] $end
$var wire 1 p+ notA_int [3] $end
$var wire 1 q+ notA_int [2] $end
$var wire 1 r+ notA_int [1] $end
$var wire 1 s+ notA_int [0] $end
$var wire 1 t+ Cin_i $end
$var wire 1 u+ cla_Sout [15] $end
$var wire 1 v+ cla_Sout [14] $end
$var wire 1 w+ cla_Sout [13] $end
$var wire 1 x+ cla_Sout [12] $end
$var wire 1 y+ cla_Sout [11] $end
$var wire 1 z+ cla_Sout [10] $end
$var wire 1 {+ cla_Sout [9] $end
$var wire 1 |+ cla_Sout [8] $end
$var wire 1 }+ cla_Sout [7] $end
$var wire 1 ~+ cla_Sout [6] $end
$var wire 1 !, cla_Sout [5] $end
$var wire 1 ", cla_Sout [4] $end
$var wire 1 #, cla_Sout [3] $end
$var wire 1 $, cla_Sout [2] $end
$var wire 1 %, cla_Sout [1] $end
$var wire 1 &, cla_Sout [0] $end
$var wire 1 ', cla_Cout $end
$var wire 1 (, Out_barrel_shifter [15] $end
$var wire 1 ), Out_barrel_shifter [14] $end
$var wire 1 *, Out_barrel_shifter [13] $end
$var wire 1 +, Out_barrel_shifter [12] $end
$var wire 1 ,, Out_barrel_shifter [11] $end
$var wire 1 -, Out_barrel_shifter [10] $end
$var wire 1 ., Out_barrel_shifter [9] $end
$var wire 1 /, Out_barrel_shifter [8] $end
$var wire 1 0, Out_barrel_shifter [7] $end
$var wire 1 1, Out_barrel_shifter [6] $end
$var wire 1 2, Out_barrel_shifter [5] $end
$var wire 1 3, Out_barrel_shifter [4] $end
$var wire 1 4, Out_barrel_shifter [3] $end
$var wire 1 5, Out_barrel_shifter [2] $end
$var wire 1 6, Out_barrel_shifter [1] $end
$var wire 1 7, Out_barrel_shifter [0] $end
$var wire 1 8, Out_or [15] $end
$var wire 1 9, Out_or [14] $end
$var wire 1 :, Out_or [13] $end
$var wire 1 ;, Out_or [12] $end
$var wire 1 <, Out_or [11] $end
$var wire 1 =, Out_or [10] $end
$var wire 1 >, Out_or [9] $end
$var wire 1 ?, Out_or [8] $end
$var wire 1 @, Out_or [7] $end
$var wire 1 A, Out_or [6] $end
$var wire 1 B, Out_or [5] $end
$var wire 1 C, Out_or [4] $end
$var wire 1 D, Out_or [3] $end
$var wire 1 E, Out_or [2] $end
$var wire 1 F, Out_or [1] $end
$var wire 1 G, Out_or [0] $end
$var wire 1 H, Out_xor [15] $end
$var wire 1 I, Out_xor [14] $end
$var wire 1 J, Out_xor [13] $end
$var wire 1 K, Out_xor [12] $end
$var wire 1 L, Out_xor [11] $end
$var wire 1 M, Out_xor [10] $end
$var wire 1 N, Out_xor [9] $end
$var wire 1 O, Out_xor [8] $end
$var wire 1 P, Out_xor [7] $end
$var wire 1 Q, Out_xor [6] $end
$var wire 1 R, Out_xor [5] $end
$var wire 1 S, Out_xor [4] $end
$var wire 1 T, Out_xor [3] $end
$var wire 1 U, Out_xor [2] $end
$var wire 1 V, Out_xor [1] $end
$var wire 1 W, Out_xor [0] $end
$var wire 1 X, Out_andn [15] $end
$var wire 1 Y, Out_andn [14] $end
$var wire 1 Z, Out_andn [13] $end
$var wire 1 [, Out_andn [12] $end
$var wire 1 \, Out_andn [11] $end
$var wire 1 ], Out_andn [10] $end
$var wire 1 ^, Out_andn [9] $end
$var wire 1 _, Out_andn [8] $end
$var wire 1 `, Out_andn [7] $end
$var wire 1 a, Out_andn [6] $end
$var wire 1 b, Out_andn [5] $end
$var wire 1 c, Out_andn [4] $end
$var wire 1 d, Out_andn [3] $end
$var wire 1 e, Out_andn [2] $end
$var wire 1 f, Out_andn [1] $end
$var wire 1 g, Out_andn [0] $end
$var wire 1 h, Ofl_det $end

$scope module cla_16_inst $end
$var wire 1 T+ in_1 [15] $end
$var wire 1 U+ in_1 [14] $end
$var wire 1 V+ in_1 [13] $end
$var wire 1 W+ in_1 [12] $end
$var wire 1 X+ in_1 [11] $end
$var wire 1 Y+ in_1 [10] $end
$var wire 1 Z+ in_1 [9] $end
$var wire 1 [+ in_1 [8] $end
$var wire 1 \+ in_1 [7] $end
$var wire 1 ]+ in_1 [6] $end
$var wire 1 ^+ in_1 [5] $end
$var wire 1 _+ in_1 [4] $end
$var wire 1 `+ in_1 [3] $end
$var wire 1 a+ in_1 [2] $end
$var wire 1 b+ in_1 [1] $end
$var wire 1 c+ in_1 [0] $end
$var wire 1 D+ in_2 [15] $end
$var wire 1 E+ in_2 [14] $end
$var wire 1 F+ in_2 [13] $end
$var wire 1 G+ in_2 [12] $end
$var wire 1 H+ in_2 [11] $end
$var wire 1 I+ in_2 [10] $end
$var wire 1 J+ in_2 [9] $end
$var wire 1 K+ in_2 [8] $end
$var wire 1 L+ in_2 [7] $end
$var wire 1 M+ in_2 [6] $end
$var wire 1 N+ in_2 [5] $end
$var wire 1 O+ in_2 [4] $end
$var wire 1 P+ in_2 [3] $end
$var wire 1 Q+ in_2 [2] $end
$var wire 1 R+ in_2 [1] $end
$var wire 1 S+ in_2 [0] $end
$var wire 1 t+ Cin $end
$var wire 1 u+ Sum [15] $end
$var wire 1 v+ Sum [14] $end
$var wire 1 w+ Sum [13] $end
$var wire 1 x+ Sum [12] $end
$var wire 1 y+ Sum [11] $end
$var wire 1 z+ Sum [10] $end
$var wire 1 {+ Sum [9] $end
$var wire 1 |+ Sum [8] $end
$var wire 1 }+ Sum [7] $end
$var wire 1 ~+ Sum [6] $end
$var wire 1 !, Sum [5] $end
$var wire 1 ", Sum [4] $end
$var wire 1 #, Sum [3] $end
$var wire 1 $, Sum [2] $end
$var wire 1 %, Sum [1] $end
$var wire 1 &, Sum [0] $end
$var wire 1 ', Cout $end
$var wire 1 i, sum_0_3_bits [3] $end
$var wire 1 j, sum_0_3_bits [2] $end
$var wire 1 k, sum_0_3_bits [1] $end
$var wire 1 l, sum_0_3_bits [0] $end
$var wire 1 m, carry_1 $end
$var wire 1 n, sum_4_7_bits [3] $end
$var wire 1 o, sum_4_7_bits [2] $end
$var wire 1 p, sum_4_7_bits [1] $end
$var wire 1 q, sum_4_7_bits [0] $end
$var wire 1 r, carry_2 $end
$var wire 1 s, sum_8_11_bits [3] $end
$var wire 1 t, sum_8_11_bits [2] $end
$var wire 1 u, sum_8_11_bits [1] $end
$var wire 1 v, sum_8_11_bits [0] $end
$var wire 1 w, carry_3 $end
$var wire 1 x, sum_12_15_bits [3] $end
$var wire 1 y, sum_12_15_bits [2] $end
$var wire 1 z, sum_12_15_bits [1] $end
$var wire 1 {, sum_12_15_bits [0] $end
$var wire 1 |, carry_4 $end

$scope module cla_0_3_bits $end
$var wire 1 `+ i_add1 [3] $end
$var wire 1 a+ i_add1 [2] $end
$var wire 1 b+ i_add1 [1] $end
$var wire 1 c+ i_add1 [0] $end
$var wire 1 P+ i_add2 [3] $end
$var wire 1 Q+ i_add2 [2] $end
$var wire 1 R+ i_add2 [1] $end
$var wire 1 S+ i_add2 [0] $end
$var wire 1 t+ Cin_4_bit $end
$var wire 1 i, Sum_4_bit [3] $end
$var wire 1 j, Sum_4_bit [2] $end
$var wire 1 k, Sum_4_bit [1] $end
$var wire 1 l, Sum_4_bit [0] $end
$var wire 1 m, Cout_4_bit $end
$var wire 1 }, w_C [4] $end
$var wire 1 ~, w_C [3] $end
$var wire 1 !- w_C [2] $end
$var wire 1 "- w_C [1] $end
$var wire 1 #- w_C [0] $end
$var wire 1 $- w_G [3] $end
$var wire 1 %- w_G [2] $end
$var wire 1 &- w_G [1] $end
$var wire 1 '- w_G [0] $end
$var wire 1 (- w_P [3] $end
$var wire 1 )- w_P [2] $end
$var wire 1 *- w_P [1] $end
$var wire 1 +- w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 c+ i_bit1 $end
$var wire 1 S+ i_bit2 $end
$var wire 1 #- i_carry $end
$var wire 1 l, o_sum $end
$var wire 1 ,- o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 b+ i_bit1 $end
$var wire 1 R+ i_bit2 $end
$var wire 1 "- i_carry $end
$var wire 1 k, o_sum $end
$var wire 1 -- o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 a+ i_bit1 $end
$var wire 1 Q+ i_bit2 $end
$var wire 1 !- i_carry $end
$var wire 1 j, o_sum $end
$var wire 1 .- o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 `+ i_bit1 $end
$var wire 1 P+ i_bit2 $end
$var wire 1 ~, i_carry $end
$var wire 1 i, o_sum $end
$var wire 1 /- o_carry $end
$upscope $end
$upscope $end

$scope module cla_4_7_bits $end
$var wire 1 \+ i_add1 [3] $end
$var wire 1 ]+ i_add1 [2] $end
$var wire 1 ^+ i_add1 [1] $end
$var wire 1 _+ i_add1 [0] $end
$var wire 1 L+ i_add2 [3] $end
$var wire 1 M+ i_add2 [2] $end
$var wire 1 N+ i_add2 [1] $end
$var wire 1 O+ i_add2 [0] $end
$var wire 1 m, Cin_4_bit $end
$var wire 1 n, Sum_4_bit [3] $end
$var wire 1 o, Sum_4_bit [2] $end
$var wire 1 p, Sum_4_bit [1] $end
$var wire 1 q, Sum_4_bit [0] $end
$var wire 1 r, Cout_4_bit $end
$var wire 1 0- w_C [4] $end
$var wire 1 1- w_C [3] $end
$var wire 1 2- w_C [2] $end
$var wire 1 3- w_C [1] $end
$var wire 1 4- w_C [0] $end
$var wire 1 5- w_G [3] $end
$var wire 1 6- w_G [2] $end
$var wire 1 7- w_G [1] $end
$var wire 1 8- w_G [0] $end
$var wire 1 9- w_P [3] $end
$var wire 1 :- w_P [2] $end
$var wire 1 ;- w_P [1] $end
$var wire 1 <- w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 _+ i_bit1 $end
$var wire 1 O+ i_bit2 $end
$var wire 1 4- i_carry $end
$var wire 1 q, o_sum $end
$var wire 1 =- o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 ^+ i_bit1 $end
$var wire 1 N+ i_bit2 $end
$var wire 1 3- i_carry $end
$var wire 1 p, o_sum $end
$var wire 1 >- o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 ]+ i_bit1 $end
$var wire 1 M+ i_bit2 $end
$var wire 1 2- i_carry $end
$var wire 1 o, o_sum $end
$var wire 1 ?- o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 \+ i_bit1 $end
$var wire 1 L+ i_bit2 $end
$var wire 1 1- i_carry $end
$var wire 1 n, o_sum $end
$var wire 1 @- o_carry $end
$upscope $end
$upscope $end

$scope module cla_8_11_bits $end
$var wire 1 X+ i_add1 [3] $end
$var wire 1 Y+ i_add1 [2] $end
$var wire 1 Z+ i_add1 [1] $end
$var wire 1 [+ i_add1 [0] $end
$var wire 1 H+ i_add2 [3] $end
$var wire 1 I+ i_add2 [2] $end
$var wire 1 J+ i_add2 [1] $end
$var wire 1 K+ i_add2 [0] $end
$var wire 1 r, Cin_4_bit $end
$var wire 1 s, Sum_4_bit [3] $end
$var wire 1 t, Sum_4_bit [2] $end
$var wire 1 u, Sum_4_bit [1] $end
$var wire 1 v, Sum_4_bit [0] $end
$var wire 1 w, Cout_4_bit $end
$var wire 1 A- w_C [4] $end
$var wire 1 B- w_C [3] $end
$var wire 1 C- w_C [2] $end
$var wire 1 D- w_C [1] $end
$var wire 1 E- w_C [0] $end
$var wire 1 F- w_G [3] $end
$var wire 1 G- w_G [2] $end
$var wire 1 H- w_G [1] $end
$var wire 1 I- w_G [0] $end
$var wire 1 J- w_P [3] $end
$var wire 1 K- w_P [2] $end
$var wire 1 L- w_P [1] $end
$var wire 1 M- w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 [+ i_bit1 $end
$var wire 1 K+ i_bit2 $end
$var wire 1 E- i_carry $end
$var wire 1 v, o_sum $end
$var wire 1 N- o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 Z+ i_bit1 $end
$var wire 1 J+ i_bit2 $end
$var wire 1 D- i_carry $end
$var wire 1 u, o_sum $end
$var wire 1 O- o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 Y+ i_bit1 $end
$var wire 1 I+ i_bit2 $end
$var wire 1 C- i_carry $end
$var wire 1 t, o_sum $end
$var wire 1 P- o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 X+ i_bit1 $end
$var wire 1 H+ i_bit2 $end
$var wire 1 B- i_carry $end
$var wire 1 s, o_sum $end
$var wire 1 Q- o_carry $end
$upscope $end
$upscope $end

$scope module cla_12_15_bits $end
$var wire 1 T+ i_add1 [3] $end
$var wire 1 U+ i_add1 [2] $end
$var wire 1 V+ i_add1 [1] $end
$var wire 1 W+ i_add1 [0] $end
$var wire 1 D+ i_add2 [3] $end
$var wire 1 E+ i_add2 [2] $end
$var wire 1 F+ i_add2 [1] $end
$var wire 1 G+ i_add2 [0] $end
$var wire 1 w, Cin_4_bit $end
$var wire 1 x, Sum_4_bit [3] $end
$var wire 1 y, Sum_4_bit [2] $end
$var wire 1 z, Sum_4_bit [1] $end
$var wire 1 {, Sum_4_bit [0] $end
$var wire 1 ', Cout_4_bit $end
$var wire 1 R- w_C [4] $end
$var wire 1 S- w_C [3] $end
$var wire 1 T- w_C [2] $end
$var wire 1 U- w_C [1] $end
$var wire 1 V- w_C [0] $end
$var wire 1 W- w_G [3] $end
$var wire 1 X- w_G [2] $end
$var wire 1 Y- w_G [1] $end
$var wire 1 Z- w_G [0] $end
$var wire 1 [- w_P [3] $end
$var wire 1 \- w_P [2] $end
$var wire 1 ]- w_P [1] $end
$var wire 1 ^- w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 W+ i_bit1 $end
$var wire 1 G+ i_bit2 $end
$var wire 1 V- i_carry $end
$var wire 1 {, o_sum $end
$var wire 1 _- o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 V+ i_bit1 $end
$var wire 1 F+ i_bit2 $end
$var wire 1 U- i_carry $end
$var wire 1 z, o_sum $end
$var wire 1 `- o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 U+ i_bit1 $end
$var wire 1 E+ i_bit2 $end
$var wire 1 T- i_carry $end
$var wire 1 y, o_sum $end
$var wire 1 a- o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 T+ i_bit1 $end
$var wire 1 D+ i_bit2 $end
$var wire 1 S- i_carry $end
$var wire 1 x, o_sum $end
$var wire 1 b- o_carry $end
$upscope $end
$upscope $end
$upscope $end

$scope module barrel_shifter $end
$var wire 1 4+ In [15] $end
$var wire 1 5+ In [14] $end
$var wire 1 6+ In [13] $end
$var wire 1 7+ In [12] $end
$var wire 1 8+ In [11] $end
$var wire 1 9+ In [10] $end
$var wire 1 :+ In [9] $end
$var wire 1 ;+ In [8] $end
$var wire 1 <+ In [7] $end
$var wire 1 =+ In [6] $end
$var wire 1 >+ In [5] $end
$var wire 1 ?+ In [4] $end
$var wire 1 @+ In [3] $end
$var wire 1 A+ In [2] $end
$var wire 1 B+ In [1] $end
$var wire 1 C+ In [0] $end
$var wire 1 P+ Cnt [3] $end
$var wire 1 Q+ Cnt [2] $end
$var wire 1 R+ Cnt [1] $end
$var wire 1 S+ Cnt [0] $end
$var wire 1 '+ Op [3] $end
$var wire 1 (+ Op [2] $end
$var wire 1 )+ Op [1] $end
$var wire 1 *+ Op [0] $end
$var reg 16 c- Out [15:0] $end
$var wire 1 d- select $end
$var wire 1 e- append $end
$var reg 16 f- stage_0 [15:0] $end
$var reg 16 g- stage_1 [15:0] $end
$var reg 16 h- stage_2 [15:0] $end
$var wire 1 i- In_rev [15] $end
$var wire 1 j- In_rev [14] $end
$var wire 1 k- In_rev [13] $end
$var wire 1 l- In_rev [12] $end
$var wire 1 m- In_rev [11] $end
$var wire 1 n- In_rev [10] $end
$var wire 1 o- In_rev [9] $end
$var wire 1 p- In_rev [8] $end
$var wire 1 q- In_rev [7] $end
$var wire 1 r- In_rev [6] $end
$var wire 1 s- In_rev [5] $end
$var wire 1 t- In_rev [4] $end
$var wire 1 u- In_rev [3] $end
$var wire 1 v- In_rev [2] $end
$var wire 1 w- In_rev [1] $end
$var wire 1 x- In_rev [0] $end
$upscope $end

$scope module mag_inst $end
$var wire 1 4+ A [15] $end
$var wire 1 5+ A [14] $end
$var wire 1 6+ A [13] $end
$var wire 1 7+ A [12] $end
$var wire 1 8+ A [11] $end
$var wire 1 9+ A [10] $end
$var wire 1 :+ A [9] $end
$var wire 1 ;+ A [8] $end
$var wire 1 <+ A [7] $end
$var wire 1 =+ A [6] $end
$var wire 1 >+ A [5] $end
$var wire 1 ?+ A [4] $end
$var wire 1 @+ A [3] $end
$var wire 1 A+ A [2] $end
$var wire 1 B+ A [1] $end
$var wire 1 C+ A [0] $end
$var wire 1 D+ B [15] $end
$var wire 1 E+ B [14] $end
$var wire 1 F+ B [13] $end
$var wire 1 G+ B [12] $end
$var wire 1 H+ B [11] $end
$var wire 1 I+ B [10] $end
$var wire 1 J+ B [9] $end
$var wire 1 K+ B [8] $end
$var wire 1 L+ B [7] $end
$var wire 1 M+ B [6] $end
$var wire 1 N+ B [5] $end
$var wire 1 O+ B [4] $end
$var wire 1 P+ B [3] $end
$var wire 1 Q+ B [2] $end
$var wire 1 R+ B [1] $end
$var wire 1 S+ B [0] $end
$var wire 1 2+ AgtB $end
$var wire 1 3+ AeqB $end
$var wire 1 1+ AltB $end
$var wire 1 y- gt_vec [15] $end
$var wire 1 z- gt_vec [14] $end
$var wire 1 {- gt_vec [13] $end
$var wire 1 |- gt_vec [12] $end
$var wire 1 }- gt_vec [11] $end
$var wire 1 ~- gt_vec [10] $end
$var wire 1 !. gt_vec [9] $end
$var wire 1 ". gt_vec [8] $end
$var wire 1 #. gt_vec [7] $end
$var wire 1 $. gt_vec [6] $end
$var wire 1 %. gt_vec [5] $end
$var wire 1 &. gt_vec [4] $end
$var wire 1 '. gt_vec [3] $end
$var wire 1 (. gt_vec [2] $end
$var wire 1 ). gt_vec [1] $end
$var wire 1 *. gt_vec [0] $end
$var wire 1 +. eq_vec [15] $end
$var wire 1 ,. eq_vec [14] $end
$var wire 1 -. eq_vec [13] $end
$var wire 1 .. eq_vec [12] $end
$var wire 1 /. eq_vec [11] $end
$var wire 1 0. eq_vec [10] $end
$var wire 1 1. eq_vec [9] $end
$var wire 1 2. eq_vec [8] $end
$var wire 1 3. eq_vec [7] $end
$var wire 1 4. eq_vec [6] $end
$var wire 1 5. eq_vec [5] $end
$var wire 1 6. eq_vec [4] $end
$var wire 1 7. eq_vec [3] $end
$var wire 1 8. eq_vec [2] $end
$var wire 1 9. eq_vec [1] $end
$var wire 1 :. eq_vec [0] $end
$var wire 1 ;. lt_vec [15] $end
$var wire 1 <. lt_vec [14] $end
$var wire 1 =. lt_vec [13] $end
$var wire 1 >. lt_vec [12] $end
$var wire 1 ?. lt_vec [11] $end
$var wire 1 @. lt_vec [10] $end
$var wire 1 A. lt_vec [9] $end
$var wire 1 B. lt_vec [8] $end
$var wire 1 C. lt_vec [7] $end
$var wire 1 D. lt_vec [6] $end
$var wire 1 E. lt_vec [5] $end
$var wire 1 F. lt_vec [4] $end
$var wire 1 G. lt_vec [3] $end
$var wire 1 H. lt_vec [2] $end
$var wire 1 I. lt_vec [1] $end
$var wire 1 J. lt_vec [0] $end

$scope module iCMP[15] $end
$var wire 1 4+ A $end
$var wire 1 D+ B $end
$var wire 1 z- AgtBi $end
$var wire 1 ,. AeqBi $end
$var wire 1 <. AltBi $end
$var wire 1 y- AgtBo $end
$var wire 1 +. AeqBo $end
$var wire 1 ;. AltBo $end
$upscope $end

$scope module iCMP[14] $end
$var wire 1 5+ A $end
$var wire 1 E+ B $end
$var wire 1 {- AgtBi $end
$var wire 1 -. AeqBi $end
$var wire 1 =. AltBi $end
$var wire 1 z- AgtBo $end
$var wire 1 ,. AeqBo $end
$var wire 1 <. AltBo $end
$upscope $end

$scope module iCMP[13] $end
$var wire 1 6+ A $end
$var wire 1 F+ B $end
$var wire 1 |- AgtBi $end
$var wire 1 .. AeqBi $end
$var wire 1 >. AltBi $end
$var wire 1 {- AgtBo $end
$var wire 1 -. AeqBo $end
$var wire 1 =. AltBo $end
$upscope $end

$scope module iCMP[12] $end
$var wire 1 7+ A $end
$var wire 1 G+ B $end
$var wire 1 }- AgtBi $end
$var wire 1 /. AeqBi $end
$var wire 1 ?. AltBi $end
$var wire 1 |- AgtBo $end
$var wire 1 .. AeqBo $end
$var wire 1 >. AltBo $end
$upscope $end

$scope module iCMP[11] $end
$var wire 1 8+ A $end
$var wire 1 H+ B $end
$var wire 1 ~- AgtBi $end
$var wire 1 0. AeqBi $end
$var wire 1 @. AltBi $end
$var wire 1 }- AgtBo $end
$var wire 1 /. AeqBo $end
$var wire 1 ?. AltBo $end
$upscope $end

$scope module iCMP[10] $end
$var wire 1 9+ A $end
$var wire 1 I+ B $end
$var wire 1 !. AgtBi $end
$var wire 1 1. AeqBi $end
$var wire 1 A. AltBi $end
$var wire 1 ~- AgtBo $end
$var wire 1 0. AeqBo $end
$var wire 1 @. AltBo $end
$upscope $end

$scope module iCMP[9] $end
$var wire 1 :+ A $end
$var wire 1 J+ B $end
$var wire 1 ". AgtBi $end
$var wire 1 2. AeqBi $end
$var wire 1 B. AltBi $end
$var wire 1 !. AgtBo $end
$var wire 1 1. AeqBo $end
$var wire 1 A. AltBo $end
$upscope $end

$scope module iCMP[8] $end
$var wire 1 ;+ A $end
$var wire 1 K+ B $end
$var wire 1 #. AgtBi $end
$var wire 1 3. AeqBi $end
$var wire 1 C. AltBi $end
$var wire 1 ". AgtBo $end
$var wire 1 2. AeqBo $end
$var wire 1 B. AltBo $end
$upscope $end

$scope module iCMP[7] $end
$var wire 1 <+ A $end
$var wire 1 L+ B $end
$var wire 1 $. AgtBi $end
$var wire 1 4. AeqBi $end
$var wire 1 D. AltBi $end
$var wire 1 #. AgtBo $end
$var wire 1 3. AeqBo $end
$var wire 1 C. AltBo $end
$upscope $end

$scope module iCMP[6] $end
$var wire 1 =+ A $end
$var wire 1 M+ B $end
$var wire 1 %. AgtBi $end
$var wire 1 5. AeqBi $end
$var wire 1 E. AltBi $end
$var wire 1 $. AgtBo $end
$var wire 1 4. AeqBo $end
$var wire 1 D. AltBo $end
$upscope $end

$scope module iCMP[5] $end
$var wire 1 >+ A $end
$var wire 1 N+ B $end
$var wire 1 &. AgtBi $end
$var wire 1 6. AeqBi $end
$var wire 1 F. AltBi $end
$var wire 1 %. AgtBo $end
$var wire 1 5. AeqBo $end
$var wire 1 E. AltBo $end
$upscope $end

$scope module iCMP[4] $end
$var wire 1 ?+ A $end
$var wire 1 O+ B $end
$var wire 1 '. AgtBi $end
$var wire 1 7. AeqBi $end
$var wire 1 G. AltBi $end
$var wire 1 &. AgtBo $end
$var wire 1 6. AeqBo $end
$var wire 1 F. AltBo $end
$upscope $end

$scope module iCMP[3] $end
$var wire 1 @+ A $end
$var wire 1 P+ B $end
$var wire 1 (. AgtBi $end
$var wire 1 8. AeqBi $end
$var wire 1 H. AltBi $end
$var wire 1 '. AgtBo $end
$var wire 1 7. AeqBo $end
$var wire 1 G. AltBo $end
$upscope $end

$scope module iCMP[2] $end
$var wire 1 A+ A $end
$var wire 1 Q+ B $end
$var wire 1 ). AgtBi $end
$var wire 1 9. AeqBi $end
$var wire 1 I. AltBi $end
$var wire 1 (. AgtBo $end
$var wire 1 8. AeqBo $end
$var wire 1 H. AltBo $end
$upscope $end

$scope module iCMP[1] $end
$var wire 1 B+ A $end
$var wire 1 R+ B $end
$var wire 1 *. AgtBi $end
$var wire 1 :. AeqBi $end
$var wire 1 J. AltBi $end
$var wire 1 ). AgtBo $end
$var wire 1 9. AeqBo $end
$var wire 1 I. AltBo $end
$upscope $end

$scope module iCMP[0] $end
$var wire 1 C+ A $end
$var wire 1 S+ B $end
$var wire 1 K. AgtBi $end
$var wire 1 L. AeqBi $end
$var wire 1 M. AltBi $end
$var wire 1 *. AgtBo $end
$var wire 1 :. AeqBo $end
$var wire 1 J. AltBo $end
$upscope $end
$upscope $end
$upscope $end

$scope module epc_reg_inst $end
$var parameter 32 N. SIZE $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 6! writeEn $end
$var wire 1 5" writeData [15] $end
$var wire 1 6" writeData [14] $end
$var wire 1 7" writeData [13] $end
$var wire 1 8" writeData [12] $end
$var wire 1 9" writeData [11] $end
$var wire 1 :" writeData [10] $end
$var wire 1 ;" writeData [9] $end
$var wire 1 <" writeData [8] $end
$var wire 1 =" writeData [7] $end
$var wire 1 >" writeData [6] $end
$var wire 1 ?" writeData [5] $end
$var wire 1 @" writeData [4] $end
$var wire 1 A" writeData [3] $end
$var wire 1 B" writeData [2] $end
$var wire 1 C" writeData [1] $end
$var wire 1 D" writeData [0] $end
$var wire 1 O. err $end
$var wire 1 L$ readData [15] $end
$var wire 1 M$ readData [14] $end
$var wire 1 N$ readData [13] $end
$var wire 1 O$ readData [12] $end
$var wire 1 P$ readData [11] $end
$var wire 1 Q$ readData [10] $end
$var wire 1 R$ readData [9] $end
$var wire 1 S$ readData [8] $end
$var wire 1 T$ readData [7] $end
$var wire 1 U$ readData [6] $end
$var wire 1 V$ readData [5] $end
$var wire 1 W$ readData [4] $end
$var wire 1 X$ readData [3] $end
$var wire 1 Y$ readData [2] $end
$var wire 1 Z$ readData [1] $end
$var wire 1 [$ readData [0] $end
$var wire 1 P. in [15] $end
$var wire 1 Q. in [14] $end
$var wire 1 R. in [13] $end
$var wire 1 S. in [12] $end
$var wire 1 T. in [11] $end
$var wire 1 U. in [10] $end
$var wire 1 V. in [9] $end
$var wire 1 W. in [8] $end
$var wire 1 X. in [7] $end
$var wire 1 Y. in [6] $end
$var wire 1 Z. in [5] $end
$var wire 1 [. in [4] $end
$var wire 1 \. in [3] $end
$var wire 1 ]. in [2] $end
$var wire 1 ^. in [1] $end
$var wire 1 _. in [0] $end

$scope module ff[15] $end
$var wire 1 L$ q $end
$var wire 1 P. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 `. state $end
$upscope $end

$scope module ff[14] $end
$var wire 1 M$ q $end
$var wire 1 Q. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 a. state $end
$upscope $end

$scope module ff[13] $end
$var wire 1 N$ q $end
$var wire 1 R. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 b. state $end
$upscope $end

$scope module ff[12] $end
$var wire 1 O$ q $end
$var wire 1 S. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 c. state $end
$upscope $end

$scope module ff[11] $end
$var wire 1 P$ q $end
$var wire 1 T. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 d. state $end
$upscope $end

$scope module ff[10] $end
$var wire 1 Q$ q $end
$var wire 1 U. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 e. state $end
$upscope $end

$scope module ff[9] $end
$var wire 1 R$ q $end
$var wire 1 V. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 f. state $end
$upscope $end

$scope module ff[8] $end
$var wire 1 S$ q $end
$var wire 1 W. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 g. state $end
$upscope $end

$scope module ff[7] $end
$var wire 1 T$ q $end
$var wire 1 X. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 h. state $end
$upscope $end

$scope module ff[6] $end
$var wire 1 U$ q $end
$var wire 1 Y. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 i. state $end
$upscope $end

$scope module ff[5] $end
$var wire 1 V$ q $end
$var wire 1 Z. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 j. state $end
$upscope $end

$scope module ff[4] $end
$var wire 1 W$ q $end
$var wire 1 [. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 k. state $end
$upscope $end

$scope module ff[3] $end
$var wire 1 X$ q $end
$var wire 1 \. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 l. state $end
$upscope $end

$scope module ff[2] $end
$var wire 1 Y$ q $end
$var wire 1 ]. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 m. state $end
$upscope $end

$scope module ff[1] $end
$var wire 1 Z$ q $end
$var wire 1 ^. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 n. state $end
$upscope $end

$scope module ff[0] $end
$var wire 1 [$ q $end
$var wire 1 _. d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 o. state $end
$upscope $end
$upscope $end

$scope module iMem $end
$var wire 1 C! data_out [15] $end
$var wire 1 D! data_out [14] $end
$var wire 1 E! data_out [13] $end
$var wire 1 F! data_out [12] $end
$var wire 1 G! data_out [11] $end
$var wire 1 H! data_out [10] $end
$var wire 1 I! data_out [9] $end
$var wire 1 J! data_out [8] $end
$var wire 1 K! data_out [7] $end
$var wire 1 L! data_out [6] $end
$var wire 1 M! data_out [5] $end
$var wire 1 N! data_out [4] $end
$var wire 1 O! data_out [3] $end
$var wire 1 P! data_out [2] $end
$var wire 1 Q! data_out [1] $end
$var wire 1 R! data_out [0] $end
$var wire 1 p. data_in [15] $end
$var wire 1 q. data_in [14] $end
$var wire 1 r. data_in [13] $end
$var wire 1 s. data_in [12] $end
$var wire 1 t. data_in [11] $end
$var wire 1 u. data_in [10] $end
$var wire 1 v. data_in [9] $end
$var wire 1 w. data_in [8] $end
$var wire 1 x. data_in [7] $end
$var wire 1 y. data_in [6] $end
$var wire 1 z. data_in [5] $end
$var wire 1 {. data_in [4] $end
$var wire 1 |. data_in [3] $end
$var wire 1 }. data_in [2] $end
$var wire 1 ~. data_in [1] $end
$var wire 1 !/ data_in [0] $end
$var wire 1 <$ addr [15] $end
$var wire 1 =$ addr [14] $end
$var wire 1 >$ addr [13] $end
$var wire 1 ?$ addr [12] $end
$var wire 1 @$ addr [11] $end
$var wire 1 A$ addr [10] $end
$var wire 1 B$ addr [9] $end
$var wire 1 C$ addr [8] $end
$var wire 1 D$ addr [7] $end
$var wire 1 E$ addr [6] $end
$var wire 1 F$ addr [5] $end
$var wire 1 G$ addr [4] $end
$var wire 1 H$ addr [3] $end
$var wire 1 I$ addr [2] $end
$var wire 1 J$ addr [1] $end
$var wire 1 K$ addr [0] $end
$var wire 1 "/ enable $end
$var wire 1 #/ wr $end
$var wire 1 $/ createdump $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 %/ loaded $end
$var reg 17 &/ largest [16:0] $end
$var integer 32 '/ mcd $end
$var integer 32 (/ i $end
$upscope $end

$scope module pc_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 )/ en $end
$var wire 1 z# pc_in [15] $end
$var wire 1 {# pc_in [14] $end
$var wire 1 |# pc_in [13] $end
$var wire 1 }# pc_in [12] $end
$var wire 1 ~# pc_in [11] $end
$var wire 1 !$ pc_in [10] $end
$var wire 1 "$ pc_in [9] $end
$var wire 1 #$ pc_in [8] $end
$var wire 1 $$ pc_in [7] $end
$var wire 1 %$ pc_in [6] $end
$var wire 1 &$ pc_in [5] $end
$var wire 1 '$ pc_in [4] $end
$var wire 1 ($ pc_in [3] $end
$var wire 1 )$ pc_in [2] $end
$var wire 1 *$ pc_in [1] $end
$var wire 1 +$ pc_in [0] $end
$var wire 1 <$ pc_out [15] $end
$var wire 1 =$ pc_out [14] $end
$var wire 1 >$ pc_out [13] $end
$var wire 1 ?$ pc_out [12] $end
$var wire 1 @$ pc_out [11] $end
$var wire 1 A$ pc_out [10] $end
$var wire 1 B$ pc_out [9] $end
$var wire 1 C$ pc_out [8] $end
$var wire 1 D$ pc_out [7] $end
$var wire 1 E$ pc_out [6] $end
$var wire 1 F$ pc_out [5] $end
$var wire 1 G$ pc_out [4] $end
$var wire 1 H$ pc_out [3] $end
$var wire 1 I$ pc_out [2] $end
$var wire 1 J$ pc_out [1] $end
$var wire 1 K$ pc_out [0] $end

$scope module pc_inst $end
$var parameter 32 */ REG_WIDTH $end
$var wire 1 <$ q [15] $end
$var wire 1 =$ q [14] $end
$var wire 1 >$ q [13] $end
$var wire 1 ?$ q [12] $end
$var wire 1 @$ q [11] $end
$var wire 1 A$ q [10] $end
$var wire 1 B$ q [9] $end
$var wire 1 C$ q [8] $end
$var wire 1 D$ q [7] $end
$var wire 1 E$ q [6] $end
$var wire 1 F$ q [5] $end
$var wire 1 G$ q [4] $end
$var wire 1 H$ q [3] $end
$var wire 1 I$ q [2] $end
$var wire 1 J$ q [1] $end
$var wire 1 K$ q [0] $end
$var wire 1 z# d [15] $end
$var wire 1 {# d [14] $end
$var wire 1 |# d [13] $end
$var wire 1 }# d [12] $end
$var wire 1 ~# d [11] $end
$var wire 1 !$ d [10] $end
$var wire 1 "$ d [9] $end
$var wire 1 #$ d [8] $end
$var wire 1 $$ d [7] $end
$var wire 1 %$ d [6] $end
$var wire 1 &$ d [5] $end
$var wire 1 '$ d [4] $end
$var wire 1 ($ d [3] $end
$var wire 1 )$ d [2] $end
$var wire 1 *$ d [1] $end
$var wire 1 +$ d [0] $end
$var wire 1 )/ en $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 +/ d_next [15] $end
$var wire 1 ,/ d_next [14] $end
$var wire 1 -/ d_next [13] $end
$var wire 1 ./ d_next [12] $end
$var wire 1 // d_next [11] $end
$var wire 1 0/ d_next [10] $end
$var wire 1 1/ d_next [9] $end
$var wire 1 2/ d_next [8] $end
$var wire 1 3/ d_next [7] $end
$var wire 1 4/ d_next [6] $end
$var wire 1 5/ d_next [5] $end
$var wire 1 6/ d_next [4] $end
$var wire 1 7/ d_next [3] $end
$var wire 1 8/ d_next [2] $end
$var wire 1 9/ d_next [1] $end
$var wire 1 :/ d_next [0] $end

$scope module reg_inst[15] $end
$var wire 1 <$ q $end
$var wire 1 +/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ;/ state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 =$ q $end
$var wire 1 ,/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 </ state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 >$ q $end
$var wire 1 -/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 =/ state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 ?$ q $end
$var wire 1 ./ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 >/ state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 @$ q $end
$var wire 1 // d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ?/ state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 A$ q $end
$var wire 1 0/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 @/ state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 B$ q $end
$var wire 1 1/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 A/ state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 C$ q $end
$var wire 1 2/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 B/ state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 D$ q $end
$var wire 1 3/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C/ state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 E$ q $end
$var wire 1 4/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D/ state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 F$ q $end
$var wire 1 5/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 E/ state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 G$ q $end
$var wire 1 6/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F/ state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 H$ q $end
$var wire 1 7/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G/ state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 I$ q $end
$var wire 1 8/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H/ state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 J$ q $end
$var wire 1 9/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 I/ state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 K$ q $end
$var wire 1 :/ d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 J/ state $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module decode_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 C! instruction [15] $end
$var wire 1 D! instruction [14] $end
$var wire 1 E! instruction [13] $end
$var wire 1 F! instruction [12] $end
$var wire 1 G! instruction [11] $end
$var wire 1 H! instruction [10] $end
$var wire 1 I! instruction [9] $end
$var wire 1 J! instruction [8] $end
$var wire 1 K! instruction [7] $end
$var wire 1 L! instruction [6] $end
$var wire 1 M! instruction [5] $end
$var wire 1 N! instruction [4] $end
$var wire 1 O! instruction [3] $end
$var wire 1 P! instruction [2] $end
$var wire 1 Q! instruction [1] $end
$var wire 1 R! instruction [0] $end
$var wire 1 7# writeData [15] $end
$var wire 1 8# writeData [14] $end
$var wire 1 9# writeData [13] $end
$var wire 1 :# writeData [12] $end
$var wire 1 ;# writeData [11] $end
$var wire 1 <# writeData [10] $end
$var wire 1 =# writeData [9] $end
$var wire 1 ># writeData [8] $end
$var wire 1 ?# writeData [7] $end
$var wire 1 @# writeData [6] $end
$var wire 1 A# writeData [5] $end
$var wire 1 B# writeData [4] $end
$var wire 1 C# writeData [3] $end
$var wire 1 D# writeData [2] $end
$var wire 1 E# writeData [1] $end
$var wire 1 F# writeData [0] $end
$var wire 1 8! Cout $end
$var wire 1 K/ err $end
$var wire 1 u" read1Data [15] $end
$var wire 1 v" read1Data [14] $end
$var wire 1 w" read1Data [13] $end
$var wire 1 x" read1Data [12] $end
$var wire 1 y" read1Data [11] $end
$var wire 1 z" read1Data [10] $end
$var wire 1 {" read1Data [9] $end
$var wire 1 |" read1Data [8] $end
$var wire 1 }" read1Data [7] $end
$var wire 1 ~" read1Data [6] $end
$var wire 1 !# read1Data [5] $end
$var wire 1 "# read1Data [4] $end
$var wire 1 ## read1Data [3] $end
$var wire 1 $# read1Data [2] $end
$var wire 1 %# read1Data [1] $end
$var wire 1 &# read1Data [0] $end
$var wire 1 '# read2Data [15] $end
$var wire 1 (# read2Data [14] $end
$var wire 1 )# read2Data [13] $end
$var wire 1 *# read2Data [12] $end
$var wire 1 +# read2Data [11] $end
$var wire 1 ,# read2Data [10] $end
$var wire 1 -# read2Data [9] $end
$var wire 1 .# read2Data [8] $end
$var wire 1 /# read2Data [7] $end
$var wire 1 0# read2Data [6] $end
$var wire 1 1# read2Data [5] $end
$var wire 1 2# read2Data [4] $end
$var wire 1 3# read2Data [3] $end
$var wire 1 4# read2Data [2] $end
$var wire 1 5# read2Data [1] $end
$var wire 1 6# read2Data [0] $end
$var wire 1 S! se_instruction_7_0 [15] $end
$var wire 1 T! se_instruction_7_0 [14] $end
$var wire 1 U! se_instruction_7_0 [13] $end
$var wire 1 V! se_instruction_7_0 [12] $end
$var wire 1 W! se_instruction_7_0 [11] $end
$var wire 1 X! se_instruction_7_0 [10] $end
$var wire 1 Y! se_instruction_7_0 [9] $end
$var wire 1 Z! se_instruction_7_0 [8] $end
$var wire 1 [! se_instruction_7_0 [7] $end
$var wire 1 \! se_instruction_7_0 [6] $end
$var wire 1 ]! se_instruction_7_0 [5] $end
$var wire 1 ^! se_instruction_7_0 [4] $end
$var wire 1 _! se_instruction_7_0 [3] $end
$var wire 1 `! se_instruction_7_0 [2] $end
$var wire 1 a! se_instruction_7_0 [1] $end
$var wire 1 b! se_instruction_7_0 [0] $end
$var wire 1 c! ze_instruction_7_0 [15] $end
$var wire 1 d! ze_instruction_7_0 [14] $end
$var wire 1 e! ze_instruction_7_0 [13] $end
$var wire 1 f! ze_instruction_7_0 [12] $end
$var wire 1 g! ze_instruction_7_0 [11] $end
$var wire 1 h! ze_instruction_7_0 [10] $end
$var wire 1 i! ze_instruction_7_0 [9] $end
$var wire 1 j! ze_instruction_7_0 [8] $end
$var wire 1 k! ze_instruction_7_0 [7] $end
$var wire 1 l! ze_instruction_7_0 [6] $end
$var wire 1 m! ze_instruction_7_0 [5] $end
$var wire 1 n! ze_instruction_7_0 [4] $end
$var wire 1 o! ze_instruction_7_0 [3] $end
$var wire 1 p! ze_instruction_7_0 [2] $end
$var wire 1 q! ze_instruction_7_0 [1] $end
$var wire 1 r! ze_instruction_7_0 [0] $end
$var wire 1 s! se_instruction_4_0 [15] $end
$var wire 1 t! se_instruction_4_0 [14] $end
$var wire 1 u! se_instruction_4_0 [13] $end
$var wire 1 v! se_instruction_4_0 [12] $end
$var wire 1 w! se_instruction_4_0 [11] $end
$var wire 1 x! se_instruction_4_0 [10] $end
$var wire 1 y! se_instruction_4_0 [9] $end
$var wire 1 z! se_instruction_4_0 [8] $end
$var wire 1 {! se_instruction_4_0 [7] $end
$var wire 1 |! se_instruction_4_0 [6] $end
$var wire 1 }! se_instruction_4_0 [5] $end
$var wire 1 ~! se_instruction_4_0 [4] $end
$var wire 1 !" se_instruction_4_0 [3] $end
$var wire 1 "" se_instruction_4_0 [2] $end
$var wire 1 #" se_instruction_4_0 [1] $end
$var wire 1 $" se_instruction_4_0 [0] $end
$var wire 1 ?! ALU_control_op [3] $end
$var wire 1 @! ALU_control_op [2] $end
$var wire 1 A! ALU_control_op [1] $end
$var wire 1 B! ALU_control_op [0] $end
$var wire 1 G# comp_value_out $end
$var wire 1 #! regdst [1] $end
$var wire 1 $! regdst [0] $end
$var wire 1 9! branch_and $end
$var wire 1 &! jump [1] $end
$var wire 1 '! jump [0] $end
$var wire 1 (! memread $end
$var wire 1 )! memtoreg $end
$var wire 1 *! ALUop [2] $end
$var wire 1 +! ALUop [1] $end
$var wire 1 ,! ALUop [0] $end
$var wire 1 -! memwrite $end
$var wire 1 .! ALUsrc [1] $end
$var wire 1 /! ALUsrc [0] $end
$var wire 1 0! regwrite $end
$var wire 1 1! regload [1] $end
$var wire 1 2! regload [0] $end
$var wire 1 3! trunc [1] $end
$var wire 1 4! trunc [0] $end
$var wire 1 5! hlt $end
$var wire 1 7! rti $end
$var wire 1 6! siic $end
$var wire 1 L/ mux0_out [3] $end
$var wire 1 M/ mux0_out [2] $end
$var wire 1 N/ mux0_out [1] $end
$var wire 1 O/ mux0_out [0] $end
$var wire 1 P/ err_reg_mod $end
$var wire 1 Q/ operand [15] $end
$var wire 1 R/ operand [14] $end
$var wire 1 S/ operand [13] $end
$var wire 1 T/ operand [12] $end
$var wire 1 U/ operand [11] $end
$var wire 1 V/ operand [10] $end
$var wire 1 W/ operand [9] $end
$var wire 1 X/ operand [8] $end
$var wire 1 Y/ operand [7] $end
$var wire 1 Z/ operand [6] $end
$var wire 1 [/ operand [5] $end
$var wire 1 \/ operand [4] $end
$var wire 1 ]/ operand [3] $end
$var wire 1 ^/ operand [2] $end
$var wire 1 _/ operand [1] $end
$var wire 1 `/ operand [0] $end
$var wire 1 a/ AltB $end
$var wire 1 b/ AgtB $end
$var wire 1 c/ AeqB $end
$var wire 1 d/ zero_out $end
$var reg 16 e/ diff_i [15:0] $end
$var reg 1 f/ sign_of_diff_i $end
$var reg 1 g/ eq $end
$var wire 1 h/ difference [15] $end
$var wire 1 i/ difference [14] $end
$var wire 1 j/ difference [13] $end
$var wire 1 k/ difference [12] $end
$var wire 1 l/ difference [11] $end
$var wire 1 m/ difference [10] $end
$var wire 1 n/ difference [9] $end
$var wire 1 o/ difference [8] $end
$var wire 1 p/ difference [7] $end
$var wire 1 q/ difference [6] $end
$var wire 1 r/ difference [5] $end
$var wire 1 s/ difference [4] $end
$var wire 1 t/ difference [3] $end
$var wire 1 u/ difference [2] $end
$var wire 1 v/ difference [1] $end
$var wire 1 w/ difference [0] $end
$var wire 1 x/ sign_of_difference $end

$scope module mux0 $end
$var wire 1 y/ InA [3] $end
$var wire 1 H! InA [2] $end
$var wire 1 I! InA [1] $end
$var wire 1 J! InA [0] $end
$var wire 1 z/ InB [3] $end
$var wire 1 N! InB [2] $end
$var wire 1 O! InB [1] $end
$var wire 1 P! InB [0] $end
$var wire 1 {/ InC [3] $end
$var wire 1 |/ InC [2] $end
$var wire 1 }/ InC [1] $end
$var wire 1 ~/ InC [0] $end
$var wire 1 !0 InD [3] $end
$var wire 1 K! InD [2] $end
$var wire 1 L! InD [1] $end
$var wire 1 M! InD [0] $end
$var wire 1 #! S [1] $end
$var wire 1 $! S [0] $end
$var wire 1 L/ Out [3] $end
$var wire 1 M/ Out [2] $end
$var wire 1 N/ Out [1] $end
$var wire 1 O/ Out [0] $end
$var wire 1 "0 Out_1 $end
$var wire 1 #0 Out_2 $end

$scope module inst_0 $end
$var wire 1 J! InA $end
$var wire 1 P! InB $end
$var wire 1 ~/ InC $end
$var wire 1 M! InD $end
$var wire 1 #! S [1] $end
$var wire 1 $! S [0] $end
$var wire 1 O/ Out $end
$var wire 1 $0 Out_1 $end
$var wire 1 %0 Out_2 $end

$scope module inst_1 $end
$var wire 1 J! InA $end
$var wire 1 P! InB $end
$var wire 1 $! S $end
$var wire 1 $0 Out $end
$var wire 1 &0 notS $end
$var wire 1 '0 pdt1 $end
$var wire 1 (0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 &0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 P! in2 $end
$var wire 1 '0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 &0 in1 $end
$var wire 1 J! in2 $end
$var wire 1 (0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 '0 in1 $end
$var wire 1 (0 in2 $end
$var wire 1 $0 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ~/ InA $end
$var wire 1 M! InB $end
$var wire 1 $! S $end
$var wire 1 %0 Out $end
$var wire 1 )0 notS $end
$var wire 1 *0 pdt1 $end
$var wire 1 +0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 )0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 M! in2 $end
$var wire 1 *0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 )0 in1 $end
$var wire 1 ~/ in2 $end
$var wire 1 +0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 *0 in1 $end
$var wire 1 +0 in2 $end
$var wire 1 %0 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 $0 InA $end
$var wire 1 %0 InB $end
$var wire 1 #! S $end
$var wire 1 O/ Out $end
$var wire 1 ,0 notS $end
$var wire 1 -0 pdt1 $end
$var wire 1 .0 pdt2 $end

$scope module not_inst $end
$var wire 1 #! in1 $end
$var wire 1 ,0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 #! in1 $end
$var wire 1 %0 in2 $end
$var wire 1 -0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ,0 in1 $end
$var wire 1 $0 in2 $end
$var wire 1 .0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 -0 in1 $end
$var wire 1 .0 in2 $end
$var wire 1 O/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 I! InA $end
$var wire 1 O! InB $end
$var wire 1 }/ InC $end
$var wire 1 L! InD $end
$var wire 1 #! S [1] $end
$var wire 1 $! S [0] $end
$var wire 1 N/ Out $end
$var wire 1 /0 Out_1 $end
$var wire 1 00 Out_2 $end

$scope module inst_1 $end
$var wire 1 I! InA $end
$var wire 1 O! InB $end
$var wire 1 $! S $end
$var wire 1 /0 Out $end
$var wire 1 10 notS $end
$var wire 1 20 pdt1 $end
$var wire 1 30 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 10 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 O! in2 $end
$var wire 1 20 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 10 in1 $end
$var wire 1 I! in2 $end
$var wire 1 30 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 20 in1 $end
$var wire 1 30 in2 $end
$var wire 1 /0 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 }/ InA $end
$var wire 1 L! InB $end
$var wire 1 $! S $end
$var wire 1 00 Out $end
$var wire 1 40 notS $end
$var wire 1 50 pdt1 $end
$var wire 1 60 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 40 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 L! in2 $end
$var wire 1 50 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 40 in1 $end
$var wire 1 }/ in2 $end
$var wire 1 60 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 50 in1 $end
$var wire 1 60 in2 $end
$var wire 1 00 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 /0 InA $end
$var wire 1 00 InB $end
$var wire 1 #! S $end
$var wire 1 N/ Out $end
$var wire 1 70 notS $end
$var wire 1 80 pdt1 $end
$var wire 1 90 pdt2 $end

$scope module not_inst $end
$var wire 1 #! in1 $end
$var wire 1 70 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 #! in1 $end
$var wire 1 00 in2 $end
$var wire 1 80 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 70 in1 $end
$var wire 1 /0 in2 $end
$var wire 1 90 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 80 in1 $end
$var wire 1 90 in2 $end
$var wire 1 N/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 H! InA $end
$var wire 1 N! InB $end
$var wire 1 |/ InC $end
$var wire 1 K! InD $end
$var wire 1 #! S [1] $end
$var wire 1 $! S [0] $end
$var wire 1 M/ Out $end
$var wire 1 :0 Out_1 $end
$var wire 1 ;0 Out_2 $end

$scope module inst_1 $end
$var wire 1 H! InA $end
$var wire 1 N! InB $end
$var wire 1 $! S $end
$var wire 1 :0 Out $end
$var wire 1 <0 notS $end
$var wire 1 =0 pdt1 $end
$var wire 1 >0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 <0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 N! in2 $end
$var wire 1 =0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 <0 in1 $end
$var wire 1 H! in2 $end
$var wire 1 >0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 =0 in1 $end
$var wire 1 >0 in2 $end
$var wire 1 :0 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 |/ InA $end
$var wire 1 K! InB $end
$var wire 1 $! S $end
$var wire 1 ;0 Out $end
$var wire 1 ?0 notS $end
$var wire 1 @0 pdt1 $end
$var wire 1 A0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 ?0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 K! in2 $end
$var wire 1 @0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ?0 in1 $end
$var wire 1 |/ in2 $end
$var wire 1 A0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 @0 in1 $end
$var wire 1 A0 in2 $end
$var wire 1 ;0 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 :0 InA $end
$var wire 1 ;0 InB $end
$var wire 1 #! S $end
$var wire 1 M/ Out $end
$var wire 1 B0 notS $end
$var wire 1 C0 pdt1 $end
$var wire 1 D0 pdt2 $end

$scope module not_inst $end
$var wire 1 #! in1 $end
$var wire 1 B0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 #! in1 $end
$var wire 1 ;0 in2 $end
$var wire 1 C0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 B0 in1 $end
$var wire 1 :0 in2 $end
$var wire 1 D0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 C0 in1 $end
$var wire 1 D0 in2 $end
$var wire 1 M/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 y/ InA $end
$var wire 1 z/ InB $end
$var wire 1 {/ InC $end
$var wire 1 !0 InD $end
$var wire 1 #! S [1] $end
$var wire 1 $! S [0] $end
$var wire 1 L/ Out $end
$var wire 1 E0 Out_1 $end
$var wire 1 F0 Out_2 $end

$scope module inst_1 $end
$var wire 1 y/ InA $end
$var wire 1 z/ InB $end
$var wire 1 $! S $end
$var wire 1 E0 Out $end
$var wire 1 G0 notS $end
$var wire 1 H0 pdt1 $end
$var wire 1 I0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 G0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 z/ in2 $end
$var wire 1 H0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 G0 in1 $end
$var wire 1 y/ in2 $end
$var wire 1 I0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 H0 in1 $end
$var wire 1 I0 in2 $end
$var wire 1 E0 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 {/ InA $end
$var wire 1 !0 InB $end
$var wire 1 $! S $end
$var wire 1 F0 Out $end
$var wire 1 J0 notS $end
$var wire 1 K0 pdt1 $end
$var wire 1 L0 pdt2 $end

$scope module not_inst $end
$var wire 1 $! in1 $end
$var wire 1 J0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 $! in1 $end
$var wire 1 !0 in2 $end
$var wire 1 K0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 J0 in1 $end
$var wire 1 {/ in2 $end
$var wire 1 L0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 K0 in1 $end
$var wire 1 L0 in2 $end
$var wire 1 F0 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 E0 InA $end
$var wire 1 F0 InB $end
$var wire 1 #! S $end
$var wire 1 L/ Out $end
$var wire 1 M0 notS $end
$var wire 1 N0 pdt1 $end
$var wire 1 O0 pdt2 $end

$scope module not_inst $end
$var wire 1 #! in1 $end
$var wire 1 M0 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 #! in1 $end
$var wire 1 F0 in2 $end
$var wire 1 N0 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 M0 in1 $end
$var wire 1 E0 in2 $end
$var wire 1 O0 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 N0 in1 $end
$var wire 1 O0 in2 $end
$var wire 1 L/ out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module reg_inst $end
$var parameter 32 P0 REG_WIDTH $end
$var parameter 3 Q0 REGISTER_0 $end
$var parameter 3 R0 REGISTER_1 $end
$var parameter 3 S0 REGISTER_2 $end
$var parameter 3 T0 REGISTER_3 $end
$var parameter 3 U0 REGISTER_4 $end
$var parameter 3 V0 REGISTER_5 $end
$var parameter 3 W0 REGISTER_6 $end
$var parameter 3 X0 REGISTER_7 $end
$var parameter 3 Y0 REGISTER_8 $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 H! read1RegSel [2] $end
$var wire 1 I! read1RegSel [1] $end
$var wire 1 J! read1RegSel [0] $end
$var wire 1 K! read2RegSel [2] $end
$var wire 1 L! read2RegSel [1] $end
$var wire 1 M! read2RegSel [0] $end
$var wire 1 M/ writeRegSel [2] $end
$var wire 1 N/ writeRegSel [1] $end
$var wire 1 O/ writeRegSel [0] $end
$var wire 1 7# writeData [15] $end
$var wire 1 8# writeData [14] $end
$var wire 1 9# writeData [13] $end
$var wire 1 :# writeData [12] $end
$var wire 1 ;# writeData [11] $end
$var wire 1 <# writeData [10] $end
$var wire 1 =# writeData [9] $end
$var wire 1 ># writeData [8] $end
$var wire 1 ?# writeData [7] $end
$var wire 1 @# writeData [6] $end
$var wire 1 A# writeData [5] $end
$var wire 1 B# writeData [4] $end
$var wire 1 C# writeData [3] $end
$var wire 1 D# writeData [2] $end
$var wire 1 E# writeData [1] $end
$var wire 1 F# writeData [0] $end
$var wire 1 0! writeEn $end
$var reg 16 Z0 read1Data [15:0] $end
$var reg 16 [0 read2Data [15:0] $end
$var wire 1 P/ err $end
$var reg 16 \0 reg_0 [15:0] $end
$var reg 16 ]0 reg_1 [15:0] $end
$var reg 16 ^0 reg_2 [15:0] $end
$var reg 16 _0 reg_3 [15:0] $end
$var reg 16 `0 reg_4 [15:0] $end
$var reg 16 a0 reg_5 [15:0] $end
$var reg 16 b0 reg_6 [15:0] $end
$var reg 16 c0 reg_7 [15:0] $end
$var wire 1 d0 reg_out_0 [15] $end
$var wire 1 e0 reg_out_0 [14] $end
$var wire 1 f0 reg_out_0 [13] $end
$var wire 1 g0 reg_out_0 [12] $end
$var wire 1 h0 reg_out_0 [11] $end
$var wire 1 i0 reg_out_0 [10] $end
$var wire 1 j0 reg_out_0 [9] $end
$var wire 1 k0 reg_out_0 [8] $end
$var wire 1 l0 reg_out_0 [7] $end
$var wire 1 m0 reg_out_0 [6] $end
$var wire 1 n0 reg_out_0 [5] $end
$var wire 1 o0 reg_out_0 [4] $end
$var wire 1 p0 reg_out_0 [3] $end
$var wire 1 q0 reg_out_0 [2] $end
$var wire 1 r0 reg_out_0 [1] $end
$var wire 1 s0 reg_out_0 [0] $end
$var wire 1 t0 reg_out_1 [15] $end
$var wire 1 u0 reg_out_1 [14] $end
$var wire 1 v0 reg_out_1 [13] $end
$var wire 1 w0 reg_out_1 [12] $end
$var wire 1 x0 reg_out_1 [11] $end
$var wire 1 y0 reg_out_1 [10] $end
$var wire 1 z0 reg_out_1 [9] $end
$var wire 1 {0 reg_out_1 [8] $end
$var wire 1 |0 reg_out_1 [7] $end
$var wire 1 }0 reg_out_1 [6] $end
$var wire 1 ~0 reg_out_1 [5] $end
$var wire 1 !1 reg_out_1 [4] $end
$var wire 1 "1 reg_out_1 [3] $end
$var wire 1 #1 reg_out_1 [2] $end
$var wire 1 $1 reg_out_1 [1] $end
$var wire 1 %1 reg_out_1 [0] $end
$var wire 1 &1 reg_out_2 [15] $end
$var wire 1 '1 reg_out_2 [14] $end
$var wire 1 (1 reg_out_2 [13] $end
$var wire 1 )1 reg_out_2 [12] $end
$var wire 1 *1 reg_out_2 [11] $end
$var wire 1 +1 reg_out_2 [10] $end
$var wire 1 ,1 reg_out_2 [9] $end
$var wire 1 -1 reg_out_2 [8] $end
$var wire 1 .1 reg_out_2 [7] $end
$var wire 1 /1 reg_out_2 [6] $end
$var wire 1 01 reg_out_2 [5] $end
$var wire 1 11 reg_out_2 [4] $end
$var wire 1 21 reg_out_2 [3] $end
$var wire 1 31 reg_out_2 [2] $end
$var wire 1 41 reg_out_2 [1] $end
$var wire 1 51 reg_out_2 [0] $end
$var wire 1 61 reg_out_3 [15] $end
$var wire 1 71 reg_out_3 [14] $end
$var wire 1 81 reg_out_3 [13] $end
$var wire 1 91 reg_out_3 [12] $end
$var wire 1 :1 reg_out_3 [11] $end
$var wire 1 ;1 reg_out_3 [10] $end
$var wire 1 <1 reg_out_3 [9] $end
$var wire 1 =1 reg_out_3 [8] $end
$var wire 1 >1 reg_out_3 [7] $end
$var wire 1 ?1 reg_out_3 [6] $end
$var wire 1 @1 reg_out_3 [5] $end
$var wire 1 A1 reg_out_3 [4] $end
$var wire 1 B1 reg_out_3 [3] $end
$var wire 1 C1 reg_out_3 [2] $end
$var wire 1 D1 reg_out_3 [1] $end
$var wire 1 E1 reg_out_3 [0] $end
$var wire 1 F1 reg_out_4 [15] $end
$var wire 1 G1 reg_out_4 [14] $end
$var wire 1 H1 reg_out_4 [13] $end
$var wire 1 I1 reg_out_4 [12] $end
$var wire 1 J1 reg_out_4 [11] $end
$var wire 1 K1 reg_out_4 [10] $end
$var wire 1 L1 reg_out_4 [9] $end
$var wire 1 M1 reg_out_4 [8] $end
$var wire 1 N1 reg_out_4 [7] $end
$var wire 1 O1 reg_out_4 [6] $end
$var wire 1 P1 reg_out_4 [5] $end
$var wire 1 Q1 reg_out_4 [4] $end
$var wire 1 R1 reg_out_4 [3] $end
$var wire 1 S1 reg_out_4 [2] $end
$var wire 1 T1 reg_out_4 [1] $end
$var wire 1 U1 reg_out_4 [0] $end
$var wire 1 V1 reg_out_5 [15] $end
$var wire 1 W1 reg_out_5 [14] $end
$var wire 1 X1 reg_out_5 [13] $end
$var wire 1 Y1 reg_out_5 [12] $end
$var wire 1 Z1 reg_out_5 [11] $end
$var wire 1 [1 reg_out_5 [10] $end
$var wire 1 \1 reg_out_5 [9] $end
$var wire 1 ]1 reg_out_5 [8] $end
$var wire 1 ^1 reg_out_5 [7] $end
$var wire 1 _1 reg_out_5 [6] $end
$var wire 1 `1 reg_out_5 [5] $end
$var wire 1 a1 reg_out_5 [4] $end
$var wire 1 b1 reg_out_5 [3] $end
$var wire 1 c1 reg_out_5 [2] $end
$var wire 1 d1 reg_out_5 [1] $end
$var wire 1 e1 reg_out_5 [0] $end
$var wire 1 f1 reg_out_6 [15] $end
$var wire 1 g1 reg_out_6 [14] $end
$var wire 1 h1 reg_out_6 [13] $end
$var wire 1 i1 reg_out_6 [12] $end
$var wire 1 j1 reg_out_6 [11] $end
$var wire 1 k1 reg_out_6 [10] $end
$var wire 1 l1 reg_out_6 [9] $end
$var wire 1 m1 reg_out_6 [8] $end
$var wire 1 n1 reg_out_6 [7] $end
$var wire 1 o1 reg_out_6 [6] $end
$var wire 1 p1 reg_out_6 [5] $end
$var wire 1 q1 reg_out_6 [4] $end
$var wire 1 r1 reg_out_6 [3] $end
$var wire 1 s1 reg_out_6 [2] $end
$var wire 1 t1 reg_out_6 [1] $end
$var wire 1 u1 reg_out_6 [0] $end
$var wire 1 v1 reg_out_7 [15] $end
$var wire 1 w1 reg_out_7 [14] $end
$var wire 1 x1 reg_out_7 [13] $end
$var wire 1 y1 reg_out_7 [12] $end
$var wire 1 z1 reg_out_7 [11] $end
$var wire 1 {1 reg_out_7 [10] $end
$var wire 1 |1 reg_out_7 [9] $end
$var wire 1 }1 reg_out_7 [8] $end
$var wire 1 ~1 reg_out_7 [7] $end
$var wire 1 !2 reg_out_7 [6] $end
$var wire 1 "2 reg_out_7 [5] $end
$var wire 1 #2 reg_out_7 [4] $end
$var wire 1 $2 reg_out_7 [3] $end
$var wire 1 %2 reg_out_7 [2] $end
$var wire 1 &2 reg_out_7 [1] $end
$var wire 1 '2 reg_out_7 [0] $end

$scope module reg0_inst $end
$var parameter 32 (2 REG_WIDTH $end
$var wire 1 d0 q [15] $end
$var wire 1 e0 q [14] $end
$var wire 1 f0 q [13] $end
$var wire 1 g0 q [12] $end
$var wire 1 h0 q [11] $end
$var wire 1 i0 q [10] $end
$var wire 1 j0 q [9] $end
$var wire 1 k0 q [8] $end
$var wire 1 l0 q [7] $end
$var wire 1 m0 q [6] $end
$var wire 1 n0 q [5] $end
$var wire 1 o0 q [4] $end
$var wire 1 p0 q [3] $end
$var wire 1 q0 q [2] $end
$var wire 1 r0 q [1] $end
$var wire 1 s0 q [0] $end
$var wire 1 )2 d [15] $end
$var wire 1 *2 d [14] $end
$var wire 1 +2 d [13] $end
$var wire 1 ,2 d [12] $end
$var wire 1 -2 d [11] $end
$var wire 1 .2 d [10] $end
$var wire 1 /2 d [9] $end
$var wire 1 02 d [8] $end
$var wire 1 12 d [7] $end
$var wire 1 22 d [6] $end
$var wire 1 32 d [5] $end
$var wire 1 42 d [4] $end
$var wire 1 52 d [3] $end
$var wire 1 62 d [2] $end
$var wire 1 72 d [1] $end
$var wire 1 82 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 d0 q $end
$var wire 1 )2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 92 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 e0 q $end
$var wire 1 *2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 :2 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 f0 q $end
$var wire 1 +2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ;2 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 g0 q $end
$var wire 1 ,2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 <2 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 h0 q $end
$var wire 1 -2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 =2 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 i0 q $end
$var wire 1 .2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 >2 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 j0 q $end
$var wire 1 /2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ?2 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 k0 q $end
$var wire 1 02 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 @2 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 l0 q $end
$var wire 1 12 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 A2 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 m0 q $end
$var wire 1 22 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 B2 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 n0 q $end
$var wire 1 32 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C2 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 o0 q $end
$var wire 1 42 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D2 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 p0 q $end
$var wire 1 52 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 E2 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 q0 q $end
$var wire 1 62 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F2 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 r0 q $end
$var wire 1 72 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G2 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 s0 q $end
$var wire 1 82 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H2 state $end
$upscope $end
$upscope $end

$scope module reg1_inst $end
$var parameter 32 I2 REG_WIDTH $end
$var wire 1 t0 q [15] $end
$var wire 1 u0 q [14] $end
$var wire 1 v0 q [13] $end
$var wire 1 w0 q [12] $end
$var wire 1 x0 q [11] $end
$var wire 1 y0 q [10] $end
$var wire 1 z0 q [9] $end
$var wire 1 {0 q [8] $end
$var wire 1 |0 q [7] $end
$var wire 1 }0 q [6] $end
$var wire 1 ~0 q [5] $end
$var wire 1 !1 q [4] $end
$var wire 1 "1 q [3] $end
$var wire 1 #1 q [2] $end
$var wire 1 $1 q [1] $end
$var wire 1 %1 q [0] $end
$var wire 1 J2 d [15] $end
$var wire 1 K2 d [14] $end
$var wire 1 L2 d [13] $end
$var wire 1 M2 d [12] $end
$var wire 1 N2 d [11] $end
$var wire 1 O2 d [10] $end
$var wire 1 P2 d [9] $end
$var wire 1 Q2 d [8] $end
$var wire 1 R2 d [7] $end
$var wire 1 S2 d [6] $end
$var wire 1 T2 d [5] $end
$var wire 1 U2 d [4] $end
$var wire 1 V2 d [3] $end
$var wire 1 W2 d [2] $end
$var wire 1 X2 d [1] $end
$var wire 1 Y2 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 t0 q $end
$var wire 1 J2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Z2 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 u0 q $end
$var wire 1 K2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 [2 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 v0 q $end
$var wire 1 L2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 \2 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 w0 q $end
$var wire 1 M2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ]2 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 x0 q $end
$var wire 1 N2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ^2 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 y0 q $end
$var wire 1 O2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 _2 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 z0 q $end
$var wire 1 P2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 `2 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 {0 q $end
$var wire 1 Q2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 a2 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 |0 q $end
$var wire 1 R2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 b2 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 }0 q $end
$var wire 1 S2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 c2 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 ~0 q $end
$var wire 1 T2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 d2 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 !1 q $end
$var wire 1 U2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 e2 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 "1 q $end
$var wire 1 V2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 f2 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 #1 q $end
$var wire 1 W2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 g2 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 $1 q $end
$var wire 1 X2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 h2 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 %1 q $end
$var wire 1 Y2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 i2 state $end
$upscope $end
$upscope $end

$scope module reg2_inst $end
$var parameter 32 j2 REG_WIDTH $end
$var wire 1 &1 q [15] $end
$var wire 1 '1 q [14] $end
$var wire 1 (1 q [13] $end
$var wire 1 )1 q [12] $end
$var wire 1 *1 q [11] $end
$var wire 1 +1 q [10] $end
$var wire 1 ,1 q [9] $end
$var wire 1 -1 q [8] $end
$var wire 1 .1 q [7] $end
$var wire 1 /1 q [6] $end
$var wire 1 01 q [5] $end
$var wire 1 11 q [4] $end
$var wire 1 21 q [3] $end
$var wire 1 31 q [2] $end
$var wire 1 41 q [1] $end
$var wire 1 51 q [0] $end
$var wire 1 k2 d [15] $end
$var wire 1 l2 d [14] $end
$var wire 1 m2 d [13] $end
$var wire 1 n2 d [12] $end
$var wire 1 o2 d [11] $end
$var wire 1 p2 d [10] $end
$var wire 1 q2 d [9] $end
$var wire 1 r2 d [8] $end
$var wire 1 s2 d [7] $end
$var wire 1 t2 d [6] $end
$var wire 1 u2 d [5] $end
$var wire 1 v2 d [4] $end
$var wire 1 w2 d [3] $end
$var wire 1 x2 d [2] $end
$var wire 1 y2 d [1] $end
$var wire 1 z2 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 &1 q $end
$var wire 1 k2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 {2 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 '1 q $end
$var wire 1 l2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 |2 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 (1 q $end
$var wire 1 m2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 }2 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 )1 q $end
$var wire 1 n2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ~2 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 *1 q $end
$var wire 1 o2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 !3 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 +1 q $end
$var wire 1 p2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 "3 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 ,1 q $end
$var wire 1 q2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 #3 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 -1 q $end
$var wire 1 r2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 $3 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 .1 q $end
$var wire 1 s2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 %3 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 /1 q $end
$var wire 1 t2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 &3 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 01 q $end
$var wire 1 u2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 '3 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 11 q $end
$var wire 1 v2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 (3 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 21 q $end
$var wire 1 w2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 )3 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 31 q $end
$var wire 1 x2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 *3 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 41 q $end
$var wire 1 y2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 +3 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 51 q $end
$var wire 1 z2 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ,3 state $end
$upscope $end
$upscope $end

$scope module reg3_inst $end
$var parameter 32 -3 REG_WIDTH $end
$var wire 1 61 q [15] $end
$var wire 1 71 q [14] $end
$var wire 1 81 q [13] $end
$var wire 1 91 q [12] $end
$var wire 1 :1 q [11] $end
$var wire 1 ;1 q [10] $end
$var wire 1 <1 q [9] $end
$var wire 1 =1 q [8] $end
$var wire 1 >1 q [7] $end
$var wire 1 ?1 q [6] $end
$var wire 1 @1 q [5] $end
$var wire 1 A1 q [4] $end
$var wire 1 B1 q [3] $end
$var wire 1 C1 q [2] $end
$var wire 1 D1 q [1] $end
$var wire 1 E1 q [0] $end
$var wire 1 .3 d [15] $end
$var wire 1 /3 d [14] $end
$var wire 1 03 d [13] $end
$var wire 1 13 d [12] $end
$var wire 1 23 d [11] $end
$var wire 1 33 d [10] $end
$var wire 1 43 d [9] $end
$var wire 1 53 d [8] $end
$var wire 1 63 d [7] $end
$var wire 1 73 d [6] $end
$var wire 1 83 d [5] $end
$var wire 1 93 d [4] $end
$var wire 1 :3 d [3] $end
$var wire 1 ;3 d [2] $end
$var wire 1 <3 d [1] $end
$var wire 1 =3 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 61 q $end
$var wire 1 .3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 >3 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 71 q $end
$var wire 1 /3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ?3 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 81 q $end
$var wire 1 03 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 @3 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 91 q $end
$var wire 1 13 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 A3 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 :1 q $end
$var wire 1 23 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 B3 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 ;1 q $end
$var wire 1 33 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C3 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 <1 q $end
$var wire 1 43 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D3 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 =1 q $end
$var wire 1 53 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 E3 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 >1 q $end
$var wire 1 63 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F3 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 ?1 q $end
$var wire 1 73 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G3 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 @1 q $end
$var wire 1 83 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H3 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 A1 q $end
$var wire 1 93 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 I3 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 B1 q $end
$var wire 1 :3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 J3 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 C1 q $end
$var wire 1 ;3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 K3 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 D1 q $end
$var wire 1 <3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 L3 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 E1 q $end
$var wire 1 =3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 M3 state $end
$upscope $end
$upscope $end

$scope module reg4_inst $end
$var parameter 32 N3 REG_WIDTH $end
$var wire 1 F1 q [15] $end
$var wire 1 G1 q [14] $end
$var wire 1 H1 q [13] $end
$var wire 1 I1 q [12] $end
$var wire 1 J1 q [11] $end
$var wire 1 K1 q [10] $end
$var wire 1 L1 q [9] $end
$var wire 1 M1 q [8] $end
$var wire 1 N1 q [7] $end
$var wire 1 O1 q [6] $end
$var wire 1 P1 q [5] $end
$var wire 1 Q1 q [4] $end
$var wire 1 R1 q [3] $end
$var wire 1 S1 q [2] $end
$var wire 1 T1 q [1] $end
$var wire 1 U1 q [0] $end
$var wire 1 O3 d [15] $end
$var wire 1 P3 d [14] $end
$var wire 1 Q3 d [13] $end
$var wire 1 R3 d [12] $end
$var wire 1 S3 d [11] $end
$var wire 1 T3 d [10] $end
$var wire 1 U3 d [9] $end
$var wire 1 V3 d [8] $end
$var wire 1 W3 d [7] $end
$var wire 1 X3 d [6] $end
$var wire 1 Y3 d [5] $end
$var wire 1 Z3 d [4] $end
$var wire 1 [3 d [3] $end
$var wire 1 \3 d [2] $end
$var wire 1 ]3 d [1] $end
$var wire 1 ^3 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 F1 q $end
$var wire 1 O3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 _3 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 G1 q $end
$var wire 1 P3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 `3 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 H1 q $end
$var wire 1 Q3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 a3 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 I1 q $end
$var wire 1 R3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 b3 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 J1 q $end
$var wire 1 S3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 c3 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 K1 q $end
$var wire 1 T3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 d3 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 L1 q $end
$var wire 1 U3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 e3 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 M1 q $end
$var wire 1 V3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 f3 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 N1 q $end
$var wire 1 W3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 g3 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 O1 q $end
$var wire 1 X3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 h3 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 P1 q $end
$var wire 1 Y3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 i3 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 Q1 q $end
$var wire 1 Z3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 j3 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 R1 q $end
$var wire 1 [3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 k3 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 S1 q $end
$var wire 1 \3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 l3 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 T1 q $end
$var wire 1 ]3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 m3 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 U1 q $end
$var wire 1 ^3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 n3 state $end
$upscope $end
$upscope $end

$scope module reg5_inst $end
$var parameter 32 o3 REG_WIDTH $end
$var wire 1 V1 q [15] $end
$var wire 1 W1 q [14] $end
$var wire 1 X1 q [13] $end
$var wire 1 Y1 q [12] $end
$var wire 1 Z1 q [11] $end
$var wire 1 [1 q [10] $end
$var wire 1 \1 q [9] $end
$var wire 1 ]1 q [8] $end
$var wire 1 ^1 q [7] $end
$var wire 1 _1 q [6] $end
$var wire 1 `1 q [5] $end
$var wire 1 a1 q [4] $end
$var wire 1 b1 q [3] $end
$var wire 1 c1 q [2] $end
$var wire 1 d1 q [1] $end
$var wire 1 e1 q [0] $end
$var wire 1 p3 d [15] $end
$var wire 1 q3 d [14] $end
$var wire 1 r3 d [13] $end
$var wire 1 s3 d [12] $end
$var wire 1 t3 d [11] $end
$var wire 1 u3 d [10] $end
$var wire 1 v3 d [9] $end
$var wire 1 w3 d [8] $end
$var wire 1 x3 d [7] $end
$var wire 1 y3 d [6] $end
$var wire 1 z3 d [5] $end
$var wire 1 {3 d [4] $end
$var wire 1 |3 d [3] $end
$var wire 1 }3 d [2] $end
$var wire 1 ~3 d [1] $end
$var wire 1 !4 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 V1 q $end
$var wire 1 p3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 "4 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 W1 q $end
$var wire 1 q3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 #4 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 X1 q $end
$var wire 1 r3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 $4 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 Y1 q $end
$var wire 1 s3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 %4 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 Z1 q $end
$var wire 1 t3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 &4 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 [1 q $end
$var wire 1 u3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 '4 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 \1 q $end
$var wire 1 v3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 (4 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 ]1 q $end
$var wire 1 w3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 )4 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 ^1 q $end
$var wire 1 x3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 *4 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 _1 q $end
$var wire 1 y3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 +4 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 `1 q $end
$var wire 1 z3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 ,4 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 a1 q $end
$var wire 1 {3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 -4 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 b1 q $end
$var wire 1 |3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 .4 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 c1 q $end
$var wire 1 }3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 /4 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 d1 q $end
$var wire 1 ~3 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 04 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 e1 q $end
$var wire 1 !4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 14 state $end
$upscope $end
$upscope $end

$scope module reg6_inst $end
$var parameter 32 24 REG_WIDTH $end
$var wire 1 f1 q [15] $end
$var wire 1 g1 q [14] $end
$var wire 1 h1 q [13] $end
$var wire 1 i1 q [12] $end
$var wire 1 j1 q [11] $end
$var wire 1 k1 q [10] $end
$var wire 1 l1 q [9] $end
$var wire 1 m1 q [8] $end
$var wire 1 n1 q [7] $end
$var wire 1 o1 q [6] $end
$var wire 1 p1 q [5] $end
$var wire 1 q1 q [4] $end
$var wire 1 r1 q [3] $end
$var wire 1 s1 q [2] $end
$var wire 1 t1 q [1] $end
$var wire 1 u1 q [0] $end
$var wire 1 34 d [15] $end
$var wire 1 44 d [14] $end
$var wire 1 54 d [13] $end
$var wire 1 64 d [12] $end
$var wire 1 74 d [11] $end
$var wire 1 84 d [10] $end
$var wire 1 94 d [9] $end
$var wire 1 :4 d [8] $end
$var wire 1 ;4 d [7] $end
$var wire 1 <4 d [6] $end
$var wire 1 =4 d [5] $end
$var wire 1 >4 d [4] $end
$var wire 1 ?4 d [3] $end
$var wire 1 @4 d [2] $end
$var wire 1 A4 d [1] $end
$var wire 1 B4 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 f1 q $end
$var wire 1 34 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 C4 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 g1 q $end
$var wire 1 44 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 D4 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 h1 q $end
$var wire 1 54 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 E4 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 i1 q $end
$var wire 1 64 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 F4 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 j1 q $end
$var wire 1 74 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 G4 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 k1 q $end
$var wire 1 84 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 H4 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 l1 q $end
$var wire 1 94 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 I4 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 m1 q $end
$var wire 1 :4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 J4 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 n1 q $end
$var wire 1 ;4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 K4 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 o1 q $end
$var wire 1 <4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 L4 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 p1 q $end
$var wire 1 =4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 M4 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 q1 q $end
$var wire 1 >4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 N4 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 r1 q $end
$var wire 1 ?4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 O4 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 s1 q $end
$var wire 1 @4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 P4 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 t1 q $end
$var wire 1 A4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 Q4 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 u1 q $end
$var wire 1 B4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 R4 state $end
$upscope $end
$upscope $end

$scope module reg7_inst $end
$var parameter 32 S4 REG_WIDTH $end
$var wire 1 v1 q [15] $end
$var wire 1 w1 q [14] $end
$var wire 1 x1 q [13] $end
$var wire 1 y1 q [12] $end
$var wire 1 z1 q [11] $end
$var wire 1 {1 q [10] $end
$var wire 1 |1 q [9] $end
$var wire 1 }1 q [8] $end
$var wire 1 ~1 q [7] $end
$var wire 1 !2 q [6] $end
$var wire 1 "2 q [5] $end
$var wire 1 #2 q [4] $end
$var wire 1 $2 q [3] $end
$var wire 1 %2 q [2] $end
$var wire 1 &2 q [1] $end
$var wire 1 '2 q [0] $end
$var wire 1 T4 d [15] $end
$var wire 1 U4 d [14] $end
$var wire 1 V4 d [13] $end
$var wire 1 W4 d [12] $end
$var wire 1 X4 d [11] $end
$var wire 1 Y4 d [10] $end
$var wire 1 Z4 d [9] $end
$var wire 1 [4 d [8] $end
$var wire 1 \4 d [7] $end
$var wire 1 ]4 d [6] $end
$var wire 1 ^4 d [5] $end
$var wire 1 _4 d [4] $end
$var wire 1 `4 d [3] $end
$var wire 1 a4 d [2] $end
$var wire 1 b4 d [1] $end
$var wire 1 c4 d [0] $end
$var wire 1 { clk $end
$var wire 1 } rst $end

$scope module reg_inst[15] $end
$var wire 1 v1 q $end
$var wire 1 T4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 d4 state $end
$upscope $end

$scope module reg_inst[14] $end
$var wire 1 w1 q $end
$var wire 1 U4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 e4 state $end
$upscope $end

$scope module reg_inst[13] $end
$var wire 1 x1 q $end
$var wire 1 V4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 f4 state $end
$upscope $end

$scope module reg_inst[12] $end
$var wire 1 y1 q $end
$var wire 1 W4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 g4 state $end
$upscope $end

$scope module reg_inst[11] $end
$var wire 1 z1 q $end
$var wire 1 X4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 h4 state $end
$upscope $end

$scope module reg_inst[10] $end
$var wire 1 {1 q $end
$var wire 1 Y4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 i4 state $end
$upscope $end

$scope module reg_inst[9] $end
$var wire 1 |1 q $end
$var wire 1 Z4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 j4 state $end
$upscope $end

$scope module reg_inst[8] $end
$var wire 1 }1 q $end
$var wire 1 [4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 k4 state $end
$upscope $end

$scope module reg_inst[7] $end
$var wire 1 ~1 q $end
$var wire 1 \4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 l4 state $end
$upscope $end

$scope module reg_inst[6] $end
$var wire 1 !2 q $end
$var wire 1 ]4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 m4 state $end
$upscope $end

$scope module reg_inst[5] $end
$var wire 1 "2 q $end
$var wire 1 ^4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 n4 state $end
$upscope $end

$scope module reg_inst[4] $end
$var wire 1 #2 q $end
$var wire 1 _4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 o4 state $end
$upscope $end

$scope module reg_inst[3] $end
$var wire 1 $2 q $end
$var wire 1 `4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 p4 state $end
$upscope $end

$scope module reg_inst[2] $end
$var wire 1 %2 q $end
$var wire 1 a4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 q4 state $end
$upscope $end

$scope module reg_inst[1] $end
$var wire 1 &2 q $end
$var wire 1 b4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 r4 state $end
$upscope $end

$scope module reg_inst[0] $end
$var wire 1 '2 q $end
$var wire 1 c4 d $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 s4 state $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux_op $end
$var wire 1 t4 InA [15] $end
$var wire 1 u4 InA [14] $end
$var wire 1 v4 InA [13] $end
$var wire 1 w4 InA [12] $end
$var wire 1 x4 InA [11] $end
$var wire 1 y4 InA [10] $end
$var wire 1 z4 InA [9] $end
$var wire 1 {4 InA [8] $end
$var wire 1 |4 InA [7] $end
$var wire 1 }4 InA [6] $end
$var wire 1 ~4 InA [5] $end
$var wire 1 !5 InA [4] $end
$var wire 1 "5 InA [3] $end
$var wire 1 #5 InA [2] $end
$var wire 1 $5 InA [1] $end
$var wire 1 %5 InA [0] $end
$var wire 1 '# InB [15] $end
$var wire 1 (# InB [14] $end
$var wire 1 )# InB [13] $end
$var wire 1 *# InB [12] $end
$var wire 1 +# InB [11] $end
$var wire 1 ,# InB [10] $end
$var wire 1 -# InB [9] $end
$var wire 1 .# InB [8] $end
$var wire 1 /# InB [7] $end
$var wire 1 0# InB [6] $end
$var wire 1 1# InB [5] $end
$var wire 1 2# InB [4] $end
$var wire 1 3# InB [3] $end
$var wire 1 4# InB [2] $end
$var wire 1 5# InB [1] $end
$var wire 1 6# InB [0] $end
$var wire 1 C! S $end
$var wire 1 Q/ Out [15] $end
$var wire 1 R/ Out [14] $end
$var wire 1 S/ Out [13] $end
$var wire 1 T/ Out [12] $end
$var wire 1 U/ Out [11] $end
$var wire 1 V/ Out [10] $end
$var wire 1 W/ Out [9] $end
$var wire 1 X/ Out [8] $end
$var wire 1 Y/ Out [7] $end
$var wire 1 Z/ Out [6] $end
$var wire 1 [/ Out [5] $end
$var wire 1 \/ Out [4] $end
$var wire 1 ]/ Out [3] $end
$var wire 1 ^/ Out [2] $end
$var wire 1 _/ Out [1] $end
$var wire 1 `/ Out [0] $end

$scope module inst_0 $end
$var wire 1 %5 InA $end
$var wire 1 6# InB $end
$var wire 1 C! S $end
$var wire 1 `/ Out $end
$var wire 1 &5 notS $end
$var wire 1 '5 pdt1 $end
$var wire 1 (5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 &5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 6# in2 $end
$var wire 1 '5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 &5 in1 $end
$var wire 1 %5 in2 $end
$var wire 1 (5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 '5 in1 $end
$var wire 1 (5 in2 $end
$var wire 1 `/ out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 $5 InA $end
$var wire 1 5# InB $end
$var wire 1 C! S $end
$var wire 1 _/ Out $end
$var wire 1 )5 notS $end
$var wire 1 *5 pdt1 $end
$var wire 1 +5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 )5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 5# in2 $end
$var wire 1 *5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 )5 in1 $end
$var wire 1 $5 in2 $end
$var wire 1 +5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 *5 in1 $end
$var wire 1 +5 in2 $end
$var wire 1 _/ out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 #5 InA $end
$var wire 1 4# InB $end
$var wire 1 C! S $end
$var wire 1 ^/ Out $end
$var wire 1 ,5 notS $end
$var wire 1 -5 pdt1 $end
$var wire 1 .5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 ,5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 4# in2 $end
$var wire 1 -5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ,5 in1 $end
$var wire 1 #5 in2 $end
$var wire 1 .5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 -5 in1 $end
$var wire 1 .5 in2 $end
$var wire 1 ^/ out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 "5 InA $end
$var wire 1 3# InB $end
$var wire 1 C! S $end
$var wire 1 ]/ Out $end
$var wire 1 /5 notS $end
$var wire 1 05 pdt1 $end
$var wire 1 15 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 /5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 3# in2 $end
$var wire 1 05 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 /5 in1 $end
$var wire 1 "5 in2 $end
$var wire 1 15 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 05 in1 $end
$var wire 1 15 in2 $end
$var wire 1 ]/ out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 !5 InA $end
$var wire 1 2# InB $end
$var wire 1 C! S $end
$var wire 1 \/ Out $end
$var wire 1 25 notS $end
$var wire 1 35 pdt1 $end
$var wire 1 45 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 25 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 2# in2 $end
$var wire 1 35 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 25 in1 $end
$var wire 1 !5 in2 $end
$var wire 1 45 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 35 in1 $end
$var wire 1 45 in2 $end
$var wire 1 \/ out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 ~4 InA $end
$var wire 1 1# InB $end
$var wire 1 C! S $end
$var wire 1 [/ Out $end
$var wire 1 55 notS $end
$var wire 1 65 pdt1 $end
$var wire 1 75 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 55 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 1# in2 $end
$var wire 1 65 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 55 in1 $end
$var wire 1 ~4 in2 $end
$var wire 1 75 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 65 in1 $end
$var wire 1 75 in2 $end
$var wire 1 [/ out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 }4 InA $end
$var wire 1 0# InB $end
$var wire 1 C! S $end
$var wire 1 Z/ Out $end
$var wire 1 85 notS $end
$var wire 1 95 pdt1 $end
$var wire 1 :5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 85 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 0# in2 $end
$var wire 1 95 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 85 in1 $end
$var wire 1 }4 in2 $end
$var wire 1 :5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 95 in1 $end
$var wire 1 :5 in2 $end
$var wire 1 Z/ out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 |4 InA $end
$var wire 1 /# InB $end
$var wire 1 C! S $end
$var wire 1 Y/ Out $end
$var wire 1 ;5 notS $end
$var wire 1 <5 pdt1 $end
$var wire 1 =5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 ;5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 /# in2 $end
$var wire 1 <5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ;5 in1 $end
$var wire 1 |4 in2 $end
$var wire 1 =5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 <5 in1 $end
$var wire 1 =5 in2 $end
$var wire 1 Y/ out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 {4 InA $end
$var wire 1 .# InB $end
$var wire 1 C! S $end
$var wire 1 X/ Out $end
$var wire 1 >5 notS $end
$var wire 1 ?5 pdt1 $end
$var wire 1 @5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 >5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 .# in2 $end
$var wire 1 ?5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 >5 in1 $end
$var wire 1 {4 in2 $end
$var wire 1 @5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ?5 in1 $end
$var wire 1 @5 in2 $end
$var wire 1 X/ out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 z4 InA $end
$var wire 1 -# InB $end
$var wire 1 C! S $end
$var wire 1 W/ Out $end
$var wire 1 A5 notS $end
$var wire 1 B5 pdt1 $end
$var wire 1 C5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 A5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 -# in2 $end
$var wire 1 B5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 A5 in1 $end
$var wire 1 z4 in2 $end
$var wire 1 C5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 B5 in1 $end
$var wire 1 C5 in2 $end
$var wire 1 W/ out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 y4 InA $end
$var wire 1 ,# InB $end
$var wire 1 C! S $end
$var wire 1 V/ Out $end
$var wire 1 D5 notS $end
$var wire 1 E5 pdt1 $end
$var wire 1 F5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 D5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 ,# in2 $end
$var wire 1 E5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 D5 in1 $end
$var wire 1 y4 in2 $end
$var wire 1 F5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 E5 in1 $end
$var wire 1 F5 in2 $end
$var wire 1 V/ out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 x4 InA $end
$var wire 1 +# InB $end
$var wire 1 C! S $end
$var wire 1 U/ Out $end
$var wire 1 G5 notS $end
$var wire 1 H5 pdt1 $end
$var wire 1 I5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 G5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 +# in2 $end
$var wire 1 H5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 G5 in1 $end
$var wire 1 x4 in2 $end
$var wire 1 I5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 H5 in1 $end
$var wire 1 I5 in2 $end
$var wire 1 U/ out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 w4 InA $end
$var wire 1 *# InB $end
$var wire 1 C! S $end
$var wire 1 T/ Out $end
$var wire 1 J5 notS $end
$var wire 1 K5 pdt1 $end
$var wire 1 L5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 J5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 *# in2 $end
$var wire 1 K5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 J5 in1 $end
$var wire 1 w4 in2 $end
$var wire 1 L5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 K5 in1 $end
$var wire 1 L5 in2 $end
$var wire 1 T/ out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 v4 InA $end
$var wire 1 )# InB $end
$var wire 1 C! S $end
$var wire 1 S/ Out $end
$var wire 1 M5 notS $end
$var wire 1 N5 pdt1 $end
$var wire 1 O5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 M5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 )# in2 $end
$var wire 1 N5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 M5 in1 $end
$var wire 1 v4 in2 $end
$var wire 1 O5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 N5 in1 $end
$var wire 1 O5 in2 $end
$var wire 1 S/ out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 u4 InA $end
$var wire 1 (# InB $end
$var wire 1 C! S $end
$var wire 1 R/ Out $end
$var wire 1 P5 notS $end
$var wire 1 Q5 pdt1 $end
$var wire 1 R5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 P5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 (# in2 $end
$var wire 1 Q5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 P5 in1 $end
$var wire 1 u4 in2 $end
$var wire 1 R5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Q5 in1 $end
$var wire 1 R5 in2 $end
$var wire 1 R/ out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 t4 InA $end
$var wire 1 '# InB $end
$var wire 1 C! S $end
$var wire 1 Q/ Out $end
$var wire 1 S5 notS $end
$var wire 1 T5 pdt1 $end
$var wire 1 U5 pdt2 $end

$scope module not_inst $end
$var wire 1 C! in1 $end
$var wire 1 S5 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 C! in1 $end
$var wire 1 '# in2 $end
$var wire 1 T5 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 S5 in1 $end
$var wire 1 t4 in2 $end
$var wire 1 U5 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 T5 in1 $end
$var wire 1 U5 in2 $end
$var wire 1 Q/ out $end
$upscope $end
$upscope $end
$upscope $end

$scope module control_unit_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 d/ AeqB $end
$var wire 1 a/ AltB $end
$var wire 1 b/ AgtB $end
$var wire 1 8! Cout $end
$var wire 1 C! instruction [15] $end
$var wire 1 D! instruction [14] $end
$var wire 1 E! instruction [13] $end
$var wire 1 F! instruction [12] $end
$var wire 1 G! instruction [11] $end
$var wire 1 H! instruction [10] $end
$var wire 1 I! instruction [9] $end
$var wire 1 J! instruction [8] $end
$var wire 1 K! instruction [7] $end
$var wire 1 L! instruction [6] $end
$var wire 1 M! instruction [5] $end
$var wire 1 N! instruction [4] $end
$var wire 1 O! instruction [3] $end
$var wire 1 P! instruction [2] $end
$var wire 1 Q! instruction [1] $end
$var wire 1 R! instruction [0] $end
$var wire 1 ?! ALU_control_op [3] $end
$var wire 1 @! ALU_control_op [2] $end
$var wire 1 A! ALU_control_op [1] $end
$var wire 1 B! ALU_control_op [0] $end
$var reg 1 V5 comp_value_out $end
$var wire 1 #! regdst [1] $end
$var wire 1 $! regdst [0] $end
$var wire 1 9! branch_and $end
$var wire 1 &! jump [1] $end
$var wire 1 '! jump [0] $end
$var wire 1 (! memread $end
$var wire 1 )! memtoreg $end
$var wire 1 *! ALUop [2] $end
$var wire 1 +! ALUop [1] $end
$var wire 1 ,! ALUop [0] $end
$var wire 1 -! memwrite $end
$var wire 1 .! ALUsrc [1] $end
$var wire 1 /! ALUsrc [0] $end
$var wire 1 0! regwrite $end
$var wire 1 1! regload [1] $end
$var wire 1 2! regload [0] $end
$var wire 1 3! trunc [1] $end
$var wire 1 4! trunc [0] $end
$var wire 1 5! hlt $end
$var wire 1 7! rti $end
$var wire 1 6! siic $end
$var reg 2 W5 regdst_i [1:0] $end
$var reg 1 X5 branch_i $end
$var reg 2 Y5 jump_i [1:0] $end
$var reg 1 Z5 memread_i $end
$var reg 1 [5 memtoreg_i $end
$var reg 3 \5 ALUop_i [2:0] $end
$var reg 1 ]5 memwrite_i $end
$var reg 2 ^5 ALUsrc_i [1:0] $end
$var reg 1 _5 regwrite_i $end
$var reg 2 `5 regload_i [1:0] $end
$var reg 2 a5 trunc_i [1:0] $end
$var reg 1 b5 hlt_i $end
$var reg 1 c5 rti_i $end
$var reg 1 d5 siic_i $end
$var reg 1 e5 branch_alu_out $end
$var wire 1 f5 branch $end
$var reg 4 g5 ALU_control [3:0] $end
$var wire 1 h5 ALUcontrol_in [6] $end
$var wire 1 i5 ALUcontrol_in [5] $end
$var wire 1 j5 ALUcontrol_in [4] $end
$var wire 1 k5 ALUcontrol_in [3] $end
$var wire 1 l5 ALUcontrol_in [2] $end
$var wire 1 m5 ALUcontrol_in [1] $end
$var wire 1 n5 ALUcontrol_in [0] $end
$upscope $end
$upscope $end

$scope module exec_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 5" PC_adder_out [15] $end
$var wire 1 6" PC_adder_out [14] $end
$var wire 1 7" PC_adder_out [13] $end
$var wire 1 8" PC_adder_out [12] $end
$var wire 1 9" PC_adder_out [11] $end
$var wire 1 :" PC_adder_out [10] $end
$var wire 1 ;" PC_adder_out [9] $end
$var wire 1 <" PC_adder_out [8] $end
$var wire 1 =" PC_adder_out [7] $end
$var wire 1 >" PC_adder_out [6] $end
$var wire 1 ?" PC_adder_out [5] $end
$var wire 1 @" PC_adder_out [4] $end
$var wire 1 A" PC_adder_out [3] $end
$var wire 1 B" PC_adder_out [2] $end
$var wire 1 C" PC_adder_out [1] $end
$var wire 1 D" PC_adder_out [0] $end
$var wire 1 C! instruction [15] $end
$var wire 1 D! instruction [14] $end
$var wire 1 E! instruction [13] $end
$var wire 1 F! instruction [12] $end
$var wire 1 G! instruction [11] $end
$var wire 1 H! instruction [10] $end
$var wire 1 I! instruction [9] $end
$var wire 1 J! instruction [8] $end
$var wire 1 K! instruction [7] $end
$var wire 1 L! instruction [6] $end
$var wire 1 M! instruction [5] $end
$var wire 1 N! instruction [4] $end
$var wire 1 O! instruction [3] $end
$var wire 1 P! instruction [2] $end
$var wire 1 Q! instruction [1] $end
$var wire 1 R! instruction [0] $end
$var wire 1 S! se_instruction_7_0 [15] $end
$var wire 1 T! se_instruction_7_0 [14] $end
$var wire 1 U! se_instruction_7_0 [13] $end
$var wire 1 V! se_instruction_7_0 [12] $end
$var wire 1 W! se_instruction_7_0 [11] $end
$var wire 1 X! se_instruction_7_0 [10] $end
$var wire 1 Y! se_instruction_7_0 [9] $end
$var wire 1 Z! se_instruction_7_0 [8] $end
$var wire 1 [! se_instruction_7_0 [7] $end
$var wire 1 \! se_instruction_7_0 [6] $end
$var wire 1 ]! se_instruction_7_0 [5] $end
$var wire 1 ^! se_instruction_7_0 [4] $end
$var wire 1 _! se_instruction_7_0 [3] $end
$var wire 1 `! se_instruction_7_0 [2] $end
$var wire 1 a! se_instruction_7_0 [1] $end
$var wire 1 b! se_instruction_7_0 [0] $end
$var wire 1 c! ze_instruction_7_0 [15] $end
$var wire 1 d! ze_instruction_7_0 [14] $end
$var wire 1 e! ze_instruction_7_0 [13] $end
$var wire 1 f! ze_instruction_7_0 [12] $end
$var wire 1 g! ze_instruction_7_0 [11] $end
$var wire 1 h! ze_instruction_7_0 [10] $end
$var wire 1 i! ze_instruction_7_0 [9] $end
$var wire 1 j! ze_instruction_7_0 [8] $end
$var wire 1 k! ze_instruction_7_0 [7] $end
$var wire 1 l! ze_instruction_7_0 [6] $end
$var wire 1 m! ze_instruction_7_0 [5] $end
$var wire 1 n! ze_instruction_7_0 [4] $end
$var wire 1 o! ze_instruction_7_0 [3] $end
$var wire 1 p! ze_instruction_7_0 [2] $end
$var wire 1 q! ze_instruction_7_0 [1] $end
$var wire 1 r! ze_instruction_7_0 [0] $end
$var wire 1 s! se_instruction_4_0 [15] $end
$var wire 1 t! se_instruction_4_0 [14] $end
$var wire 1 u! se_instruction_4_0 [13] $end
$var wire 1 v! se_instruction_4_0 [12] $end
$var wire 1 w! se_instruction_4_0 [11] $end
$var wire 1 x! se_instruction_4_0 [10] $end
$var wire 1 y! se_instruction_4_0 [9] $end
$var wire 1 z! se_instruction_4_0 [8] $end
$var wire 1 {! se_instruction_4_0 [7] $end
$var wire 1 |! se_instruction_4_0 [6] $end
$var wire 1 }! se_instruction_4_0 [5] $end
$var wire 1 ~! se_instruction_4_0 [4] $end
$var wire 1 !" se_instruction_4_0 [3] $end
$var wire 1 "" se_instruction_4_0 [2] $end
$var wire 1 #" se_instruction_4_0 [1] $end
$var wire 1 $" se_instruction_4_0 [0] $end
$var wire 1 u" read1Data [15] $end
$var wire 1 v" read1Data [14] $end
$var wire 1 w" read1Data [13] $end
$var wire 1 x" read1Data [12] $end
$var wire 1 y" read1Data [11] $end
$var wire 1 z" read1Data [10] $end
$var wire 1 {" read1Data [9] $end
$var wire 1 |" read1Data [8] $end
$var wire 1 }" read1Data [7] $end
$var wire 1 ~" read1Data [6] $end
$var wire 1 !# read1Data [5] $end
$var wire 1 "# read1Data [4] $end
$var wire 1 ## read1Data [3] $end
$var wire 1 $# read1Data [2] $end
$var wire 1 %# read1Data [1] $end
$var wire 1 &# read1Data [0] $end
$var wire 1 '# read2Data [15] $end
$var wire 1 (# read2Data [14] $end
$var wire 1 )# read2Data [13] $end
$var wire 1 *# read2Data [12] $end
$var wire 1 +# read2Data [11] $end
$var wire 1 ,# read2Data [10] $end
$var wire 1 -# read2Data [9] $end
$var wire 1 .# read2Data [8] $end
$var wire 1 /# read2Data [7] $end
$var wire 1 0# read2Data [6] $end
$var wire 1 1# read2Data [5] $end
$var wire 1 2# read2Data [4] $end
$var wire 1 3# read2Data [3] $end
$var wire 1 4# read2Data [2] $end
$var wire 1 5# read2Data [1] $end
$var wire 1 6# read2Data [0] $end
$var wire 1 ?! ALU_control_op [3] $end
$var wire 1 @! ALU_control_op [2] $end
$var wire 1 A! ALU_control_op [1] $end
$var wire 1 B! ALU_control_op [0] $end
$var wire 1 .! ALUsrc [1] $end
$var wire 1 /! ALUsrc [0] $end
$var wire 1 *! ALUop [2] $end
$var wire 1 +! ALUop [1] $end
$var wire 1 ,! ALUop [0] $end
$var wire 1 3! trunc [1] $end
$var wire 1 4! trunc [0] $end
$var wire 1 >! AeqB $end
$var wire 1 <! AltB $end
$var wire 1 =! AgtB $end
$var wire 1 8! Cout $end
$var wire 1 o5 err $end
$var wire 1 E" adder_ex_out [15] $end
$var wire 1 F" adder_ex_out [14] $end
$var wire 1 G" adder_ex_out [13] $end
$var wire 1 H" adder_ex_out [12] $end
$var wire 1 I" adder_ex_out [11] $end
$var wire 1 J" adder_ex_out [10] $end
$var wire 1 K" adder_ex_out [9] $end
$var wire 1 L" adder_ex_out [8] $end
$var wire 1 M" adder_ex_out [7] $end
$var wire 1 N" adder_ex_out [6] $end
$var wire 1 O" adder_ex_out [5] $end
$var wire 1 P" adder_ex_out [4] $end
$var wire 1 Q" adder_ex_out [3] $end
$var wire 1 R" adder_ex_out [2] $end
$var wire 1 S" adder_ex_out [1] $end
$var wire 1 T" adder_ex_out [0] $end
$var wire 1 :! zero_out $end
$var wire 1 %" ALU_out [15] $end
$var wire 1 &" ALU_out [14] $end
$var wire 1 '" ALU_out [13] $end
$var wire 1 (" ALU_out [12] $end
$var wire 1 )" ALU_out [11] $end
$var wire 1 *" ALU_out [10] $end
$var wire 1 +" ALU_out [9] $end
$var wire 1 ," ALU_out [8] $end
$var wire 1 -" ALU_out [7] $end
$var wire 1 ." ALU_out [6] $end
$var wire 1 /" ALU_out [5] $end
$var wire 1 0" ALU_out [4] $end
$var wire 1 1" ALU_out [3] $end
$var wire 1 2" ALU_out [2] $end
$var wire 1 3" ALU_out [1] $end
$var wire 1 4" ALU_out [0] $end
$var reg 1 p5 branch_alu_out $end
$var wire 1 q5 invA $end
$var wire 1 r5 AltB_i $end
$var wire 1 s5 AeqB_i $end
$var wire 1 t5 mux8_out [15] $end
$var wire 1 u5 mux8_out [14] $end
$var wire 1 v5 mux8_out [13] $end
$var wire 1 w5 mux8_out [12] $end
$var wire 1 x5 mux8_out [11] $end
$var wire 1 y5 mux8_out [10] $end
$var wire 1 z5 mux8_out [9] $end
$var wire 1 {5 mux8_out [8] $end
$var wire 1 |5 mux8_out [7] $end
$var wire 1 }5 mux8_out [6] $end
$var wire 1 ~5 mux8_out [5] $end
$var wire 1 !6 mux8_out [4] $end
$var wire 1 "6 mux8_out [3] $end
$var wire 1 #6 mux8_out [2] $end
$var wire 1 $6 mux8_out [1] $end
$var wire 1 %6 mux8_out [0] $end
$var wire 1 &6 mux9_out [15] $end
$var wire 1 '6 mux9_out [14] $end
$var wire 1 (6 mux9_out [13] $end
$var wire 1 )6 mux9_out [12] $end
$var wire 1 *6 mux9_out [11] $end
$var wire 1 +6 mux9_out [10] $end
$var wire 1 ,6 mux9_out [9] $end
$var wire 1 -6 mux9_out [8] $end
$var wire 1 .6 mux9_out [7] $end
$var wire 1 /6 mux9_out [6] $end
$var wire 1 06 mux9_out [5] $end
$var wire 1 16 mux9_out [4] $end
$var wire 1 26 mux9_out [3] $end
$var wire 1 36 mux9_out [2] $end
$var wire 1 46 mux9_out [1] $end
$var wire 1 56 mux9_out [0] $end
$var wire 1 66 mux_select $end
$var wire 1 76 mux1_in0 [15] $end
$var wire 1 86 mux1_in0 [14] $end
$var wire 1 96 mux1_in0 [13] $end
$var wire 1 :6 mux1_in0 [12] $end
$var wire 1 ;6 mux1_in0 [11] $end
$var wire 1 <6 mux1_in0 [10] $end
$var wire 1 =6 mux1_in0 [9] $end
$var wire 1 >6 mux1_in0 [8] $end
$var wire 1 ?6 mux1_in0 [7] $end
$var wire 1 @6 mux1_in0 [6] $end
$var wire 1 A6 mux1_in0 [5] $end
$var wire 1 B6 mux1_in0 [4] $end
$var wire 1 C6 mux1_in0 [3] $end
$var wire 1 D6 mux1_in0 [2] $end
$var wire 1 E6 mux1_in0 [1] $end
$var wire 1 F6 mux1_in0 [0] $end
$var wire 1 G6 mux1_in1 [15] $end
$var wire 1 H6 mux1_in1 [14] $end
$var wire 1 I6 mux1_in1 [13] $end
$var wire 1 J6 mux1_in1 [12] $end
$var wire 1 K6 mux1_in1 [11] $end
$var wire 1 L6 mux1_in1 [10] $end
$var wire 1 M6 mux1_in1 [9] $end
$var wire 1 N6 mux1_in1 [8] $end
$var wire 1 O6 mux1_in1 [7] $end
$var wire 1 P6 mux1_in1 [6] $end
$var wire 1 Q6 mux1_in1 [5] $end
$var wire 1 R6 mux1_in1 [4] $end
$var wire 1 S6 mux1_in1 [3] $end
$var wire 1 T6 mux1_in1 [2] $end
$var wire 1 U6 mux1_in1 [1] $end
$var wire 1 V6 mux1_in1 [0] $end
$var wire 1 W6 ALU_in2 [15] $end
$var wire 1 X6 ALU_in2 [14] $end
$var wire 1 Y6 ALU_in2 [13] $end
$var wire 1 Z6 ALU_in2 [12] $end
$var wire 1 [6 ALU_in2 [11] $end
$var wire 1 \6 ALU_in2 [10] $end
$var wire 1 ]6 ALU_in2 [9] $end
$var wire 1 ^6 ALU_in2 [8] $end
$var wire 1 _6 ALU_in2 [7] $end
$var wire 1 `6 ALU_in2 [6] $end
$var wire 1 a6 ALU_in2 [5] $end
$var wire 1 b6 ALU_in2 [4] $end
$var wire 1 c6 ALU_in2 [3] $end
$var wire 1 d6 ALU_in2 [2] $end
$var wire 1 e6 ALU_in2 [1] $end
$var wire 1 f6 ALU_in2 [0] $end
$var wire 1 g6 ALU_out_i [15] $end
$var wire 1 h6 ALU_out_i [14] $end
$var wire 1 i6 ALU_out_i [13] $end
$var wire 1 j6 ALU_out_i [12] $end
$var wire 1 k6 ALU_out_i [11] $end
$var wire 1 l6 ALU_out_i [10] $end
$var wire 1 m6 ALU_out_i [9] $end
$var wire 1 n6 ALU_out_i [8] $end
$var wire 1 o6 ALU_out_i [7] $end
$var wire 1 p6 ALU_out_i [6] $end
$var wire 1 q6 ALU_out_i [5] $end
$var wire 1 r6 ALU_out_i [4] $end
$var wire 1 s6 ALU_out_i [3] $end
$var wire 1 t6 ALU_out_i [2] $end
$var wire 1 u6 ALU_out_i [1] $end
$var wire 1 v6 ALU_out_i [0] $end
$var wire 1 w6 Out_barrel_0 [15] $end
$var wire 1 x6 Out_barrel_0 [14] $end
$var wire 1 y6 Out_barrel_0 [13] $end
$var wire 1 z6 Out_barrel_0 [12] $end
$var wire 1 {6 Out_barrel_0 [11] $end
$var wire 1 |6 Out_barrel_0 [10] $end
$var wire 1 }6 Out_barrel_0 [9] $end
$var wire 1 ~6 Out_barrel_0 [8] $end
$var wire 1 !7 Out_barrel_0 [7] $end
$var wire 1 "7 Out_barrel_0 [6] $end
$var wire 1 #7 Out_barrel_0 [5] $end
$var wire 1 $7 Out_barrel_0 [4] $end
$var wire 1 %7 Out_barrel_0 [3] $end
$var wire 1 &7 Out_barrel_0 [2] $end
$var wire 1 '7 Out_barrel_0 [1] $end
$var wire 1 (7 Out_barrel_0 [0] $end
$var wire 1 )7 Out_barrel_1 [15] $end
$var wire 1 *7 Out_barrel_1 [14] $end
$var wire 1 +7 Out_barrel_1 [13] $end
$var wire 1 ,7 Out_barrel_1 [12] $end
$var wire 1 -7 Out_barrel_1 [11] $end
$var wire 1 .7 Out_barrel_1 [10] $end
$var wire 1 /7 Out_barrel_1 [9] $end
$var wire 1 07 Out_barrel_1 [8] $end
$var wire 1 17 Out_barrel_1 [7] $end
$var wire 1 27 Out_barrel_1 [6] $end
$var wire 1 37 Out_barrel_1 [5] $end
$var wire 1 47 Out_barrel_1 [4] $end
$var wire 1 57 Out_barrel_1 [3] $end
$var wire 1 67 Out_barrel_1 [2] $end
$var wire 1 77 Out_barrel_1 [1] $end
$var wire 1 87 Out_barrel_1 [0] $end
$var reg 1 97 comp_value_out $end

$scope module mux9 $end
$var wire 1 :7 InA [15] $end
$var wire 1 ;7 InA [14] $end
$var wire 1 <7 InA [13] $end
$var wire 1 =7 InA [12] $end
$var wire 1 >7 InA [11] $end
$var wire 1 ?7 InA [10] $end
$var wire 1 @7 InA [9] $end
$var wire 1 A7 InA [8] $end
$var wire 1 B7 InA [7] $end
$var wire 1 C7 InA [6] $end
$var wire 1 D7 InA [5] $end
$var wire 1 E7 InA [4] $end
$var wire 1 F7 InA [3] $end
$var wire 1 G7 InA [2] $end
$var wire 1 H7 InA [1] $end
$var wire 1 I7 InA [0] $end
$var wire 1 76 InB [15] $end
$var wire 1 86 InB [14] $end
$var wire 1 96 InB [13] $end
$var wire 1 :6 InB [12] $end
$var wire 1 ;6 InB [11] $end
$var wire 1 <6 InB [10] $end
$var wire 1 =6 InB [9] $end
$var wire 1 >6 InB [8] $end
$var wire 1 ?6 InB [7] $end
$var wire 1 @6 InB [6] $end
$var wire 1 A6 InB [5] $end
$var wire 1 B6 InB [4] $end
$var wire 1 C6 InB [3] $end
$var wire 1 D6 InB [2] $end
$var wire 1 E6 InB [1] $end
$var wire 1 F6 InB [0] $end
$var wire 1 J7 S $end
$var wire 1 &6 Out [15] $end
$var wire 1 '6 Out [14] $end
$var wire 1 (6 Out [13] $end
$var wire 1 )6 Out [12] $end
$var wire 1 *6 Out [11] $end
$var wire 1 +6 Out [10] $end
$var wire 1 ,6 Out [9] $end
$var wire 1 -6 Out [8] $end
$var wire 1 .6 Out [7] $end
$var wire 1 /6 Out [6] $end
$var wire 1 06 Out [5] $end
$var wire 1 16 Out [4] $end
$var wire 1 26 Out [3] $end
$var wire 1 36 Out [2] $end
$var wire 1 46 Out [1] $end
$var wire 1 56 Out [0] $end

$scope module inst_0 $end
$var wire 1 I7 InA $end
$var wire 1 F6 InB $end
$var wire 1 J7 S $end
$var wire 1 56 Out $end
$var wire 1 K7 notS $end
$var wire 1 L7 pdt1 $end
$var wire 1 M7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 K7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 F6 in2 $end
$var wire 1 L7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 K7 in1 $end
$var wire 1 I7 in2 $end
$var wire 1 M7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 L7 in1 $end
$var wire 1 M7 in2 $end
$var wire 1 56 out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 H7 InA $end
$var wire 1 E6 InB $end
$var wire 1 J7 S $end
$var wire 1 46 Out $end
$var wire 1 N7 notS $end
$var wire 1 O7 pdt1 $end
$var wire 1 P7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 N7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 E6 in2 $end
$var wire 1 O7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 N7 in1 $end
$var wire 1 H7 in2 $end
$var wire 1 P7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 O7 in1 $end
$var wire 1 P7 in2 $end
$var wire 1 46 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 G7 InA $end
$var wire 1 D6 InB $end
$var wire 1 J7 S $end
$var wire 1 36 Out $end
$var wire 1 Q7 notS $end
$var wire 1 R7 pdt1 $end
$var wire 1 S7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 Q7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 D6 in2 $end
$var wire 1 R7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 Q7 in1 $end
$var wire 1 G7 in2 $end
$var wire 1 S7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 R7 in1 $end
$var wire 1 S7 in2 $end
$var wire 1 36 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 F7 InA $end
$var wire 1 C6 InB $end
$var wire 1 J7 S $end
$var wire 1 26 Out $end
$var wire 1 T7 notS $end
$var wire 1 U7 pdt1 $end
$var wire 1 V7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 T7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 C6 in2 $end
$var wire 1 U7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 T7 in1 $end
$var wire 1 F7 in2 $end
$var wire 1 V7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 U7 in1 $end
$var wire 1 V7 in2 $end
$var wire 1 26 out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 E7 InA $end
$var wire 1 B6 InB $end
$var wire 1 J7 S $end
$var wire 1 16 Out $end
$var wire 1 W7 notS $end
$var wire 1 X7 pdt1 $end
$var wire 1 Y7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 W7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 B6 in2 $end
$var wire 1 X7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 W7 in1 $end
$var wire 1 E7 in2 $end
$var wire 1 Y7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 X7 in1 $end
$var wire 1 Y7 in2 $end
$var wire 1 16 out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 D7 InA $end
$var wire 1 A6 InB $end
$var wire 1 J7 S $end
$var wire 1 06 Out $end
$var wire 1 Z7 notS $end
$var wire 1 [7 pdt1 $end
$var wire 1 \7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 Z7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 A6 in2 $end
$var wire 1 [7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 Z7 in1 $end
$var wire 1 D7 in2 $end
$var wire 1 \7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 [7 in1 $end
$var wire 1 \7 in2 $end
$var wire 1 06 out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 C7 InA $end
$var wire 1 @6 InB $end
$var wire 1 J7 S $end
$var wire 1 /6 Out $end
$var wire 1 ]7 notS $end
$var wire 1 ^7 pdt1 $end
$var wire 1 _7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 ]7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 @6 in2 $end
$var wire 1 ^7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ]7 in1 $end
$var wire 1 C7 in2 $end
$var wire 1 _7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ^7 in1 $end
$var wire 1 _7 in2 $end
$var wire 1 /6 out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 B7 InA $end
$var wire 1 ?6 InB $end
$var wire 1 J7 S $end
$var wire 1 .6 Out $end
$var wire 1 `7 notS $end
$var wire 1 a7 pdt1 $end
$var wire 1 b7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 `7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 ?6 in2 $end
$var wire 1 a7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 `7 in1 $end
$var wire 1 B7 in2 $end
$var wire 1 b7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 a7 in1 $end
$var wire 1 b7 in2 $end
$var wire 1 .6 out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 A7 InA $end
$var wire 1 >6 InB $end
$var wire 1 J7 S $end
$var wire 1 -6 Out $end
$var wire 1 c7 notS $end
$var wire 1 d7 pdt1 $end
$var wire 1 e7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 c7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 >6 in2 $end
$var wire 1 d7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 c7 in1 $end
$var wire 1 A7 in2 $end
$var wire 1 e7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 d7 in1 $end
$var wire 1 e7 in2 $end
$var wire 1 -6 out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 @7 InA $end
$var wire 1 =6 InB $end
$var wire 1 J7 S $end
$var wire 1 ,6 Out $end
$var wire 1 f7 notS $end
$var wire 1 g7 pdt1 $end
$var wire 1 h7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 f7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 =6 in2 $end
$var wire 1 g7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 f7 in1 $end
$var wire 1 @7 in2 $end
$var wire 1 h7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 g7 in1 $end
$var wire 1 h7 in2 $end
$var wire 1 ,6 out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 ?7 InA $end
$var wire 1 <6 InB $end
$var wire 1 J7 S $end
$var wire 1 +6 Out $end
$var wire 1 i7 notS $end
$var wire 1 j7 pdt1 $end
$var wire 1 k7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 i7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 <6 in2 $end
$var wire 1 j7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 i7 in1 $end
$var wire 1 ?7 in2 $end
$var wire 1 k7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 j7 in1 $end
$var wire 1 k7 in2 $end
$var wire 1 +6 out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 >7 InA $end
$var wire 1 ;6 InB $end
$var wire 1 J7 S $end
$var wire 1 *6 Out $end
$var wire 1 l7 notS $end
$var wire 1 m7 pdt1 $end
$var wire 1 n7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 l7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 ;6 in2 $end
$var wire 1 m7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 l7 in1 $end
$var wire 1 >7 in2 $end
$var wire 1 n7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 m7 in1 $end
$var wire 1 n7 in2 $end
$var wire 1 *6 out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 =7 InA $end
$var wire 1 :6 InB $end
$var wire 1 J7 S $end
$var wire 1 )6 Out $end
$var wire 1 o7 notS $end
$var wire 1 p7 pdt1 $end
$var wire 1 q7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 o7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 :6 in2 $end
$var wire 1 p7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 o7 in1 $end
$var wire 1 =7 in2 $end
$var wire 1 q7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 p7 in1 $end
$var wire 1 q7 in2 $end
$var wire 1 )6 out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 <7 InA $end
$var wire 1 96 InB $end
$var wire 1 J7 S $end
$var wire 1 (6 Out $end
$var wire 1 r7 notS $end
$var wire 1 s7 pdt1 $end
$var wire 1 t7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 r7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 96 in2 $end
$var wire 1 s7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 r7 in1 $end
$var wire 1 <7 in2 $end
$var wire 1 t7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 s7 in1 $end
$var wire 1 t7 in2 $end
$var wire 1 (6 out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 ;7 InA $end
$var wire 1 86 InB $end
$var wire 1 J7 S $end
$var wire 1 '6 Out $end
$var wire 1 u7 notS $end
$var wire 1 v7 pdt1 $end
$var wire 1 w7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 u7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 86 in2 $end
$var wire 1 v7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 u7 in1 $end
$var wire 1 ;7 in2 $end
$var wire 1 w7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 v7 in1 $end
$var wire 1 w7 in2 $end
$var wire 1 '6 out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 :7 InA $end
$var wire 1 76 InB $end
$var wire 1 J7 S $end
$var wire 1 &6 Out $end
$var wire 1 x7 notS $end
$var wire 1 y7 pdt1 $end
$var wire 1 z7 pdt2 $end

$scope module not_inst $end
$var wire 1 J7 in1 $end
$var wire 1 x7 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 J7 in1 $end
$var wire 1 76 in2 $end
$var wire 1 y7 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 x7 in1 $end
$var wire 1 :7 in2 $end
$var wire 1 z7 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 y7 in1 $end
$var wire 1 z7 in2 $end
$var wire 1 &6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux1 $end
$var wire 1 &6 InA [15] $end
$var wire 1 '6 InA [14] $end
$var wire 1 (6 InA [13] $end
$var wire 1 )6 InA [12] $end
$var wire 1 *6 InA [11] $end
$var wire 1 +6 InA [10] $end
$var wire 1 ,6 InA [9] $end
$var wire 1 -6 InA [8] $end
$var wire 1 .6 InA [7] $end
$var wire 1 /6 InA [6] $end
$var wire 1 06 InA [5] $end
$var wire 1 16 InA [4] $end
$var wire 1 26 InA [3] $end
$var wire 1 36 InA [2] $end
$var wire 1 46 InA [1] $end
$var wire 1 56 InA [0] $end
$var wire 1 G6 InB [15] $end
$var wire 1 H6 InB [14] $end
$var wire 1 I6 InB [13] $end
$var wire 1 J6 InB [12] $end
$var wire 1 K6 InB [11] $end
$var wire 1 L6 InB [10] $end
$var wire 1 M6 InB [9] $end
$var wire 1 N6 InB [8] $end
$var wire 1 O6 InB [7] $end
$var wire 1 P6 InB [6] $end
$var wire 1 Q6 InB [5] $end
$var wire 1 R6 InB [4] $end
$var wire 1 S6 InB [3] $end
$var wire 1 T6 InB [2] $end
$var wire 1 U6 InB [1] $end
$var wire 1 V6 InB [0] $end
$var wire 1 {7 InC [15] $end
$var wire 1 |7 InC [14] $end
$var wire 1 }7 InC [13] $end
$var wire 1 ~7 InC [12] $end
$var wire 1 !8 InC [11] $end
$var wire 1 "8 InC [10] $end
$var wire 1 #8 InC [9] $end
$var wire 1 $8 InC [8] $end
$var wire 1 K! InC [7] $end
$var wire 1 L! InC [6] $end
$var wire 1 M! InC [5] $end
$var wire 1 N! InC [4] $end
$var wire 1 O! InC [3] $end
$var wire 1 P! InC [2] $end
$var wire 1 Q! InC [1] $end
$var wire 1 R! InC [0] $end
$var wire 1 t5 InD [15] $end
$var wire 1 u5 InD [14] $end
$var wire 1 v5 InD [13] $end
$var wire 1 w5 InD [12] $end
$var wire 1 x5 InD [11] $end
$var wire 1 y5 InD [10] $end
$var wire 1 z5 InD [9] $end
$var wire 1 {5 InD [8] $end
$var wire 1 |5 InD [7] $end
$var wire 1 }5 InD [6] $end
$var wire 1 ~5 InD [5] $end
$var wire 1 !6 InD [4] $end
$var wire 1 "6 InD [3] $end
$var wire 1 #6 InD [2] $end
$var wire 1 $6 InD [1] $end
$var wire 1 %6 InD [0] $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 W6 Out [15] $end
$var wire 1 X6 Out [14] $end
$var wire 1 Y6 Out [13] $end
$var wire 1 Z6 Out [12] $end
$var wire 1 [6 Out [11] $end
$var wire 1 \6 Out [10] $end
$var wire 1 ]6 Out [9] $end
$var wire 1 ^6 Out [8] $end
$var wire 1 _6 Out [7] $end
$var wire 1 `6 Out [6] $end
$var wire 1 a6 Out [5] $end
$var wire 1 b6 Out [4] $end
$var wire 1 c6 Out [3] $end
$var wire 1 d6 Out [2] $end
$var wire 1 e6 Out [1] $end
$var wire 1 f6 Out [0] $end

$scope module inst_0 $end
$var wire 1 56 InA $end
$var wire 1 V6 InB $end
$var wire 1 R! InC $end
$var wire 1 %6 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 f6 Out $end
$var wire 1 %8 Out_1 $end
$var wire 1 &8 Out_2 $end

$scope module inst_1 $end
$var wire 1 56 InA $end
$var wire 1 V6 InB $end
$var wire 1 /! S $end
$var wire 1 %8 Out $end
$var wire 1 '8 notS $end
$var wire 1 (8 pdt1 $end
$var wire 1 )8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 '8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 V6 in2 $end
$var wire 1 (8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 '8 in1 $end
$var wire 1 56 in2 $end
$var wire 1 )8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 (8 in1 $end
$var wire 1 )8 in2 $end
$var wire 1 %8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 R! InA $end
$var wire 1 %6 InB $end
$var wire 1 /! S $end
$var wire 1 &8 Out $end
$var wire 1 *8 notS $end
$var wire 1 +8 pdt1 $end
$var wire 1 ,8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 *8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 %6 in2 $end
$var wire 1 +8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 *8 in1 $end
$var wire 1 R! in2 $end
$var wire 1 ,8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 +8 in1 $end
$var wire 1 ,8 in2 $end
$var wire 1 &8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 %8 InA $end
$var wire 1 &8 InB $end
$var wire 1 .! S $end
$var wire 1 f6 Out $end
$var wire 1 -8 notS $end
$var wire 1 .8 pdt1 $end
$var wire 1 /8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 -8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 &8 in2 $end
$var wire 1 .8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 -8 in1 $end
$var wire 1 %8 in2 $end
$var wire 1 /8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 .8 in1 $end
$var wire 1 /8 in2 $end
$var wire 1 f6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 46 InA $end
$var wire 1 U6 InB $end
$var wire 1 Q! InC $end
$var wire 1 $6 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 e6 Out $end
$var wire 1 08 Out_1 $end
$var wire 1 18 Out_2 $end

$scope module inst_1 $end
$var wire 1 46 InA $end
$var wire 1 U6 InB $end
$var wire 1 /! S $end
$var wire 1 08 Out $end
$var wire 1 28 notS $end
$var wire 1 38 pdt1 $end
$var wire 1 48 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 28 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 U6 in2 $end
$var wire 1 38 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 28 in1 $end
$var wire 1 46 in2 $end
$var wire 1 48 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 38 in1 $end
$var wire 1 48 in2 $end
$var wire 1 08 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 Q! InA $end
$var wire 1 $6 InB $end
$var wire 1 /! S $end
$var wire 1 18 Out $end
$var wire 1 58 notS $end
$var wire 1 68 pdt1 $end
$var wire 1 78 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 58 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 $6 in2 $end
$var wire 1 68 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 58 in1 $end
$var wire 1 Q! in2 $end
$var wire 1 78 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 68 in1 $end
$var wire 1 78 in2 $end
$var wire 1 18 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 08 InA $end
$var wire 1 18 InB $end
$var wire 1 .! S $end
$var wire 1 e6 Out $end
$var wire 1 88 notS $end
$var wire 1 98 pdt1 $end
$var wire 1 :8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 88 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 18 in2 $end
$var wire 1 98 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 88 in1 $end
$var wire 1 08 in2 $end
$var wire 1 :8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 98 in1 $end
$var wire 1 :8 in2 $end
$var wire 1 e6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 36 InA $end
$var wire 1 T6 InB $end
$var wire 1 P! InC $end
$var wire 1 #6 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 d6 Out $end
$var wire 1 ;8 Out_1 $end
$var wire 1 <8 Out_2 $end

$scope module inst_1 $end
$var wire 1 36 InA $end
$var wire 1 T6 InB $end
$var wire 1 /! S $end
$var wire 1 ;8 Out $end
$var wire 1 =8 notS $end
$var wire 1 >8 pdt1 $end
$var wire 1 ?8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 =8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 T6 in2 $end
$var wire 1 >8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 =8 in1 $end
$var wire 1 36 in2 $end
$var wire 1 ?8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 >8 in1 $end
$var wire 1 ?8 in2 $end
$var wire 1 ;8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 P! InA $end
$var wire 1 #6 InB $end
$var wire 1 /! S $end
$var wire 1 <8 Out $end
$var wire 1 @8 notS $end
$var wire 1 A8 pdt1 $end
$var wire 1 B8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 @8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 #6 in2 $end
$var wire 1 A8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 @8 in1 $end
$var wire 1 P! in2 $end
$var wire 1 B8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 A8 in1 $end
$var wire 1 B8 in2 $end
$var wire 1 <8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 ;8 InA $end
$var wire 1 <8 InB $end
$var wire 1 .! S $end
$var wire 1 d6 Out $end
$var wire 1 C8 notS $end
$var wire 1 D8 pdt1 $end
$var wire 1 E8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 C8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 <8 in2 $end
$var wire 1 D8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 C8 in1 $end
$var wire 1 ;8 in2 $end
$var wire 1 E8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 D8 in1 $end
$var wire 1 E8 in2 $end
$var wire 1 d6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 26 InA $end
$var wire 1 S6 InB $end
$var wire 1 O! InC $end
$var wire 1 "6 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 c6 Out $end
$var wire 1 F8 Out_1 $end
$var wire 1 G8 Out_2 $end

$scope module inst_1 $end
$var wire 1 26 InA $end
$var wire 1 S6 InB $end
$var wire 1 /! S $end
$var wire 1 F8 Out $end
$var wire 1 H8 notS $end
$var wire 1 I8 pdt1 $end
$var wire 1 J8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 H8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 S6 in2 $end
$var wire 1 I8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 H8 in1 $end
$var wire 1 26 in2 $end
$var wire 1 J8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 I8 in1 $end
$var wire 1 J8 in2 $end
$var wire 1 F8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 O! InA $end
$var wire 1 "6 InB $end
$var wire 1 /! S $end
$var wire 1 G8 Out $end
$var wire 1 K8 notS $end
$var wire 1 L8 pdt1 $end
$var wire 1 M8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 K8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 "6 in2 $end
$var wire 1 L8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 K8 in1 $end
$var wire 1 O! in2 $end
$var wire 1 M8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 L8 in1 $end
$var wire 1 M8 in2 $end
$var wire 1 G8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 F8 InA $end
$var wire 1 G8 InB $end
$var wire 1 .! S $end
$var wire 1 c6 Out $end
$var wire 1 N8 notS $end
$var wire 1 O8 pdt1 $end
$var wire 1 P8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 N8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 G8 in2 $end
$var wire 1 O8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 N8 in1 $end
$var wire 1 F8 in2 $end
$var wire 1 P8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 O8 in1 $end
$var wire 1 P8 in2 $end
$var wire 1 c6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 16 InA $end
$var wire 1 R6 InB $end
$var wire 1 N! InC $end
$var wire 1 !6 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 b6 Out $end
$var wire 1 Q8 Out_1 $end
$var wire 1 R8 Out_2 $end

$scope module inst_1 $end
$var wire 1 16 InA $end
$var wire 1 R6 InB $end
$var wire 1 /! S $end
$var wire 1 Q8 Out $end
$var wire 1 S8 notS $end
$var wire 1 T8 pdt1 $end
$var wire 1 U8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 S8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 R6 in2 $end
$var wire 1 T8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 S8 in1 $end
$var wire 1 16 in2 $end
$var wire 1 U8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 T8 in1 $end
$var wire 1 U8 in2 $end
$var wire 1 Q8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 N! InA $end
$var wire 1 !6 InB $end
$var wire 1 /! S $end
$var wire 1 R8 Out $end
$var wire 1 V8 notS $end
$var wire 1 W8 pdt1 $end
$var wire 1 X8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 V8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 !6 in2 $end
$var wire 1 W8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 V8 in1 $end
$var wire 1 N! in2 $end
$var wire 1 X8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 W8 in1 $end
$var wire 1 X8 in2 $end
$var wire 1 R8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 Q8 InA $end
$var wire 1 R8 InB $end
$var wire 1 .! S $end
$var wire 1 b6 Out $end
$var wire 1 Y8 notS $end
$var wire 1 Z8 pdt1 $end
$var wire 1 [8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 Y8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 R8 in2 $end
$var wire 1 Z8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 Y8 in1 $end
$var wire 1 Q8 in2 $end
$var wire 1 [8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Z8 in1 $end
$var wire 1 [8 in2 $end
$var wire 1 b6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 06 InA $end
$var wire 1 Q6 InB $end
$var wire 1 M! InC $end
$var wire 1 ~5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 a6 Out $end
$var wire 1 \8 Out_1 $end
$var wire 1 ]8 Out_2 $end

$scope module inst_1 $end
$var wire 1 06 InA $end
$var wire 1 Q6 InB $end
$var wire 1 /! S $end
$var wire 1 \8 Out $end
$var wire 1 ^8 notS $end
$var wire 1 _8 pdt1 $end
$var wire 1 `8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 ^8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 Q6 in2 $end
$var wire 1 _8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ^8 in1 $end
$var wire 1 06 in2 $end
$var wire 1 `8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 _8 in1 $end
$var wire 1 `8 in2 $end
$var wire 1 \8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 M! InA $end
$var wire 1 ~5 InB $end
$var wire 1 /! S $end
$var wire 1 ]8 Out $end
$var wire 1 a8 notS $end
$var wire 1 b8 pdt1 $end
$var wire 1 c8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 a8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 ~5 in2 $end
$var wire 1 b8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 a8 in1 $end
$var wire 1 M! in2 $end
$var wire 1 c8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 b8 in1 $end
$var wire 1 c8 in2 $end
$var wire 1 ]8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 \8 InA $end
$var wire 1 ]8 InB $end
$var wire 1 .! S $end
$var wire 1 a6 Out $end
$var wire 1 d8 notS $end
$var wire 1 e8 pdt1 $end
$var wire 1 f8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 d8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 ]8 in2 $end
$var wire 1 e8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 d8 in1 $end
$var wire 1 \8 in2 $end
$var wire 1 f8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 e8 in1 $end
$var wire 1 f8 in2 $end
$var wire 1 a6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 /6 InA $end
$var wire 1 P6 InB $end
$var wire 1 L! InC $end
$var wire 1 }5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 `6 Out $end
$var wire 1 g8 Out_1 $end
$var wire 1 h8 Out_2 $end

$scope module inst_1 $end
$var wire 1 /6 InA $end
$var wire 1 P6 InB $end
$var wire 1 /! S $end
$var wire 1 g8 Out $end
$var wire 1 i8 notS $end
$var wire 1 j8 pdt1 $end
$var wire 1 k8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 i8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 P6 in2 $end
$var wire 1 j8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 i8 in1 $end
$var wire 1 /6 in2 $end
$var wire 1 k8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 j8 in1 $end
$var wire 1 k8 in2 $end
$var wire 1 g8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 L! InA $end
$var wire 1 }5 InB $end
$var wire 1 /! S $end
$var wire 1 h8 Out $end
$var wire 1 l8 notS $end
$var wire 1 m8 pdt1 $end
$var wire 1 n8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 l8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 }5 in2 $end
$var wire 1 m8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 l8 in1 $end
$var wire 1 L! in2 $end
$var wire 1 n8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 m8 in1 $end
$var wire 1 n8 in2 $end
$var wire 1 h8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 g8 InA $end
$var wire 1 h8 InB $end
$var wire 1 .! S $end
$var wire 1 `6 Out $end
$var wire 1 o8 notS $end
$var wire 1 p8 pdt1 $end
$var wire 1 q8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 o8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 h8 in2 $end
$var wire 1 p8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 o8 in1 $end
$var wire 1 g8 in2 $end
$var wire 1 q8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 p8 in1 $end
$var wire 1 q8 in2 $end
$var wire 1 `6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 .6 InA $end
$var wire 1 O6 InB $end
$var wire 1 K! InC $end
$var wire 1 |5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 _6 Out $end
$var wire 1 r8 Out_1 $end
$var wire 1 s8 Out_2 $end

$scope module inst_1 $end
$var wire 1 .6 InA $end
$var wire 1 O6 InB $end
$var wire 1 /! S $end
$var wire 1 r8 Out $end
$var wire 1 t8 notS $end
$var wire 1 u8 pdt1 $end
$var wire 1 v8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 t8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 O6 in2 $end
$var wire 1 u8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 t8 in1 $end
$var wire 1 .6 in2 $end
$var wire 1 v8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 u8 in1 $end
$var wire 1 v8 in2 $end
$var wire 1 r8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 K! InA $end
$var wire 1 |5 InB $end
$var wire 1 /! S $end
$var wire 1 s8 Out $end
$var wire 1 w8 notS $end
$var wire 1 x8 pdt1 $end
$var wire 1 y8 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 w8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 |5 in2 $end
$var wire 1 x8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 w8 in1 $end
$var wire 1 K! in2 $end
$var wire 1 y8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 x8 in1 $end
$var wire 1 y8 in2 $end
$var wire 1 s8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 r8 InA $end
$var wire 1 s8 InB $end
$var wire 1 .! S $end
$var wire 1 _6 Out $end
$var wire 1 z8 notS $end
$var wire 1 {8 pdt1 $end
$var wire 1 |8 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 z8 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 s8 in2 $end
$var wire 1 {8 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 z8 in1 $end
$var wire 1 r8 in2 $end
$var wire 1 |8 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 {8 in1 $end
$var wire 1 |8 in2 $end
$var wire 1 _6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 -6 InA $end
$var wire 1 N6 InB $end
$var wire 1 $8 InC $end
$var wire 1 {5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 ^6 Out $end
$var wire 1 }8 Out_1 $end
$var wire 1 ~8 Out_2 $end

$scope module inst_1 $end
$var wire 1 -6 InA $end
$var wire 1 N6 InB $end
$var wire 1 /! S $end
$var wire 1 }8 Out $end
$var wire 1 !9 notS $end
$var wire 1 "9 pdt1 $end
$var wire 1 #9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 !9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 N6 in2 $end
$var wire 1 "9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 !9 in1 $end
$var wire 1 -6 in2 $end
$var wire 1 #9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 "9 in1 $end
$var wire 1 #9 in2 $end
$var wire 1 }8 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 $8 InA $end
$var wire 1 {5 InB $end
$var wire 1 /! S $end
$var wire 1 ~8 Out $end
$var wire 1 $9 notS $end
$var wire 1 %9 pdt1 $end
$var wire 1 &9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 $9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 {5 in2 $end
$var wire 1 %9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 $9 in1 $end
$var wire 1 $8 in2 $end
$var wire 1 &9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 %9 in1 $end
$var wire 1 &9 in2 $end
$var wire 1 ~8 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 }8 InA $end
$var wire 1 ~8 InB $end
$var wire 1 .! S $end
$var wire 1 ^6 Out $end
$var wire 1 '9 notS $end
$var wire 1 (9 pdt1 $end
$var wire 1 )9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 '9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 ~8 in2 $end
$var wire 1 (9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 '9 in1 $end
$var wire 1 }8 in2 $end
$var wire 1 )9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 (9 in1 $end
$var wire 1 )9 in2 $end
$var wire 1 ^6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 ,6 InA $end
$var wire 1 M6 InB $end
$var wire 1 #8 InC $end
$var wire 1 z5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 ]6 Out $end
$var wire 1 *9 Out_1 $end
$var wire 1 +9 Out_2 $end

$scope module inst_1 $end
$var wire 1 ,6 InA $end
$var wire 1 M6 InB $end
$var wire 1 /! S $end
$var wire 1 *9 Out $end
$var wire 1 ,9 notS $end
$var wire 1 -9 pdt1 $end
$var wire 1 .9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 ,9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 M6 in2 $end
$var wire 1 -9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ,9 in1 $end
$var wire 1 ,6 in2 $end
$var wire 1 .9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 -9 in1 $end
$var wire 1 .9 in2 $end
$var wire 1 *9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 #8 InA $end
$var wire 1 z5 InB $end
$var wire 1 /! S $end
$var wire 1 +9 Out $end
$var wire 1 /9 notS $end
$var wire 1 09 pdt1 $end
$var wire 1 19 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 /9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 z5 in2 $end
$var wire 1 09 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 /9 in1 $end
$var wire 1 #8 in2 $end
$var wire 1 19 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 09 in1 $end
$var wire 1 19 in2 $end
$var wire 1 +9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 *9 InA $end
$var wire 1 +9 InB $end
$var wire 1 .! S $end
$var wire 1 ]6 Out $end
$var wire 1 29 notS $end
$var wire 1 39 pdt1 $end
$var wire 1 49 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 29 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 +9 in2 $end
$var wire 1 39 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 29 in1 $end
$var wire 1 *9 in2 $end
$var wire 1 49 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 39 in1 $end
$var wire 1 49 in2 $end
$var wire 1 ]6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 +6 InA $end
$var wire 1 L6 InB $end
$var wire 1 "8 InC $end
$var wire 1 y5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 \6 Out $end
$var wire 1 59 Out_1 $end
$var wire 1 69 Out_2 $end

$scope module inst_1 $end
$var wire 1 +6 InA $end
$var wire 1 L6 InB $end
$var wire 1 /! S $end
$var wire 1 59 Out $end
$var wire 1 79 notS $end
$var wire 1 89 pdt1 $end
$var wire 1 99 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 79 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 L6 in2 $end
$var wire 1 89 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 79 in1 $end
$var wire 1 +6 in2 $end
$var wire 1 99 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 89 in1 $end
$var wire 1 99 in2 $end
$var wire 1 59 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 "8 InA $end
$var wire 1 y5 InB $end
$var wire 1 /! S $end
$var wire 1 69 Out $end
$var wire 1 :9 notS $end
$var wire 1 ;9 pdt1 $end
$var wire 1 <9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 :9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 y5 in2 $end
$var wire 1 ;9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 :9 in1 $end
$var wire 1 "8 in2 $end
$var wire 1 <9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ;9 in1 $end
$var wire 1 <9 in2 $end
$var wire 1 69 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 59 InA $end
$var wire 1 69 InB $end
$var wire 1 .! S $end
$var wire 1 \6 Out $end
$var wire 1 =9 notS $end
$var wire 1 >9 pdt1 $end
$var wire 1 ?9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 =9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 69 in2 $end
$var wire 1 >9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 =9 in1 $end
$var wire 1 59 in2 $end
$var wire 1 ?9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 >9 in1 $end
$var wire 1 ?9 in2 $end
$var wire 1 \6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 *6 InA $end
$var wire 1 K6 InB $end
$var wire 1 !8 InC $end
$var wire 1 x5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 [6 Out $end
$var wire 1 @9 Out_1 $end
$var wire 1 A9 Out_2 $end

$scope module inst_1 $end
$var wire 1 *6 InA $end
$var wire 1 K6 InB $end
$var wire 1 /! S $end
$var wire 1 @9 Out $end
$var wire 1 B9 notS $end
$var wire 1 C9 pdt1 $end
$var wire 1 D9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 B9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 K6 in2 $end
$var wire 1 C9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 B9 in1 $end
$var wire 1 *6 in2 $end
$var wire 1 D9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 C9 in1 $end
$var wire 1 D9 in2 $end
$var wire 1 @9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 !8 InA $end
$var wire 1 x5 InB $end
$var wire 1 /! S $end
$var wire 1 A9 Out $end
$var wire 1 E9 notS $end
$var wire 1 F9 pdt1 $end
$var wire 1 G9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 E9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 x5 in2 $end
$var wire 1 F9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 E9 in1 $end
$var wire 1 !8 in2 $end
$var wire 1 G9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 F9 in1 $end
$var wire 1 G9 in2 $end
$var wire 1 A9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 @9 InA $end
$var wire 1 A9 InB $end
$var wire 1 .! S $end
$var wire 1 [6 Out $end
$var wire 1 H9 notS $end
$var wire 1 I9 pdt1 $end
$var wire 1 J9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 H9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 A9 in2 $end
$var wire 1 I9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 H9 in1 $end
$var wire 1 @9 in2 $end
$var wire 1 J9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 I9 in1 $end
$var wire 1 J9 in2 $end
$var wire 1 [6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 )6 InA $end
$var wire 1 J6 InB $end
$var wire 1 ~7 InC $end
$var wire 1 w5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 Z6 Out $end
$var wire 1 K9 Out_1 $end
$var wire 1 L9 Out_2 $end

$scope module inst_1 $end
$var wire 1 )6 InA $end
$var wire 1 J6 InB $end
$var wire 1 /! S $end
$var wire 1 K9 Out $end
$var wire 1 M9 notS $end
$var wire 1 N9 pdt1 $end
$var wire 1 O9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 M9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 J6 in2 $end
$var wire 1 N9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 M9 in1 $end
$var wire 1 )6 in2 $end
$var wire 1 O9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 N9 in1 $end
$var wire 1 O9 in2 $end
$var wire 1 K9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ~7 InA $end
$var wire 1 w5 InB $end
$var wire 1 /! S $end
$var wire 1 L9 Out $end
$var wire 1 P9 notS $end
$var wire 1 Q9 pdt1 $end
$var wire 1 R9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 P9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 w5 in2 $end
$var wire 1 Q9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 P9 in1 $end
$var wire 1 ~7 in2 $end
$var wire 1 R9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Q9 in1 $end
$var wire 1 R9 in2 $end
$var wire 1 L9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 K9 InA $end
$var wire 1 L9 InB $end
$var wire 1 .! S $end
$var wire 1 Z6 Out $end
$var wire 1 S9 notS $end
$var wire 1 T9 pdt1 $end
$var wire 1 U9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 S9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 L9 in2 $end
$var wire 1 T9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 S9 in1 $end
$var wire 1 K9 in2 $end
$var wire 1 U9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 T9 in1 $end
$var wire 1 U9 in2 $end
$var wire 1 Z6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 (6 InA $end
$var wire 1 I6 InB $end
$var wire 1 }7 InC $end
$var wire 1 v5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 Y6 Out $end
$var wire 1 V9 Out_1 $end
$var wire 1 W9 Out_2 $end

$scope module inst_1 $end
$var wire 1 (6 InA $end
$var wire 1 I6 InB $end
$var wire 1 /! S $end
$var wire 1 V9 Out $end
$var wire 1 X9 notS $end
$var wire 1 Y9 pdt1 $end
$var wire 1 Z9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 X9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 I6 in2 $end
$var wire 1 Y9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 X9 in1 $end
$var wire 1 (6 in2 $end
$var wire 1 Z9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Y9 in1 $end
$var wire 1 Z9 in2 $end
$var wire 1 V9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 }7 InA $end
$var wire 1 v5 InB $end
$var wire 1 /! S $end
$var wire 1 W9 Out $end
$var wire 1 [9 notS $end
$var wire 1 \9 pdt1 $end
$var wire 1 ]9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 [9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 v5 in2 $end
$var wire 1 \9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 [9 in1 $end
$var wire 1 }7 in2 $end
$var wire 1 ]9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 \9 in1 $end
$var wire 1 ]9 in2 $end
$var wire 1 W9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 V9 InA $end
$var wire 1 W9 InB $end
$var wire 1 .! S $end
$var wire 1 Y6 Out $end
$var wire 1 ^9 notS $end
$var wire 1 _9 pdt1 $end
$var wire 1 `9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 ^9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 W9 in2 $end
$var wire 1 _9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ^9 in1 $end
$var wire 1 V9 in2 $end
$var wire 1 `9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 _9 in1 $end
$var wire 1 `9 in2 $end
$var wire 1 Y6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 '6 InA $end
$var wire 1 H6 InB $end
$var wire 1 |7 InC $end
$var wire 1 u5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 X6 Out $end
$var wire 1 a9 Out_1 $end
$var wire 1 b9 Out_2 $end

$scope module inst_1 $end
$var wire 1 '6 InA $end
$var wire 1 H6 InB $end
$var wire 1 /! S $end
$var wire 1 a9 Out $end
$var wire 1 c9 notS $end
$var wire 1 d9 pdt1 $end
$var wire 1 e9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 c9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 H6 in2 $end
$var wire 1 d9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 c9 in1 $end
$var wire 1 '6 in2 $end
$var wire 1 e9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 d9 in1 $end
$var wire 1 e9 in2 $end
$var wire 1 a9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 |7 InA $end
$var wire 1 u5 InB $end
$var wire 1 /! S $end
$var wire 1 b9 Out $end
$var wire 1 f9 notS $end
$var wire 1 g9 pdt1 $end
$var wire 1 h9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 f9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 u5 in2 $end
$var wire 1 g9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 f9 in1 $end
$var wire 1 |7 in2 $end
$var wire 1 h9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 g9 in1 $end
$var wire 1 h9 in2 $end
$var wire 1 b9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 a9 InA $end
$var wire 1 b9 InB $end
$var wire 1 .! S $end
$var wire 1 X6 Out $end
$var wire 1 i9 notS $end
$var wire 1 j9 pdt1 $end
$var wire 1 k9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 i9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 b9 in2 $end
$var wire 1 j9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 i9 in1 $end
$var wire 1 a9 in2 $end
$var wire 1 k9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 j9 in1 $end
$var wire 1 k9 in2 $end
$var wire 1 X6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 &6 InA $end
$var wire 1 G6 InB $end
$var wire 1 {7 InC $end
$var wire 1 t5 InD $end
$var wire 1 .! S [1] $end
$var wire 1 /! S [0] $end
$var wire 1 W6 Out $end
$var wire 1 l9 Out_1 $end
$var wire 1 m9 Out_2 $end

$scope module inst_1 $end
$var wire 1 &6 InA $end
$var wire 1 G6 InB $end
$var wire 1 /! S $end
$var wire 1 l9 Out $end
$var wire 1 n9 notS $end
$var wire 1 o9 pdt1 $end
$var wire 1 p9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 n9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 G6 in2 $end
$var wire 1 o9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 n9 in1 $end
$var wire 1 &6 in2 $end
$var wire 1 p9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 o9 in1 $end
$var wire 1 p9 in2 $end
$var wire 1 l9 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 {7 InA $end
$var wire 1 t5 InB $end
$var wire 1 /! S $end
$var wire 1 m9 Out $end
$var wire 1 q9 notS $end
$var wire 1 r9 pdt1 $end
$var wire 1 s9 pdt2 $end

$scope module not_inst $end
$var wire 1 /! in1 $end
$var wire 1 q9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 /! in1 $end
$var wire 1 t5 in2 $end
$var wire 1 r9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 q9 in1 $end
$var wire 1 {7 in2 $end
$var wire 1 s9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 r9 in1 $end
$var wire 1 s9 in2 $end
$var wire 1 m9 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 l9 InA $end
$var wire 1 m9 InB $end
$var wire 1 .! S $end
$var wire 1 W6 Out $end
$var wire 1 t9 notS $end
$var wire 1 u9 pdt1 $end
$var wire 1 v9 pdt2 $end

$scope module not_inst $end
$var wire 1 .! in1 $end
$var wire 1 t9 out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 .! in1 $end
$var wire 1 m9 in2 $end
$var wire 1 u9 out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 t9 in1 $end
$var wire 1 l9 in2 $end
$var wire 1 v9 out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 u9 in1 $end
$var wire 1 v9 in2 $end
$var wire 1 W6 out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux6 $end
$var wire 1 '# InA [15] $end
$var wire 1 (# InA [14] $end
$var wire 1 )# InA [13] $end
$var wire 1 *# InA [12] $end
$var wire 1 +# InA [11] $end
$var wire 1 ,# InA [10] $end
$var wire 1 -# InA [9] $end
$var wire 1 .# InA [8] $end
$var wire 1 /# InA [7] $end
$var wire 1 0# InA [6] $end
$var wire 1 1# InA [5] $end
$var wire 1 2# InA [4] $end
$var wire 1 3# InA [3] $end
$var wire 1 4# InA [2] $end
$var wire 1 5# InA [1] $end
$var wire 1 6# InA [0] $end
$var wire 1 w9 InB [15] $end
$var wire 1 x9 InB [14] $end
$var wire 1 y9 InB [13] $end
$var wire 1 z9 InB [12] $end
$var wire 1 {9 InB [11] $end
$var wire 1 |9 InB [10] $end
$var wire 1 }9 InB [9] $end
$var wire 1 ~9 InB [8] $end
$var wire 1 !: InB [7] $end
$var wire 1 ": InB [6] $end
$var wire 1 #: InB [5] $end
$var wire 1 $: InB [4] $end
$var wire 1 3# InB [3] $end
$var wire 1 4# InB [2] $end
$var wire 1 5# InB [1] $end
$var wire 1 6# InB [0] $end
$var wire 1 4! S $end
$var wire 1 76 Out [15] $end
$var wire 1 86 Out [14] $end
$var wire 1 96 Out [13] $end
$var wire 1 :6 Out [12] $end
$var wire 1 ;6 Out [11] $end
$var wire 1 <6 Out [10] $end
$var wire 1 =6 Out [9] $end
$var wire 1 >6 Out [8] $end
$var wire 1 ?6 Out [7] $end
$var wire 1 @6 Out [6] $end
$var wire 1 A6 Out [5] $end
$var wire 1 B6 Out [4] $end
$var wire 1 C6 Out [3] $end
$var wire 1 D6 Out [2] $end
$var wire 1 E6 Out [1] $end
$var wire 1 F6 Out [0] $end

$scope module inst_0 $end
$var wire 1 6# InA $end
$var wire 1 6# InB $end
$var wire 1 4! S $end
$var wire 1 F6 Out $end
$var wire 1 %: notS $end
$var wire 1 &: pdt1 $end
$var wire 1 ': pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 %: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 6# in2 $end
$var wire 1 &: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 %: in1 $end
$var wire 1 6# in2 $end
$var wire 1 ': out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 &: in1 $end
$var wire 1 ': in2 $end
$var wire 1 F6 out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 5# InA $end
$var wire 1 5# InB $end
$var wire 1 4! S $end
$var wire 1 E6 Out $end
$var wire 1 (: notS $end
$var wire 1 ): pdt1 $end
$var wire 1 *: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 (: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 5# in2 $end
$var wire 1 ): out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 (: in1 $end
$var wire 1 5# in2 $end
$var wire 1 *: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ): in1 $end
$var wire 1 *: in2 $end
$var wire 1 E6 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 4# InA $end
$var wire 1 4# InB $end
$var wire 1 4! S $end
$var wire 1 D6 Out $end
$var wire 1 +: notS $end
$var wire 1 ,: pdt1 $end
$var wire 1 -: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 +: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 4# in2 $end
$var wire 1 ,: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 +: in1 $end
$var wire 1 4# in2 $end
$var wire 1 -: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ,: in1 $end
$var wire 1 -: in2 $end
$var wire 1 D6 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 3# InA $end
$var wire 1 3# InB $end
$var wire 1 4! S $end
$var wire 1 C6 Out $end
$var wire 1 .: notS $end
$var wire 1 /: pdt1 $end
$var wire 1 0: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 .: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 3# in2 $end
$var wire 1 /: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 .: in1 $end
$var wire 1 3# in2 $end
$var wire 1 0: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 /: in1 $end
$var wire 1 0: in2 $end
$var wire 1 C6 out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 2# InA $end
$var wire 1 $: InB $end
$var wire 1 4! S $end
$var wire 1 B6 Out $end
$var wire 1 1: notS $end
$var wire 1 2: pdt1 $end
$var wire 1 3: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 1: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 $: in2 $end
$var wire 1 2: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 1: in1 $end
$var wire 1 2# in2 $end
$var wire 1 3: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 2: in1 $end
$var wire 1 3: in2 $end
$var wire 1 B6 out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 1# InA $end
$var wire 1 #: InB $end
$var wire 1 4! S $end
$var wire 1 A6 Out $end
$var wire 1 4: notS $end
$var wire 1 5: pdt1 $end
$var wire 1 6: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 4: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 #: in2 $end
$var wire 1 5: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 4: in1 $end
$var wire 1 1# in2 $end
$var wire 1 6: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 5: in1 $end
$var wire 1 6: in2 $end
$var wire 1 A6 out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 0# InA $end
$var wire 1 ": InB $end
$var wire 1 4! S $end
$var wire 1 @6 Out $end
$var wire 1 7: notS $end
$var wire 1 8: pdt1 $end
$var wire 1 9: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 7: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 ": in2 $end
$var wire 1 8: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 7: in1 $end
$var wire 1 0# in2 $end
$var wire 1 9: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 8: in1 $end
$var wire 1 9: in2 $end
$var wire 1 @6 out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 /# InA $end
$var wire 1 !: InB $end
$var wire 1 4! S $end
$var wire 1 ?6 Out $end
$var wire 1 :: notS $end
$var wire 1 ;: pdt1 $end
$var wire 1 <: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 :: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 !: in2 $end
$var wire 1 ;: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 :: in1 $end
$var wire 1 /# in2 $end
$var wire 1 <: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ;: in1 $end
$var wire 1 <: in2 $end
$var wire 1 ?6 out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 .# InA $end
$var wire 1 ~9 InB $end
$var wire 1 4! S $end
$var wire 1 >6 Out $end
$var wire 1 =: notS $end
$var wire 1 >: pdt1 $end
$var wire 1 ?: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 =: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 ~9 in2 $end
$var wire 1 >: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 =: in1 $end
$var wire 1 .# in2 $end
$var wire 1 ?: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 >: in1 $end
$var wire 1 ?: in2 $end
$var wire 1 >6 out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 -# InA $end
$var wire 1 }9 InB $end
$var wire 1 4! S $end
$var wire 1 =6 Out $end
$var wire 1 @: notS $end
$var wire 1 A: pdt1 $end
$var wire 1 B: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 @: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 }9 in2 $end
$var wire 1 A: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 @: in1 $end
$var wire 1 -# in2 $end
$var wire 1 B: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 A: in1 $end
$var wire 1 B: in2 $end
$var wire 1 =6 out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 ,# InA $end
$var wire 1 |9 InB $end
$var wire 1 4! S $end
$var wire 1 <6 Out $end
$var wire 1 C: notS $end
$var wire 1 D: pdt1 $end
$var wire 1 E: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 C: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 |9 in2 $end
$var wire 1 D: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 C: in1 $end
$var wire 1 ,# in2 $end
$var wire 1 E: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 D: in1 $end
$var wire 1 E: in2 $end
$var wire 1 <6 out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 +# InA $end
$var wire 1 {9 InB $end
$var wire 1 4! S $end
$var wire 1 ;6 Out $end
$var wire 1 F: notS $end
$var wire 1 G: pdt1 $end
$var wire 1 H: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 F: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 {9 in2 $end
$var wire 1 G: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 F: in1 $end
$var wire 1 +# in2 $end
$var wire 1 H: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 G: in1 $end
$var wire 1 H: in2 $end
$var wire 1 ;6 out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 *# InA $end
$var wire 1 z9 InB $end
$var wire 1 4! S $end
$var wire 1 :6 Out $end
$var wire 1 I: notS $end
$var wire 1 J: pdt1 $end
$var wire 1 K: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 I: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 z9 in2 $end
$var wire 1 J: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 I: in1 $end
$var wire 1 *# in2 $end
$var wire 1 K: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 J: in1 $end
$var wire 1 K: in2 $end
$var wire 1 :6 out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 )# InA $end
$var wire 1 y9 InB $end
$var wire 1 4! S $end
$var wire 1 96 Out $end
$var wire 1 L: notS $end
$var wire 1 M: pdt1 $end
$var wire 1 N: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 L: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 y9 in2 $end
$var wire 1 M: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 L: in1 $end
$var wire 1 )# in2 $end
$var wire 1 N: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 M: in1 $end
$var wire 1 N: in2 $end
$var wire 1 96 out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 (# InA $end
$var wire 1 x9 InB $end
$var wire 1 4! S $end
$var wire 1 86 Out $end
$var wire 1 O: notS $end
$var wire 1 P: pdt1 $end
$var wire 1 Q: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 O: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 x9 in2 $end
$var wire 1 P: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 O: in1 $end
$var wire 1 (# in2 $end
$var wire 1 Q: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 P: in1 $end
$var wire 1 Q: in2 $end
$var wire 1 86 out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 '# InA $end
$var wire 1 w9 InB $end
$var wire 1 4! S $end
$var wire 1 76 Out $end
$var wire 1 R: notS $end
$var wire 1 S: pdt1 $end
$var wire 1 T: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 R: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 w9 in2 $end
$var wire 1 S: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 R: in1 $end
$var wire 1 '# in2 $end
$var wire 1 T: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 S: in1 $end
$var wire 1 T: in2 $end
$var wire 1 76 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux7 $end
$var wire 1 S! InA [15] $end
$var wire 1 T! InA [14] $end
$var wire 1 U! InA [13] $end
$var wire 1 V! InA [12] $end
$var wire 1 W! InA [11] $end
$var wire 1 X! InA [10] $end
$var wire 1 Y! InA [9] $end
$var wire 1 Z! InA [8] $end
$var wire 1 [! InA [7] $end
$var wire 1 \! InA [6] $end
$var wire 1 ]! InA [5] $end
$var wire 1 ^! InA [4] $end
$var wire 1 _! InA [3] $end
$var wire 1 `! InA [2] $end
$var wire 1 a! InA [1] $end
$var wire 1 b! InA [0] $end
$var wire 1 U: InB [15] $end
$var wire 1 V: InB [14] $end
$var wire 1 W: InB [13] $end
$var wire 1 X: InB [12] $end
$var wire 1 Y: InB [11] $end
$var wire 1 Z: InB [10] $end
$var wire 1 [: InB [9] $end
$var wire 1 \: InB [8] $end
$var wire 1 ]: InB [7] $end
$var wire 1 ^: InB [6] $end
$var wire 1 _: InB [5] $end
$var wire 1 `: InB [4] $end
$var wire 1 O! InB [3] $end
$var wire 1 P! InB [2] $end
$var wire 1 Q! InB [1] $end
$var wire 1 R! InB [0] $end
$var wire 1 4! S $end
$var wire 1 G6 Out [15] $end
$var wire 1 H6 Out [14] $end
$var wire 1 I6 Out [13] $end
$var wire 1 J6 Out [12] $end
$var wire 1 K6 Out [11] $end
$var wire 1 L6 Out [10] $end
$var wire 1 M6 Out [9] $end
$var wire 1 N6 Out [8] $end
$var wire 1 O6 Out [7] $end
$var wire 1 P6 Out [6] $end
$var wire 1 Q6 Out [5] $end
$var wire 1 R6 Out [4] $end
$var wire 1 S6 Out [3] $end
$var wire 1 T6 Out [2] $end
$var wire 1 U6 Out [1] $end
$var wire 1 V6 Out [0] $end

$scope module inst_0 $end
$var wire 1 b! InA $end
$var wire 1 R! InB $end
$var wire 1 4! S $end
$var wire 1 V6 Out $end
$var wire 1 a: notS $end
$var wire 1 b: pdt1 $end
$var wire 1 c: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 a: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 R! in2 $end
$var wire 1 b: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 a: in1 $end
$var wire 1 b! in2 $end
$var wire 1 c: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 b: in1 $end
$var wire 1 c: in2 $end
$var wire 1 V6 out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 a! InA $end
$var wire 1 Q! InB $end
$var wire 1 4! S $end
$var wire 1 U6 Out $end
$var wire 1 d: notS $end
$var wire 1 e: pdt1 $end
$var wire 1 f: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 d: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 Q! in2 $end
$var wire 1 e: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 d: in1 $end
$var wire 1 a! in2 $end
$var wire 1 f: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 e: in1 $end
$var wire 1 f: in2 $end
$var wire 1 U6 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 `! InA $end
$var wire 1 P! InB $end
$var wire 1 4! S $end
$var wire 1 T6 Out $end
$var wire 1 g: notS $end
$var wire 1 h: pdt1 $end
$var wire 1 i: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 g: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 P! in2 $end
$var wire 1 h: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 g: in1 $end
$var wire 1 `! in2 $end
$var wire 1 i: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 h: in1 $end
$var wire 1 i: in2 $end
$var wire 1 T6 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 _! InA $end
$var wire 1 O! InB $end
$var wire 1 4! S $end
$var wire 1 S6 Out $end
$var wire 1 j: notS $end
$var wire 1 k: pdt1 $end
$var wire 1 l: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 j: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 O! in2 $end
$var wire 1 k: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 j: in1 $end
$var wire 1 _! in2 $end
$var wire 1 l: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 k: in1 $end
$var wire 1 l: in2 $end
$var wire 1 S6 out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 ^! InA $end
$var wire 1 `: InB $end
$var wire 1 4! S $end
$var wire 1 R6 Out $end
$var wire 1 m: notS $end
$var wire 1 n: pdt1 $end
$var wire 1 o: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 m: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 `: in2 $end
$var wire 1 n: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 m: in1 $end
$var wire 1 ^! in2 $end
$var wire 1 o: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 n: in1 $end
$var wire 1 o: in2 $end
$var wire 1 R6 out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 ]! InA $end
$var wire 1 _: InB $end
$var wire 1 4! S $end
$var wire 1 Q6 Out $end
$var wire 1 p: notS $end
$var wire 1 q: pdt1 $end
$var wire 1 r: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 p: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 _: in2 $end
$var wire 1 q: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 p: in1 $end
$var wire 1 ]! in2 $end
$var wire 1 r: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 q: in1 $end
$var wire 1 r: in2 $end
$var wire 1 Q6 out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 \! InA $end
$var wire 1 ^: InB $end
$var wire 1 4! S $end
$var wire 1 P6 Out $end
$var wire 1 s: notS $end
$var wire 1 t: pdt1 $end
$var wire 1 u: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 s: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 ^: in2 $end
$var wire 1 t: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 s: in1 $end
$var wire 1 \! in2 $end
$var wire 1 u: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 t: in1 $end
$var wire 1 u: in2 $end
$var wire 1 P6 out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 [! InA $end
$var wire 1 ]: InB $end
$var wire 1 4! S $end
$var wire 1 O6 Out $end
$var wire 1 v: notS $end
$var wire 1 w: pdt1 $end
$var wire 1 x: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 v: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 ]: in2 $end
$var wire 1 w: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 v: in1 $end
$var wire 1 [! in2 $end
$var wire 1 x: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 w: in1 $end
$var wire 1 x: in2 $end
$var wire 1 O6 out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 Z! InA $end
$var wire 1 \: InB $end
$var wire 1 4! S $end
$var wire 1 N6 Out $end
$var wire 1 y: notS $end
$var wire 1 z: pdt1 $end
$var wire 1 {: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 y: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 \: in2 $end
$var wire 1 z: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 y: in1 $end
$var wire 1 Z! in2 $end
$var wire 1 {: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 z: in1 $end
$var wire 1 {: in2 $end
$var wire 1 N6 out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 Y! InA $end
$var wire 1 [: InB $end
$var wire 1 4! S $end
$var wire 1 M6 Out $end
$var wire 1 |: notS $end
$var wire 1 }: pdt1 $end
$var wire 1 ~: pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 |: out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 [: in2 $end
$var wire 1 }: out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 |: in1 $end
$var wire 1 Y! in2 $end
$var wire 1 ~: out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 }: in1 $end
$var wire 1 ~: in2 $end
$var wire 1 M6 out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 X! InA $end
$var wire 1 Z: InB $end
$var wire 1 4! S $end
$var wire 1 L6 Out $end
$var wire 1 !; notS $end
$var wire 1 "; pdt1 $end
$var wire 1 #; pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 !; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 Z: in2 $end
$var wire 1 "; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 !; in1 $end
$var wire 1 X! in2 $end
$var wire 1 #; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 "; in1 $end
$var wire 1 #; in2 $end
$var wire 1 L6 out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 W! InA $end
$var wire 1 Y: InB $end
$var wire 1 4! S $end
$var wire 1 K6 Out $end
$var wire 1 $; notS $end
$var wire 1 %; pdt1 $end
$var wire 1 &; pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 $; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 Y: in2 $end
$var wire 1 %; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 $; in1 $end
$var wire 1 W! in2 $end
$var wire 1 &; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 %; in1 $end
$var wire 1 &; in2 $end
$var wire 1 K6 out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 V! InA $end
$var wire 1 X: InB $end
$var wire 1 4! S $end
$var wire 1 J6 Out $end
$var wire 1 '; notS $end
$var wire 1 (; pdt1 $end
$var wire 1 ); pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 '; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 X: in2 $end
$var wire 1 (; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 '; in1 $end
$var wire 1 V! in2 $end
$var wire 1 ); out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 (; in1 $end
$var wire 1 ); in2 $end
$var wire 1 J6 out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 U! InA $end
$var wire 1 W: InB $end
$var wire 1 4! S $end
$var wire 1 I6 Out $end
$var wire 1 *; notS $end
$var wire 1 +; pdt1 $end
$var wire 1 ,; pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 *; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 W: in2 $end
$var wire 1 +; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 *; in1 $end
$var wire 1 U! in2 $end
$var wire 1 ,; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 +; in1 $end
$var wire 1 ,; in2 $end
$var wire 1 I6 out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 T! InA $end
$var wire 1 V: InB $end
$var wire 1 4! S $end
$var wire 1 H6 Out $end
$var wire 1 -; notS $end
$var wire 1 .; pdt1 $end
$var wire 1 /; pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 -; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 V: in2 $end
$var wire 1 .; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 -; in1 $end
$var wire 1 T! in2 $end
$var wire 1 /; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 .; in1 $end
$var wire 1 /; in2 $end
$var wire 1 H6 out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 S! InA $end
$var wire 1 U: InB $end
$var wire 1 4! S $end
$var wire 1 G6 Out $end
$var wire 1 0; notS $end
$var wire 1 1; pdt1 $end
$var wire 1 2; pdt2 $end

$scope module not_inst $end
$var wire 1 4! in1 $end
$var wire 1 0; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 4! in1 $end
$var wire 1 U: in2 $end
$var wire 1 1; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 0; in1 $end
$var wire 1 S! in2 $end
$var wire 1 2; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 1; in1 $end
$var wire 1 2; in2 $end
$var wire 1 G6 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux8 $end
$var wire 1 s! InA [15] $end
$var wire 1 t! InA [14] $end
$var wire 1 u! InA [13] $end
$var wire 1 v! InA [12] $end
$var wire 1 w! InA [11] $end
$var wire 1 x! InA [10] $end
$var wire 1 y! InA [9] $end
$var wire 1 z! InA [8] $end
$var wire 1 {! InA [7] $end
$var wire 1 |! InA [6] $end
$var wire 1 }! InA [5] $end
$var wire 1 ~! InA [4] $end
$var wire 1 !" InA [3] $end
$var wire 1 "" InA [2] $end
$var wire 1 #" InA [1] $end
$var wire 1 $" InA [0] $end
$var wire 1 3; InB [15] $end
$var wire 1 4; InB [14] $end
$var wire 1 5; InB [13] $end
$var wire 1 6; InB [12] $end
$var wire 1 7; InB [11] $end
$var wire 1 8; InB [10] $end
$var wire 1 9; InB [9] $end
$var wire 1 :; InB [8] $end
$var wire 1 ;; InB [7] $end
$var wire 1 <; InB [6] $end
$var wire 1 =; InB [5] $end
$var wire 1 N! InB [4] $end
$var wire 1 O! InB [3] $end
$var wire 1 P! InB [2] $end
$var wire 1 Q! InB [1] $end
$var wire 1 R! InB [0] $end
$var wire 1 3! S $end
$var wire 1 t5 Out [15] $end
$var wire 1 u5 Out [14] $end
$var wire 1 v5 Out [13] $end
$var wire 1 w5 Out [12] $end
$var wire 1 x5 Out [11] $end
$var wire 1 y5 Out [10] $end
$var wire 1 z5 Out [9] $end
$var wire 1 {5 Out [8] $end
$var wire 1 |5 Out [7] $end
$var wire 1 }5 Out [6] $end
$var wire 1 ~5 Out [5] $end
$var wire 1 !6 Out [4] $end
$var wire 1 "6 Out [3] $end
$var wire 1 #6 Out [2] $end
$var wire 1 $6 Out [1] $end
$var wire 1 %6 Out [0] $end

$scope module inst_0 $end
$var wire 1 $" InA $end
$var wire 1 R! InB $end
$var wire 1 3! S $end
$var wire 1 %6 Out $end
$var wire 1 >; notS $end
$var wire 1 ?; pdt1 $end
$var wire 1 @; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 >; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 R! in2 $end
$var wire 1 ?; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 >; in1 $end
$var wire 1 $" in2 $end
$var wire 1 @; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ?; in1 $end
$var wire 1 @; in2 $end
$var wire 1 %6 out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 #" InA $end
$var wire 1 Q! InB $end
$var wire 1 3! S $end
$var wire 1 $6 Out $end
$var wire 1 A; notS $end
$var wire 1 B; pdt1 $end
$var wire 1 C; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 A; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 Q! in2 $end
$var wire 1 B; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 A; in1 $end
$var wire 1 #" in2 $end
$var wire 1 C; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 B; in1 $end
$var wire 1 C; in2 $end
$var wire 1 $6 out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 "" InA $end
$var wire 1 P! InB $end
$var wire 1 3! S $end
$var wire 1 #6 Out $end
$var wire 1 D; notS $end
$var wire 1 E; pdt1 $end
$var wire 1 F; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 D; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 P! in2 $end
$var wire 1 E; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 D; in1 $end
$var wire 1 "" in2 $end
$var wire 1 F; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 E; in1 $end
$var wire 1 F; in2 $end
$var wire 1 #6 out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 !" InA $end
$var wire 1 O! InB $end
$var wire 1 3! S $end
$var wire 1 "6 Out $end
$var wire 1 G; notS $end
$var wire 1 H; pdt1 $end
$var wire 1 I; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 G; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 O! in2 $end
$var wire 1 H; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 G; in1 $end
$var wire 1 !" in2 $end
$var wire 1 I; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 H; in1 $end
$var wire 1 I; in2 $end
$var wire 1 "6 out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 ~! InA $end
$var wire 1 N! InB $end
$var wire 1 3! S $end
$var wire 1 !6 Out $end
$var wire 1 J; notS $end
$var wire 1 K; pdt1 $end
$var wire 1 L; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 J; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 N! in2 $end
$var wire 1 K; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 J; in1 $end
$var wire 1 ~! in2 $end
$var wire 1 L; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 K; in1 $end
$var wire 1 L; in2 $end
$var wire 1 !6 out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 }! InA $end
$var wire 1 =; InB $end
$var wire 1 3! S $end
$var wire 1 ~5 Out $end
$var wire 1 M; notS $end
$var wire 1 N; pdt1 $end
$var wire 1 O; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 M; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 =; in2 $end
$var wire 1 N; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 M; in1 $end
$var wire 1 }! in2 $end
$var wire 1 O; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 N; in1 $end
$var wire 1 O; in2 $end
$var wire 1 ~5 out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 |! InA $end
$var wire 1 <; InB $end
$var wire 1 3! S $end
$var wire 1 }5 Out $end
$var wire 1 P; notS $end
$var wire 1 Q; pdt1 $end
$var wire 1 R; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 P; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 <; in2 $end
$var wire 1 Q; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 P; in1 $end
$var wire 1 |! in2 $end
$var wire 1 R; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Q; in1 $end
$var wire 1 R; in2 $end
$var wire 1 }5 out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 {! InA $end
$var wire 1 ;; InB $end
$var wire 1 3! S $end
$var wire 1 |5 Out $end
$var wire 1 S; notS $end
$var wire 1 T; pdt1 $end
$var wire 1 U; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 S; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 ;; in2 $end
$var wire 1 T; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 S; in1 $end
$var wire 1 {! in2 $end
$var wire 1 U; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 T; in1 $end
$var wire 1 U; in2 $end
$var wire 1 |5 out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 z! InA $end
$var wire 1 :; InB $end
$var wire 1 3! S $end
$var wire 1 {5 Out $end
$var wire 1 V; notS $end
$var wire 1 W; pdt1 $end
$var wire 1 X; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 V; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 :; in2 $end
$var wire 1 W; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 V; in1 $end
$var wire 1 z! in2 $end
$var wire 1 X; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 W; in1 $end
$var wire 1 X; in2 $end
$var wire 1 {5 out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 y! InA $end
$var wire 1 9; InB $end
$var wire 1 3! S $end
$var wire 1 z5 Out $end
$var wire 1 Y; notS $end
$var wire 1 Z; pdt1 $end
$var wire 1 [; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 Y; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 9; in2 $end
$var wire 1 Z; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 Y; in1 $end
$var wire 1 y! in2 $end
$var wire 1 [; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 Z; in1 $end
$var wire 1 [; in2 $end
$var wire 1 z5 out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 x! InA $end
$var wire 1 8; InB $end
$var wire 1 3! S $end
$var wire 1 y5 Out $end
$var wire 1 \; notS $end
$var wire 1 ]; pdt1 $end
$var wire 1 ^; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 \; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 8; in2 $end
$var wire 1 ]; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 \; in1 $end
$var wire 1 x! in2 $end
$var wire 1 ^; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ]; in1 $end
$var wire 1 ^; in2 $end
$var wire 1 y5 out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 w! InA $end
$var wire 1 7; InB $end
$var wire 1 3! S $end
$var wire 1 x5 Out $end
$var wire 1 _; notS $end
$var wire 1 `; pdt1 $end
$var wire 1 a; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 _; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 7; in2 $end
$var wire 1 `; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 _; in1 $end
$var wire 1 w! in2 $end
$var wire 1 a; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 `; in1 $end
$var wire 1 a; in2 $end
$var wire 1 x5 out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 v! InA $end
$var wire 1 6; InB $end
$var wire 1 3! S $end
$var wire 1 w5 Out $end
$var wire 1 b; notS $end
$var wire 1 c; pdt1 $end
$var wire 1 d; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 b; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 6; in2 $end
$var wire 1 c; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 b; in1 $end
$var wire 1 v! in2 $end
$var wire 1 d; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 c; in1 $end
$var wire 1 d; in2 $end
$var wire 1 w5 out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 u! InA $end
$var wire 1 5; InB $end
$var wire 1 3! S $end
$var wire 1 v5 Out $end
$var wire 1 e; notS $end
$var wire 1 f; pdt1 $end
$var wire 1 g; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 e; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 5; in2 $end
$var wire 1 f; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 e; in1 $end
$var wire 1 u! in2 $end
$var wire 1 g; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 f; in1 $end
$var wire 1 g; in2 $end
$var wire 1 v5 out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 t! InA $end
$var wire 1 4; InB $end
$var wire 1 3! S $end
$var wire 1 u5 Out $end
$var wire 1 h; notS $end
$var wire 1 i; pdt1 $end
$var wire 1 j; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 h; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 4; in2 $end
$var wire 1 i; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 h; in1 $end
$var wire 1 t! in2 $end
$var wire 1 j; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 i; in1 $end
$var wire 1 j; in2 $end
$var wire 1 u5 out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 s! InA $end
$var wire 1 3; InB $end
$var wire 1 3! S $end
$var wire 1 t5 Out $end
$var wire 1 k; notS $end
$var wire 1 l; pdt1 $end
$var wire 1 m; pdt2 $end

$scope module not_inst $end
$var wire 1 3! in1 $end
$var wire 1 k; out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 3! in1 $end
$var wire 1 3; in2 $end
$var wire 1 l; out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 k; in1 $end
$var wire 1 s! in2 $end
$var wire 1 m; out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 l; in1 $end
$var wire 1 m; in2 $end
$var wire 1 t5 out $end
$upscope $end
$upscope $end
$upscope $end

$scope module adderex $end
$var parameter 4 n; OP_ROT_LEFT $end
$var parameter 4 o; OP_SFT_LEFT $end
$var parameter 4 p; OP_SFT_RT_A $end
$var parameter 4 q; OP_SFT_RT_L $end
$var parameter 4 r; OP_ADD $end
$var parameter 4 s; OP_OR $end
$var parameter 4 t; OP_XOR $end
$var parameter 4 u; OP_ANDN $end
$var parameter 4 v; OP_COMP $end
$var parameter 4 w; OP_ROT_RIGHT $end
$var parameter 4 x; OP_SUB $end
$var parameter 4 y; OP_BITR $end
$var parameter 4 z; OP_SLT $end
$var wire 1 w6 A [15] $end
$var wire 1 x6 A [14] $end
$var wire 1 y6 A [13] $end
$var wire 1 z6 A [12] $end
$var wire 1 {6 A [11] $end
$var wire 1 |6 A [10] $end
$var wire 1 }6 A [9] $end
$var wire 1 ~6 A [8] $end
$var wire 1 !7 A [7] $end
$var wire 1 "7 A [6] $end
$var wire 1 #7 A [5] $end
$var wire 1 $7 A [4] $end
$var wire 1 %7 A [3] $end
$var wire 1 &7 A [2] $end
$var wire 1 '7 A [1] $end
$var wire 1 (7 A [0] $end
$var wire 1 5" B [15] $end
$var wire 1 6" B [14] $end
$var wire 1 7" B [13] $end
$var wire 1 8" B [12] $end
$var wire 1 9" B [11] $end
$var wire 1 :" B [10] $end
$var wire 1 ;" B [9] $end
$var wire 1 <" B [8] $end
$var wire 1 =" B [7] $end
$var wire 1 >" B [6] $end
$var wire 1 ?" B [5] $end
$var wire 1 @" B [4] $end
$var wire 1 A" B [3] $end
$var wire 1 B" B [2] $end
$var wire 1 C" B [1] $end
$var wire 1 D" B [0] $end
$var wire 1 {; Cin $end
$var wire 1 |; Op [3] $end
$var wire 1 }; Op [2] $end
$var wire 1 ~; Op [1] $end
$var wire 1 !< Op [0] $end
$var wire 1 "< invA $end
$var wire 1 #< invB $end
$var wire 1 $< sign $end
$var wire 1 E" Out [15] $end
$var wire 1 F" Out [14] $end
$var wire 1 G" Out [13] $end
$var wire 1 H" Out [12] $end
$var wire 1 I" Out [11] $end
$var wire 1 J" Out [10] $end
$var wire 1 K" Out [9] $end
$var wire 1 L" Out [8] $end
$var wire 1 M" Out [7] $end
$var wire 1 N" Out [6] $end
$var wire 1 O" Out [5] $end
$var wire 1 P" Out [4] $end
$var wire 1 Q" Out [3] $end
$var wire 1 R" Out [2] $end
$var wire 1 S" Out [1] $end
$var wire 1 T" Out [0] $end
$var wire 1 %< Ofl $end
$var wire 1 &< Z $end
$var wire 1 '< Cout $end
$var wire 1 (< AltB $end
$var wire 1 )< AgtB $end
$var wire 1 *< AeqB $end
$var wire 1 +< A_int [15] $end
$var wire 1 ,< A_int [14] $end
$var wire 1 -< A_int [13] $end
$var wire 1 .< A_int [12] $end
$var wire 1 /< A_int [11] $end
$var wire 1 0< A_int [10] $end
$var wire 1 1< A_int [9] $end
$var wire 1 2< A_int [8] $end
$var wire 1 3< A_int [7] $end
$var wire 1 4< A_int [6] $end
$var wire 1 5< A_int [5] $end
$var wire 1 6< A_int [4] $end
$var wire 1 7< A_int [3] $end
$var wire 1 8< A_int [2] $end
$var wire 1 9< A_int [1] $end
$var wire 1 :< A_int [0] $end
$var wire 1 ;< B_int [15] $end
$var wire 1 << B_int [14] $end
$var wire 1 =< B_int [13] $end
$var wire 1 >< B_int [12] $end
$var wire 1 ?< B_int [11] $end
$var wire 1 @< B_int [10] $end
$var wire 1 A< B_int [9] $end
$var wire 1 B< B_int [8] $end
$var wire 1 C< B_int [7] $end
$var wire 1 D< B_int [6] $end
$var wire 1 E< B_int [5] $end
$var wire 1 F< B_int [4] $end
$var wire 1 G< B_int [3] $end
$var wire 1 H< B_int [2] $end
$var wire 1 I< B_int [1] $end
$var wire 1 J< B_int [0] $end
$var wire 1 K< A_int_i [15] $end
$var wire 1 L< A_int_i [14] $end
$var wire 1 M< A_int_i [13] $end
$var wire 1 N< A_int_i [12] $end
$var wire 1 O< A_int_i [11] $end
$var wire 1 P< A_int_i [10] $end
$var wire 1 Q< A_int_i [9] $end
$var wire 1 R< A_int_i [8] $end
$var wire 1 S< A_int_i [7] $end
$var wire 1 T< A_int_i [6] $end
$var wire 1 U< A_int_i [5] $end
$var wire 1 V< A_int_i [4] $end
$var wire 1 W< A_int_i [3] $end
$var wire 1 X< A_int_i [2] $end
$var wire 1 Y< A_int_i [1] $end
$var wire 1 Z< A_int_i [0] $end
$var wire 1 [< notA_int [15] $end
$var wire 1 \< notA_int [14] $end
$var wire 1 ]< notA_int [13] $end
$var wire 1 ^< notA_int [12] $end
$var wire 1 _< notA_int [11] $end
$var wire 1 `< notA_int [10] $end
$var wire 1 a< notA_int [9] $end
$var wire 1 b< notA_int [8] $end
$var wire 1 c< notA_int [7] $end
$var wire 1 d< notA_int [6] $end
$var wire 1 e< notA_int [5] $end
$var wire 1 f< notA_int [4] $end
$var wire 1 g< notA_int [3] $end
$var wire 1 h< notA_int [2] $end
$var wire 1 i< notA_int [1] $end
$var wire 1 j< notA_int [0] $end
$var wire 1 k< Cin_i $end
$var wire 1 l< cla_Sout [15] $end
$var wire 1 m< cla_Sout [14] $end
$var wire 1 n< cla_Sout [13] $end
$var wire 1 o< cla_Sout [12] $end
$var wire 1 p< cla_Sout [11] $end
$var wire 1 q< cla_Sout [10] $end
$var wire 1 r< cla_Sout [9] $end
$var wire 1 s< cla_Sout [8] $end
$var wire 1 t< cla_Sout [7] $end
$var wire 1 u< cla_Sout [6] $end
$var wire 1 v< cla_Sout [5] $end
$var wire 1 w< cla_Sout [4] $end
$var wire 1 x< cla_Sout [3] $end
$var wire 1 y< cla_Sout [2] $end
$var wire 1 z< cla_Sout [1] $end
$var wire 1 {< cla_Sout [0] $end
$var wire 1 |< cla_Cout $end
$var wire 1 }< Out_barrel_shifter [15] $end
$var wire 1 ~< Out_barrel_shifter [14] $end
$var wire 1 != Out_barrel_shifter [13] $end
$var wire 1 "= Out_barrel_shifter [12] $end
$var wire 1 #= Out_barrel_shifter [11] $end
$var wire 1 $= Out_barrel_shifter [10] $end
$var wire 1 %= Out_barrel_shifter [9] $end
$var wire 1 &= Out_barrel_shifter [8] $end
$var wire 1 '= Out_barrel_shifter [7] $end
$var wire 1 (= Out_barrel_shifter [6] $end
$var wire 1 )= Out_barrel_shifter [5] $end
$var wire 1 *= Out_barrel_shifter [4] $end
$var wire 1 += Out_barrel_shifter [3] $end
$var wire 1 ,= Out_barrel_shifter [2] $end
$var wire 1 -= Out_barrel_shifter [1] $end
$var wire 1 .= Out_barrel_shifter [0] $end
$var wire 1 /= Out_or [15] $end
$var wire 1 0= Out_or [14] $end
$var wire 1 1= Out_or [13] $end
$var wire 1 2= Out_or [12] $end
$var wire 1 3= Out_or [11] $end
$var wire 1 4= Out_or [10] $end
$var wire 1 5= Out_or [9] $end
$var wire 1 6= Out_or [8] $end
$var wire 1 7= Out_or [7] $end
$var wire 1 8= Out_or [6] $end
$var wire 1 9= Out_or [5] $end
$var wire 1 := Out_or [4] $end
$var wire 1 ;= Out_or [3] $end
$var wire 1 <= Out_or [2] $end
$var wire 1 == Out_or [1] $end
$var wire 1 >= Out_or [0] $end
$var wire 1 ?= Out_xor [15] $end
$var wire 1 @= Out_xor [14] $end
$var wire 1 A= Out_xor [13] $end
$var wire 1 B= Out_xor [12] $end
$var wire 1 C= Out_xor [11] $end
$var wire 1 D= Out_xor [10] $end
$var wire 1 E= Out_xor [9] $end
$var wire 1 F= Out_xor [8] $end
$var wire 1 G= Out_xor [7] $end
$var wire 1 H= Out_xor [6] $end
$var wire 1 I= Out_xor [5] $end
$var wire 1 J= Out_xor [4] $end
$var wire 1 K= Out_xor [3] $end
$var wire 1 L= Out_xor [2] $end
$var wire 1 M= Out_xor [1] $end
$var wire 1 N= Out_xor [0] $end
$var wire 1 O= Out_andn [15] $end
$var wire 1 P= Out_andn [14] $end
$var wire 1 Q= Out_andn [13] $end
$var wire 1 R= Out_andn [12] $end
$var wire 1 S= Out_andn [11] $end
$var wire 1 T= Out_andn [10] $end
$var wire 1 U= Out_andn [9] $end
$var wire 1 V= Out_andn [8] $end
$var wire 1 W= Out_andn [7] $end
$var wire 1 X= Out_andn [6] $end
$var wire 1 Y= Out_andn [5] $end
$var wire 1 Z= Out_andn [4] $end
$var wire 1 [= Out_andn [3] $end
$var wire 1 \= Out_andn [2] $end
$var wire 1 ]= Out_andn [1] $end
$var wire 1 ^= Out_andn [0] $end
$var wire 1 _= Ofl_det $end

$scope module cla_16_inst $end
$var wire 1 K< in_1 [15] $end
$var wire 1 L< in_1 [14] $end
$var wire 1 M< in_1 [13] $end
$var wire 1 N< in_1 [12] $end
$var wire 1 O< in_1 [11] $end
$var wire 1 P< in_1 [10] $end
$var wire 1 Q< in_1 [9] $end
$var wire 1 R< in_1 [8] $end
$var wire 1 S< in_1 [7] $end
$var wire 1 T< in_1 [6] $end
$var wire 1 U< in_1 [5] $end
$var wire 1 V< in_1 [4] $end
$var wire 1 W< in_1 [3] $end
$var wire 1 X< in_1 [2] $end
$var wire 1 Y< in_1 [1] $end
$var wire 1 Z< in_1 [0] $end
$var wire 1 ;< in_2 [15] $end
$var wire 1 << in_2 [14] $end
$var wire 1 =< in_2 [13] $end
$var wire 1 >< in_2 [12] $end
$var wire 1 ?< in_2 [11] $end
$var wire 1 @< in_2 [10] $end
$var wire 1 A< in_2 [9] $end
$var wire 1 B< in_2 [8] $end
$var wire 1 C< in_2 [7] $end
$var wire 1 D< in_2 [6] $end
$var wire 1 E< in_2 [5] $end
$var wire 1 F< in_2 [4] $end
$var wire 1 G< in_2 [3] $end
$var wire 1 H< in_2 [2] $end
$var wire 1 I< in_2 [1] $end
$var wire 1 J< in_2 [0] $end
$var wire 1 k< Cin $end
$var wire 1 l< Sum [15] $end
$var wire 1 m< Sum [14] $end
$var wire 1 n< Sum [13] $end
$var wire 1 o< Sum [12] $end
$var wire 1 p< Sum [11] $end
$var wire 1 q< Sum [10] $end
$var wire 1 r< Sum [9] $end
$var wire 1 s< Sum [8] $end
$var wire 1 t< Sum [7] $end
$var wire 1 u< Sum [6] $end
$var wire 1 v< Sum [5] $end
$var wire 1 w< Sum [4] $end
$var wire 1 x< Sum [3] $end
$var wire 1 y< Sum [2] $end
$var wire 1 z< Sum [1] $end
$var wire 1 {< Sum [0] $end
$var wire 1 |< Cout $end
$var wire 1 `= sum_0_3_bits [3] $end
$var wire 1 a= sum_0_3_bits [2] $end
$var wire 1 b= sum_0_3_bits [1] $end
$var wire 1 c= sum_0_3_bits [0] $end
$var wire 1 d= carry_1 $end
$var wire 1 e= sum_4_7_bits [3] $end
$var wire 1 f= sum_4_7_bits [2] $end
$var wire 1 g= sum_4_7_bits [1] $end
$var wire 1 h= sum_4_7_bits [0] $end
$var wire 1 i= carry_2 $end
$var wire 1 j= sum_8_11_bits [3] $end
$var wire 1 k= sum_8_11_bits [2] $end
$var wire 1 l= sum_8_11_bits [1] $end
$var wire 1 m= sum_8_11_bits [0] $end
$var wire 1 n= carry_3 $end
$var wire 1 o= sum_12_15_bits [3] $end
$var wire 1 p= sum_12_15_bits [2] $end
$var wire 1 q= sum_12_15_bits [1] $end
$var wire 1 r= sum_12_15_bits [0] $end
$var wire 1 s= carry_4 $end

$scope module cla_0_3_bits $end
$var wire 1 W< i_add1 [3] $end
$var wire 1 X< i_add1 [2] $end
$var wire 1 Y< i_add1 [1] $end
$var wire 1 Z< i_add1 [0] $end
$var wire 1 G< i_add2 [3] $end
$var wire 1 H< i_add2 [2] $end
$var wire 1 I< i_add2 [1] $end
$var wire 1 J< i_add2 [0] $end
$var wire 1 k< Cin_4_bit $end
$var wire 1 `= Sum_4_bit [3] $end
$var wire 1 a= Sum_4_bit [2] $end
$var wire 1 b= Sum_4_bit [1] $end
$var wire 1 c= Sum_4_bit [0] $end
$var wire 1 d= Cout_4_bit $end
$var wire 1 t= w_C [4] $end
$var wire 1 u= w_C [3] $end
$var wire 1 v= w_C [2] $end
$var wire 1 w= w_C [1] $end
$var wire 1 x= w_C [0] $end
$var wire 1 y= w_G [3] $end
$var wire 1 z= w_G [2] $end
$var wire 1 {= w_G [1] $end
$var wire 1 |= w_G [0] $end
$var wire 1 }= w_P [3] $end
$var wire 1 ~= w_P [2] $end
$var wire 1 !> w_P [1] $end
$var wire 1 "> w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 Z< i_bit1 $end
$var wire 1 J< i_bit2 $end
$var wire 1 x= i_carry $end
$var wire 1 c= o_sum $end
$var wire 1 #> o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 Y< i_bit1 $end
$var wire 1 I< i_bit2 $end
$var wire 1 w= i_carry $end
$var wire 1 b= o_sum $end
$var wire 1 $> o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 X< i_bit1 $end
$var wire 1 H< i_bit2 $end
$var wire 1 v= i_carry $end
$var wire 1 a= o_sum $end
$var wire 1 %> o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 W< i_bit1 $end
$var wire 1 G< i_bit2 $end
$var wire 1 u= i_carry $end
$var wire 1 `= o_sum $end
$var wire 1 &> o_carry $end
$upscope $end
$upscope $end

$scope module cla_4_7_bits $end
$var wire 1 S< i_add1 [3] $end
$var wire 1 T< i_add1 [2] $end
$var wire 1 U< i_add1 [1] $end
$var wire 1 V< i_add1 [0] $end
$var wire 1 C< i_add2 [3] $end
$var wire 1 D< i_add2 [2] $end
$var wire 1 E< i_add2 [1] $end
$var wire 1 F< i_add2 [0] $end
$var wire 1 d= Cin_4_bit $end
$var wire 1 e= Sum_4_bit [3] $end
$var wire 1 f= Sum_4_bit [2] $end
$var wire 1 g= Sum_4_bit [1] $end
$var wire 1 h= Sum_4_bit [0] $end
$var wire 1 i= Cout_4_bit $end
$var wire 1 '> w_C [4] $end
$var wire 1 (> w_C [3] $end
$var wire 1 )> w_C [2] $end
$var wire 1 *> w_C [1] $end
$var wire 1 +> w_C [0] $end
$var wire 1 ,> w_G [3] $end
$var wire 1 -> w_G [2] $end
$var wire 1 .> w_G [1] $end
$var wire 1 /> w_G [0] $end
$var wire 1 0> w_P [3] $end
$var wire 1 1> w_P [2] $end
$var wire 1 2> w_P [1] $end
$var wire 1 3> w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 V< i_bit1 $end
$var wire 1 F< i_bit2 $end
$var wire 1 +> i_carry $end
$var wire 1 h= o_sum $end
$var wire 1 4> o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 U< i_bit1 $end
$var wire 1 E< i_bit2 $end
$var wire 1 *> i_carry $end
$var wire 1 g= o_sum $end
$var wire 1 5> o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 T< i_bit1 $end
$var wire 1 D< i_bit2 $end
$var wire 1 )> i_carry $end
$var wire 1 f= o_sum $end
$var wire 1 6> o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 S< i_bit1 $end
$var wire 1 C< i_bit2 $end
$var wire 1 (> i_carry $end
$var wire 1 e= o_sum $end
$var wire 1 7> o_carry $end
$upscope $end
$upscope $end

$scope module cla_8_11_bits $end
$var wire 1 O< i_add1 [3] $end
$var wire 1 P< i_add1 [2] $end
$var wire 1 Q< i_add1 [1] $end
$var wire 1 R< i_add1 [0] $end
$var wire 1 ?< i_add2 [3] $end
$var wire 1 @< i_add2 [2] $end
$var wire 1 A< i_add2 [1] $end
$var wire 1 B< i_add2 [0] $end
$var wire 1 i= Cin_4_bit $end
$var wire 1 j= Sum_4_bit [3] $end
$var wire 1 k= Sum_4_bit [2] $end
$var wire 1 l= Sum_4_bit [1] $end
$var wire 1 m= Sum_4_bit [0] $end
$var wire 1 n= Cout_4_bit $end
$var wire 1 8> w_C [4] $end
$var wire 1 9> w_C [3] $end
$var wire 1 :> w_C [2] $end
$var wire 1 ;> w_C [1] $end
$var wire 1 <> w_C [0] $end
$var wire 1 => w_G [3] $end
$var wire 1 >> w_G [2] $end
$var wire 1 ?> w_G [1] $end
$var wire 1 @> w_G [0] $end
$var wire 1 A> w_P [3] $end
$var wire 1 B> w_P [2] $end
$var wire 1 C> w_P [1] $end
$var wire 1 D> w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 R< i_bit1 $end
$var wire 1 B< i_bit2 $end
$var wire 1 <> i_carry $end
$var wire 1 m= o_sum $end
$var wire 1 E> o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 Q< i_bit1 $end
$var wire 1 A< i_bit2 $end
$var wire 1 ;> i_carry $end
$var wire 1 l= o_sum $end
$var wire 1 F> o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 P< i_bit1 $end
$var wire 1 @< i_bit2 $end
$var wire 1 :> i_carry $end
$var wire 1 k= o_sum $end
$var wire 1 G> o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 O< i_bit1 $end
$var wire 1 ?< i_bit2 $end
$var wire 1 9> i_carry $end
$var wire 1 j= o_sum $end
$var wire 1 H> o_carry $end
$upscope $end
$upscope $end

$scope module cla_12_15_bits $end
$var wire 1 K< i_add1 [3] $end
$var wire 1 L< i_add1 [2] $end
$var wire 1 M< i_add1 [1] $end
$var wire 1 N< i_add1 [0] $end
$var wire 1 ;< i_add2 [3] $end
$var wire 1 << i_add2 [2] $end
$var wire 1 =< i_add2 [1] $end
$var wire 1 >< i_add2 [0] $end
$var wire 1 n= Cin_4_bit $end
$var wire 1 o= Sum_4_bit [3] $end
$var wire 1 p= Sum_4_bit [2] $end
$var wire 1 q= Sum_4_bit [1] $end
$var wire 1 r= Sum_4_bit [0] $end
$var wire 1 |< Cout_4_bit $end
$var wire 1 I> w_C [4] $end
$var wire 1 J> w_C [3] $end
$var wire 1 K> w_C [2] $end
$var wire 1 L> w_C [1] $end
$var wire 1 M> w_C [0] $end
$var wire 1 N> w_G [3] $end
$var wire 1 O> w_G [2] $end
$var wire 1 P> w_G [1] $end
$var wire 1 Q> w_G [0] $end
$var wire 1 R> w_P [3] $end
$var wire 1 S> w_P [2] $end
$var wire 1 T> w_P [1] $end
$var wire 1 U> w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 N< i_bit1 $end
$var wire 1 >< i_bit2 $end
$var wire 1 M> i_carry $end
$var wire 1 r= o_sum $end
$var wire 1 V> o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 M< i_bit1 $end
$var wire 1 =< i_bit2 $end
$var wire 1 L> i_carry $end
$var wire 1 q= o_sum $end
$var wire 1 W> o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 L< i_bit1 $end
$var wire 1 << i_bit2 $end
$var wire 1 K> i_carry $end
$var wire 1 p= o_sum $end
$var wire 1 X> o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 K< i_bit1 $end
$var wire 1 ;< i_bit2 $end
$var wire 1 J> i_carry $end
$var wire 1 o= o_sum $end
$var wire 1 Y> o_carry $end
$upscope $end
$upscope $end
$upscope $end

$scope module barrel_shifter $end
$var wire 1 +< In [15] $end
$var wire 1 ,< In [14] $end
$var wire 1 -< In [13] $end
$var wire 1 .< In [12] $end
$var wire 1 /< In [11] $end
$var wire 1 0< In [10] $end
$var wire 1 1< In [9] $end
$var wire 1 2< In [8] $end
$var wire 1 3< In [7] $end
$var wire 1 4< In [6] $end
$var wire 1 5< In [5] $end
$var wire 1 6< In [4] $end
$var wire 1 7< In [3] $end
$var wire 1 8< In [2] $end
$var wire 1 9< In [1] $end
$var wire 1 :< In [0] $end
$var wire 1 G< Cnt [3] $end
$var wire 1 H< Cnt [2] $end
$var wire 1 I< Cnt [1] $end
$var wire 1 J< Cnt [0] $end
$var wire 1 |; Op [3] $end
$var wire 1 }; Op [2] $end
$var wire 1 ~; Op [1] $end
$var wire 1 !< Op [0] $end
$var reg 16 Z> Out [15:0] $end
$var wire 1 [> select $end
$var wire 1 \> append $end
$var reg 16 ]> stage_0 [15:0] $end
$var reg 16 ^> stage_1 [15:0] $end
$var reg 16 _> stage_2 [15:0] $end
$var wire 1 `> In_rev [15] $end
$var wire 1 a> In_rev [14] $end
$var wire 1 b> In_rev [13] $end
$var wire 1 c> In_rev [12] $end
$var wire 1 d> In_rev [11] $end
$var wire 1 e> In_rev [10] $end
$var wire 1 f> In_rev [9] $end
$var wire 1 g> In_rev [8] $end
$var wire 1 h> In_rev [7] $end
$var wire 1 i> In_rev [6] $end
$var wire 1 j> In_rev [5] $end
$var wire 1 k> In_rev [4] $end
$var wire 1 l> In_rev [3] $end
$var wire 1 m> In_rev [2] $end
$var wire 1 n> In_rev [1] $end
$var wire 1 o> In_rev [0] $end
$upscope $end

$scope module mag_inst $end
$var wire 1 +< A [15] $end
$var wire 1 ,< A [14] $end
$var wire 1 -< A [13] $end
$var wire 1 .< A [12] $end
$var wire 1 /< A [11] $end
$var wire 1 0< A [10] $end
$var wire 1 1< A [9] $end
$var wire 1 2< A [8] $end
$var wire 1 3< A [7] $end
$var wire 1 4< A [6] $end
$var wire 1 5< A [5] $end
$var wire 1 6< A [4] $end
$var wire 1 7< A [3] $end
$var wire 1 8< A [2] $end
$var wire 1 9< A [1] $end
$var wire 1 :< A [0] $end
$var wire 1 ;< B [15] $end
$var wire 1 << B [14] $end
$var wire 1 =< B [13] $end
$var wire 1 >< B [12] $end
$var wire 1 ?< B [11] $end
$var wire 1 @< B [10] $end
$var wire 1 A< B [9] $end
$var wire 1 B< B [8] $end
$var wire 1 C< B [7] $end
$var wire 1 D< B [6] $end
$var wire 1 E< B [5] $end
$var wire 1 F< B [4] $end
$var wire 1 G< B [3] $end
$var wire 1 H< B [2] $end
$var wire 1 I< B [1] $end
$var wire 1 J< B [0] $end
$var wire 1 )< AgtB $end
$var wire 1 *< AeqB $end
$var wire 1 (< AltB $end
$var wire 1 p> gt_vec [15] $end
$var wire 1 q> gt_vec [14] $end
$var wire 1 r> gt_vec [13] $end
$var wire 1 s> gt_vec [12] $end
$var wire 1 t> gt_vec [11] $end
$var wire 1 u> gt_vec [10] $end
$var wire 1 v> gt_vec [9] $end
$var wire 1 w> gt_vec [8] $end
$var wire 1 x> gt_vec [7] $end
$var wire 1 y> gt_vec [6] $end
$var wire 1 z> gt_vec [5] $end
$var wire 1 {> gt_vec [4] $end
$var wire 1 |> gt_vec [3] $end
$var wire 1 }> gt_vec [2] $end
$var wire 1 ~> gt_vec [1] $end
$var wire 1 !? gt_vec [0] $end
$var wire 1 "? eq_vec [15] $end
$var wire 1 #? eq_vec [14] $end
$var wire 1 $? eq_vec [13] $end
$var wire 1 %? eq_vec [12] $end
$var wire 1 &? eq_vec [11] $end
$var wire 1 '? eq_vec [10] $end
$var wire 1 (? eq_vec [9] $end
$var wire 1 )? eq_vec [8] $end
$var wire 1 *? eq_vec [7] $end
$var wire 1 +? eq_vec [6] $end
$var wire 1 ,? eq_vec [5] $end
$var wire 1 -? eq_vec [4] $end
$var wire 1 .? eq_vec [3] $end
$var wire 1 /? eq_vec [2] $end
$var wire 1 0? eq_vec [1] $end
$var wire 1 1? eq_vec [0] $end
$var wire 1 2? lt_vec [15] $end
$var wire 1 3? lt_vec [14] $end
$var wire 1 4? lt_vec [13] $end
$var wire 1 5? lt_vec [12] $end
$var wire 1 6? lt_vec [11] $end
$var wire 1 7? lt_vec [10] $end
$var wire 1 8? lt_vec [9] $end
$var wire 1 9? lt_vec [8] $end
$var wire 1 :? lt_vec [7] $end
$var wire 1 ;? lt_vec [6] $end
$var wire 1 <? lt_vec [5] $end
$var wire 1 =? lt_vec [4] $end
$var wire 1 >? lt_vec [3] $end
$var wire 1 ?? lt_vec [2] $end
$var wire 1 @? lt_vec [1] $end
$var wire 1 A? lt_vec [0] $end

$scope module iCMP[15] $end
$var wire 1 +< A $end
$var wire 1 ;< B $end
$var wire 1 q> AgtBi $end
$var wire 1 #? AeqBi $end
$var wire 1 3? AltBi $end
$var wire 1 p> AgtBo $end
$var wire 1 "? AeqBo $end
$var wire 1 2? AltBo $end
$upscope $end

$scope module iCMP[14] $end
$var wire 1 ,< A $end
$var wire 1 << B $end
$var wire 1 r> AgtBi $end
$var wire 1 $? AeqBi $end
$var wire 1 4? AltBi $end
$var wire 1 q> AgtBo $end
$var wire 1 #? AeqBo $end
$var wire 1 3? AltBo $end
$upscope $end

$scope module iCMP[13] $end
$var wire 1 -< A $end
$var wire 1 =< B $end
$var wire 1 s> AgtBi $end
$var wire 1 %? AeqBi $end
$var wire 1 5? AltBi $end
$var wire 1 r> AgtBo $end
$var wire 1 $? AeqBo $end
$var wire 1 4? AltBo $end
$upscope $end

$scope module iCMP[12] $end
$var wire 1 .< A $end
$var wire 1 >< B $end
$var wire 1 t> AgtBi $end
$var wire 1 &? AeqBi $end
$var wire 1 6? AltBi $end
$var wire 1 s> AgtBo $end
$var wire 1 %? AeqBo $end
$var wire 1 5? AltBo $end
$upscope $end

$scope module iCMP[11] $end
$var wire 1 /< A $end
$var wire 1 ?< B $end
$var wire 1 u> AgtBi $end
$var wire 1 '? AeqBi $end
$var wire 1 7? AltBi $end
$var wire 1 t> AgtBo $end
$var wire 1 &? AeqBo $end
$var wire 1 6? AltBo $end
$upscope $end

$scope module iCMP[10] $end
$var wire 1 0< A $end
$var wire 1 @< B $end
$var wire 1 v> AgtBi $end
$var wire 1 (? AeqBi $end
$var wire 1 8? AltBi $end
$var wire 1 u> AgtBo $end
$var wire 1 '? AeqBo $end
$var wire 1 7? AltBo $end
$upscope $end

$scope module iCMP[9] $end
$var wire 1 1< A $end
$var wire 1 A< B $end
$var wire 1 w> AgtBi $end
$var wire 1 )? AeqBi $end
$var wire 1 9? AltBi $end
$var wire 1 v> AgtBo $end
$var wire 1 (? AeqBo $end
$var wire 1 8? AltBo $end
$upscope $end

$scope module iCMP[8] $end
$var wire 1 2< A $end
$var wire 1 B< B $end
$var wire 1 x> AgtBi $end
$var wire 1 *? AeqBi $end
$var wire 1 :? AltBi $end
$var wire 1 w> AgtBo $end
$var wire 1 )? AeqBo $end
$var wire 1 9? AltBo $end
$upscope $end

$scope module iCMP[7] $end
$var wire 1 3< A $end
$var wire 1 C< B $end
$var wire 1 y> AgtBi $end
$var wire 1 +? AeqBi $end
$var wire 1 ;? AltBi $end
$var wire 1 x> AgtBo $end
$var wire 1 *? AeqBo $end
$var wire 1 :? AltBo $end
$upscope $end

$scope module iCMP[6] $end
$var wire 1 4< A $end
$var wire 1 D< B $end
$var wire 1 z> AgtBi $end
$var wire 1 ,? AeqBi $end
$var wire 1 <? AltBi $end
$var wire 1 y> AgtBo $end
$var wire 1 +? AeqBo $end
$var wire 1 ;? AltBo $end
$upscope $end

$scope module iCMP[5] $end
$var wire 1 5< A $end
$var wire 1 E< B $end
$var wire 1 {> AgtBi $end
$var wire 1 -? AeqBi $end
$var wire 1 =? AltBi $end
$var wire 1 z> AgtBo $end
$var wire 1 ,? AeqBo $end
$var wire 1 <? AltBo $end
$upscope $end

$scope module iCMP[4] $end
$var wire 1 6< A $end
$var wire 1 F< B $end
$var wire 1 |> AgtBi $end
$var wire 1 .? AeqBi $end
$var wire 1 >? AltBi $end
$var wire 1 {> AgtBo $end
$var wire 1 -? AeqBo $end
$var wire 1 =? AltBo $end
$upscope $end

$scope module iCMP[3] $end
$var wire 1 7< A $end
$var wire 1 G< B $end
$var wire 1 }> AgtBi $end
$var wire 1 /? AeqBi $end
$var wire 1 ?? AltBi $end
$var wire 1 |> AgtBo $end
$var wire 1 .? AeqBo $end
$var wire 1 >? AltBo $end
$upscope $end

$scope module iCMP[2] $end
$var wire 1 8< A $end
$var wire 1 H< B $end
$var wire 1 ~> AgtBi $end
$var wire 1 0? AeqBi $end
$var wire 1 @? AltBi $end
$var wire 1 }> AgtBo $end
$var wire 1 /? AeqBo $end
$var wire 1 ?? AltBo $end
$upscope $end

$scope module iCMP[1] $end
$var wire 1 9< A $end
$var wire 1 I< B $end
$var wire 1 !? AgtBi $end
$var wire 1 1? AeqBi $end
$var wire 1 A? AltBi $end
$var wire 1 ~> AgtBo $end
$var wire 1 0? AeqBo $end
$var wire 1 @? AltBo $end
$upscope $end

$scope module iCMP[0] $end
$var wire 1 :< A $end
$var wire 1 J< B $end
$var wire 1 B? AgtBi $end
$var wire 1 C? AeqBi $end
$var wire 1 D? AltBi $end
$var wire 1 !? AgtBo $end
$var wire 1 1? AeqBo $end
$var wire 1 A? AltBo $end
$upscope $end
$upscope $end
$upscope $end

$scope module aluinst $end
$var parameter 4 E? OP_ROT_LEFT $end
$var parameter 4 F? OP_SFT_LEFT $end
$var parameter 4 G? OP_SFT_RT_A $end
$var parameter 4 H? OP_SFT_RT_L $end
$var parameter 4 I? OP_ADD $end
$var parameter 4 J? OP_OR $end
$var parameter 4 K? OP_XOR $end
$var parameter 4 L? OP_ANDN $end
$var parameter 4 M? OP_COMP $end
$var parameter 4 N? OP_ROT_RIGHT $end
$var parameter 4 O? OP_SUB $end
$var parameter 4 P? OP_BITR $end
$var parameter 4 Q? OP_SLT $end
$var wire 1 u" A [15] $end
$var wire 1 v" A [14] $end
$var wire 1 w" A [13] $end
$var wire 1 x" A [12] $end
$var wire 1 y" A [11] $end
$var wire 1 z" A [10] $end
$var wire 1 {" A [9] $end
$var wire 1 |" A [8] $end
$var wire 1 }" A [7] $end
$var wire 1 ~" A [6] $end
$var wire 1 !# A [5] $end
$var wire 1 "# A [4] $end
$var wire 1 ## A [3] $end
$var wire 1 $# A [2] $end
$var wire 1 %# A [1] $end
$var wire 1 &# A [0] $end
$var wire 1 W6 B [15] $end
$var wire 1 X6 B [14] $end
$var wire 1 Y6 B [13] $end
$var wire 1 Z6 B [12] $end
$var wire 1 [6 B [11] $end
$var wire 1 \6 B [10] $end
$var wire 1 ]6 B [9] $end
$var wire 1 ^6 B [8] $end
$var wire 1 _6 B [7] $end
$var wire 1 `6 B [6] $end
$var wire 1 a6 B [5] $end
$var wire 1 b6 B [4] $end
$var wire 1 c6 B [3] $end
$var wire 1 d6 B [2] $end
$var wire 1 e6 B [1] $end
$var wire 1 f6 B [0] $end
$var wire 1 q5 Cin $end
$var wire 1 ?! Op [3] $end
$var wire 1 @! Op [2] $end
$var wire 1 A! Op [1] $end
$var wire 1 B! Op [0] $end
$var wire 1 q5 invA $end
$var wire 1 R? invB $end
$var wire 1 q5 sign $end
$var wire 1 g6 Out [15] $end
$var wire 1 h6 Out [14] $end
$var wire 1 i6 Out [13] $end
$var wire 1 j6 Out [12] $end
$var wire 1 k6 Out [11] $end
$var wire 1 l6 Out [10] $end
$var wire 1 m6 Out [9] $end
$var wire 1 n6 Out [8] $end
$var wire 1 o6 Out [7] $end
$var wire 1 p6 Out [6] $end
$var wire 1 q6 Out [5] $end
$var wire 1 r6 Out [4] $end
$var wire 1 s6 Out [3] $end
$var wire 1 t6 Out [2] $end
$var wire 1 u6 Out [1] $end
$var wire 1 v6 Out [0] $end
$var wire 1 S? Ofl $end
$var wire 1 T? Z $end
$var wire 1 8! Cout $end
$var wire 1 U? AltB $end
$var wire 1 V? AgtB $end
$var wire 1 W? AeqB $end
$var wire 1 X? A_int [15] $end
$var wire 1 Y? A_int [14] $end
$var wire 1 Z? A_int [13] $end
$var wire 1 [? A_int [12] $end
$var wire 1 \? A_int [11] $end
$var wire 1 ]? A_int [10] $end
$var wire 1 ^? A_int [9] $end
$var wire 1 _? A_int [8] $end
$var wire 1 `? A_int [7] $end
$var wire 1 a? A_int [6] $end
$var wire 1 b? A_int [5] $end
$var wire 1 c? A_int [4] $end
$var wire 1 d? A_int [3] $end
$var wire 1 e? A_int [2] $end
$var wire 1 f? A_int [1] $end
$var wire 1 g? A_int [0] $end
$var wire 1 h? B_int [15] $end
$var wire 1 i? B_int [14] $end
$var wire 1 j? B_int [13] $end
$var wire 1 k? B_int [12] $end
$var wire 1 l? B_int [11] $end
$var wire 1 m? B_int [10] $end
$var wire 1 n? B_int [9] $end
$var wire 1 o? B_int [8] $end
$var wire 1 p? B_int [7] $end
$var wire 1 q? B_int [6] $end
$var wire 1 r? B_int [5] $end
$var wire 1 s? B_int [4] $end
$var wire 1 t? B_int [3] $end
$var wire 1 u? B_int [2] $end
$var wire 1 v? B_int [1] $end
$var wire 1 w? B_int [0] $end
$var wire 1 x? A_int_i [15] $end
$var wire 1 y? A_int_i [14] $end
$var wire 1 z? A_int_i [13] $end
$var wire 1 {? A_int_i [12] $end
$var wire 1 |? A_int_i [11] $end
$var wire 1 }? A_int_i [10] $end
$var wire 1 ~? A_int_i [9] $end
$var wire 1 !@ A_int_i [8] $end
$var wire 1 "@ A_int_i [7] $end
$var wire 1 #@ A_int_i [6] $end
$var wire 1 $@ A_int_i [5] $end
$var wire 1 %@ A_int_i [4] $end
$var wire 1 &@ A_int_i [3] $end
$var wire 1 '@ A_int_i [2] $end
$var wire 1 (@ A_int_i [1] $end
$var wire 1 )@ A_int_i [0] $end
$var wire 1 *@ notA_int [15] $end
$var wire 1 +@ notA_int [14] $end
$var wire 1 ,@ notA_int [13] $end
$var wire 1 -@ notA_int [12] $end
$var wire 1 .@ notA_int [11] $end
$var wire 1 /@ notA_int [10] $end
$var wire 1 0@ notA_int [9] $end
$var wire 1 1@ notA_int [8] $end
$var wire 1 2@ notA_int [7] $end
$var wire 1 3@ notA_int [6] $end
$var wire 1 4@ notA_int [5] $end
$var wire 1 5@ notA_int [4] $end
$var wire 1 6@ notA_int [3] $end
$var wire 1 7@ notA_int [2] $end
$var wire 1 8@ notA_int [1] $end
$var wire 1 9@ notA_int [0] $end
$var wire 1 :@ Cin_i $end
$var wire 1 ;@ cla_Sout [15] $end
$var wire 1 <@ cla_Sout [14] $end
$var wire 1 =@ cla_Sout [13] $end
$var wire 1 >@ cla_Sout [12] $end
$var wire 1 ?@ cla_Sout [11] $end
$var wire 1 @@ cla_Sout [10] $end
$var wire 1 A@ cla_Sout [9] $end
$var wire 1 B@ cla_Sout [8] $end
$var wire 1 C@ cla_Sout [7] $end
$var wire 1 D@ cla_Sout [6] $end
$var wire 1 E@ cla_Sout [5] $end
$var wire 1 F@ cla_Sout [4] $end
$var wire 1 G@ cla_Sout [3] $end
$var wire 1 H@ cla_Sout [2] $end
$var wire 1 I@ cla_Sout [1] $end
$var wire 1 J@ cla_Sout [0] $end
$var wire 1 K@ cla_Cout $end
$var wire 1 L@ Out_barrel_shifter [15] $end
$var wire 1 M@ Out_barrel_shifter [14] $end
$var wire 1 N@ Out_barrel_shifter [13] $end
$var wire 1 O@ Out_barrel_shifter [12] $end
$var wire 1 P@ Out_barrel_shifter [11] $end
$var wire 1 Q@ Out_barrel_shifter [10] $end
$var wire 1 R@ Out_barrel_shifter [9] $end
$var wire 1 S@ Out_barrel_shifter [8] $end
$var wire 1 T@ Out_barrel_shifter [7] $end
$var wire 1 U@ Out_barrel_shifter [6] $end
$var wire 1 V@ Out_barrel_shifter [5] $end
$var wire 1 W@ Out_barrel_shifter [4] $end
$var wire 1 X@ Out_barrel_shifter [3] $end
$var wire 1 Y@ Out_barrel_shifter [2] $end
$var wire 1 Z@ Out_barrel_shifter [1] $end
$var wire 1 [@ Out_barrel_shifter [0] $end
$var wire 1 \@ Out_or [15] $end
$var wire 1 ]@ Out_or [14] $end
$var wire 1 ^@ Out_or [13] $end
$var wire 1 _@ Out_or [12] $end
$var wire 1 `@ Out_or [11] $end
$var wire 1 a@ Out_or [10] $end
$var wire 1 b@ Out_or [9] $end
$var wire 1 c@ Out_or [8] $end
$var wire 1 d@ Out_or [7] $end
$var wire 1 e@ Out_or [6] $end
$var wire 1 f@ Out_or [5] $end
$var wire 1 g@ Out_or [4] $end
$var wire 1 h@ Out_or [3] $end
$var wire 1 i@ Out_or [2] $end
$var wire 1 j@ Out_or [1] $end
$var wire 1 k@ Out_or [0] $end
$var wire 1 l@ Out_xor [15] $end
$var wire 1 m@ Out_xor [14] $end
$var wire 1 n@ Out_xor [13] $end
$var wire 1 o@ Out_xor [12] $end
$var wire 1 p@ Out_xor [11] $end
$var wire 1 q@ Out_xor [10] $end
$var wire 1 r@ Out_xor [9] $end
$var wire 1 s@ Out_xor [8] $end
$var wire 1 t@ Out_xor [7] $end
$var wire 1 u@ Out_xor [6] $end
$var wire 1 v@ Out_xor [5] $end
$var wire 1 w@ Out_xor [4] $end
$var wire 1 x@ Out_xor [3] $end
$var wire 1 y@ Out_xor [2] $end
$var wire 1 z@ Out_xor [1] $end
$var wire 1 {@ Out_xor [0] $end
$var wire 1 |@ Out_andn [15] $end
$var wire 1 }@ Out_andn [14] $end
$var wire 1 ~@ Out_andn [13] $end
$var wire 1 !A Out_andn [12] $end
$var wire 1 "A Out_andn [11] $end
$var wire 1 #A Out_andn [10] $end
$var wire 1 $A Out_andn [9] $end
$var wire 1 %A Out_andn [8] $end
$var wire 1 &A Out_andn [7] $end
$var wire 1 'A Out_andn [6] $end
$var wire 1 (A Out_andn [5] $end
$var wire 1 )A Out_andn [4] $end
$var wire 1 *A Out_andn [3] $end
$var wire 1 +A Out_andn [2] $end
$var wire 1 ,A Out_andn [1] $end
$var wire 1 -A Out_andn [0] $end
$var wire 1 .A Ofl_det $end

$scope module cla_16_inst $end
$var wire 1 x? in_1 [15] $end
$var wire 1 y? in_1 [14] $end
$var wire 1 z? in_1 [13] $end
$var wire 1 {? in_1 [12] $end
$var wire 1 |? in_1 [11] $end
$var wire 1 }? in_1 [10] $end
$var wire 1 ~? in_1 [9] $end
$var wire 1 !@ in_1 [8] $end
$var wire 1 "@ in_1 [7] $end
$var wire 1 #@ in_1 [6] $end
$var wire 1 $@ in_1 [5] $end
$var wire 1 %@ in_1 [4] $end
$var wire 1 &@ in_1 [3] $end
$var wire 1 '@ in_1 [2] $end
$var wire 1 (@ in_1 [1] $end
$var wire 1 )@ in_1 [0] $end
$var wire 1 h? in_2 [15] $end
$var wire 1 i? in_2 [14] $end
$var wire 1 j? in_2 [13] $end
$var wire 1 k? in_2 [12] $end
$var wire 1 l? in_2 [11] $end
$var wire 1 m? in_2 [10] $end
$var wire 1 n? in_2 [9] $end
$var wire 1 o? in_2 [8] $end
$var wire 1 p? in_2 [7] $end
$var wire 1 q? in_2 [6] $end
$var wire 1 r? in_2 [5] $end
$var wire 1 s? in_2 [4] $end
$var wire 1 t? in_2 [3] $end
$var wire 1 u? in_2 [2] $end
$var wire 1 v? in_2 [1] $end
$var wire 1 w? in_2 [0] $end
$var wire 1 :@ Cin $end
$var wire 1 ;@ Sum [15] $end
$var wire 1 <@ Sum [14] $end
$var wire 1 =@ Sum [13] $end
$var wire 1 >@ Sum [12] $end
$var wire 1 ?@ Sum [11] $end
$var wire 1 @@ Sum [10] $end
$var wire 1 A@ Sum [9] $end
$var wire 1 B@ Sum [8] $end
$var wire 1 C@ Sum [7] $end
$var wire 1 D@ Sum [6] $end
$var wire 1 E@ Sum [5] $end
$var wire 1 F@ Sum [4] $end
$var wire 1 G@ Sum [3] $end
$var wire 1 H@ Sum [2] $end
$var wire 1 I@ Sum [1] $end
$var wire 1 J@ Sum [0] $end
$var wire 1 K@ Cout $end
$var wire 1 /A sum_0_3_bits [3] $end
$var wire 1 0A sum_0_3_bits [2] $end
$var wire 1 1A sum_0_3_bits [1] $end
$var wire 1 2A sum_0_3_bits [0] $end
$var wire 1 3A carry_1 $end
$var wire 1 4A sum_4_7_bits [3] $end
$var wire 1 5A sum_4_7_bits [2] $end
$var wire 1 6A sum_4_7_bits [1] $end
$var wire 1 7A sum_4_7_bits [0] $end
$var wire 1 8A carry_2 $end
$var wire 1 9A sum_8_11_bits [3] $end
$var wire 1 :A sum_8_11_bits [2] $end
$var wire 1 ;A sum_8_11_bits [1] $end
$var wire 1 <A sum_8_11_bits [0] $end
$var wire 1 =A carry_3 $end
$var wire 1 >A sum_12_15_bits [3] $end
$var wire 1 ?A sum_12_15_bits [2] $end
$var wire 1 @A sum_12_15_bits [1] $end
$var wire 1 AA sum_12_15_bits [0] $end
$var wire 1 BA carry_4 $end

$scope module cla_0_3_bits $end
$var wire 1 &@ i_add1 [3] $end
$var wire 1 '@ i_add1 [2] $end
$var wire 1 (@ i_add1 [1] $end
$var wire 1 )@ i_add1 [0] $end
$var wire 1 t? i_add2 [3] $end
$var wire 1 u? i_add2 [2] $end
$var wire 1 v? i_add2 [1] $end
$var wire 1 w? i_add2 [0] $end
$var wire 1 :@ Cin_4_bit $end
$var wire 1 /A Sum_4_bit [3] $end
$var wire 1 0A Sum_4_bit [2] $end
$var wire 1 1A Sum_4_bit [1] $end
$var wire 1 2A Sum_4_bit [0] $end
$var wire 1 3A Cout_4_bit $end
$var wire 1 CA w_C [4] $end
$var wire 1 DA w_C [3] $end
$var wire 1 EA w_C [2] $end
$var wire 1 FA w_C [1] $end
$var wire 1 GA w_C [0] $end
$var wire 1 HA w_G [3] $end
$var wire 1 IA w_G [2] $end
$var wire 1 JA w_G [1] $end
$var wire 1 KA w_G [0] $end
$var wire 1 LA w_P [3] $end
$var wire 1 MA w_P [2] $end
$var wire 1 NA w_P [1] $end
$var wire 1 OA w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 )@ i_bit1 $end
$var wire 1 w? i_bit2 $end
$var wire 1 GA i_carry $end
$var wire 1 2A o_sum $end
$var wire 1 PA o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 (@ i_bit1 $end
$var wire 1 v? i_bit2 $end
$var wire 1 FA i_carry $end
$var wire 1 1A o_sum $end
$var wire 1 QA o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 '@ i_bit1 $end
$var wire 1 u? i_bit2 $end
$var wire 1 EA i_carry $end
$var wire 1 0A o_sum $end
$var wire 1 RA o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 &@ i_bit1 $end
$var wire 1 t? i_bit2 $end
$var wire 1 DA i_carry $end
$var wire 1 /A o_sum $end
$var wire 1 SA o_carry $end
$upscope $end
$upscope $end

$scope module cla_4_7_bits $end
$var wire 1 "@ i_add1 [3] $end
$var wire 1 #@ i_add1 [2] $end
$var wire 1 $@ i_add1 [1] $end
$var wire 1 %@ i_add1 [0] $end
$var wire 1 p? i_add2 [3] $end
$var wire 1 q? i_add2 [2] $end
$var wire 1 r? i_add2 [1] $end
$var wire 1 s? i_add2 [0] $end
$var wire 1 3A Cin_4_bit $end
$var wire 1 4A Sum_4_bit [3] $end
$var wire 1 5A Sum_4_bit [2] $end
$var wire 1 6A Sum_4_bit [1] $end
$var wire 1 7A Sum_4_bit [0] $end
$var wire 1 8A Cout_4_bit $end
$var wire 1 TA w_C [4] $end
$var wire 1 UA w_C [3] $end
$var wire 1 VA w_C [2] $end
$var wire 1 WA w_C [1] $end
$var wire 1 XA w_C [0] $end
$var wire 1 YA w_G [3] $end
$var wire 1 ZA w_G [2] $end
$var wire 1 [A w_G [1] $end
$var wire 1 \A w_G [0] $end
$var wire 1 ]A w_P [3] $end
$var wire 1 ^A w_P [2] $end
$var wire 1 _A w_P [1] $end
$var wire 1 `A w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 %@ i_bit1 $end
$var wire 1 s? i_bit2 $end
$var wire 1 XA i_carry $end
$var wire 1 7A o_sum $end
$var wire 1 aA o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 $@ i_bit1 $end
$var wire 1 r? i_bit2 $end
$var wire 1 WA i_carry $end
$var wire 1 6A o_sum $end
$var wire 1 bA o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 #@ i_bit1 $end
$var wire 1 q? i_bit2 $end
$var wire 1 VA i_carry $end
$var wire 1 5A o_sum $end
$var wire 1 cA o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 "@ i_bit1 $end
$var wire 1 p? i_bit2 $end
$var wire 1 UA i_carry $end
$var wire 1 4A o_sum $end
$var wire 1 dA o_carry $end
$upscope $end
$upscope $end

$scope module cla_8_11_bits $end
$var wire 1 |? i_add1 [3] $end
$var wire 1 }? i_add1 [2] $end
$var wire 1 ~? i_add1 [1] $end
$var wire 1 !@ i_add1 [0] $end
$var wire 1 l? i_add2 [3] $end
$var wire 1 m? i_add2 [2] $end
$var wire 1 n? i_add2 [1] $end
$var wire 1 o? i_add2 [0] $end
$var wire 1 8A Cin_4_bit $end
$var wire 1 9A Sum_4_bit [3] $end
$var wire 1 :A Sum_4_bit [2] $end
$var wire 1 ;A Sum_4_bit [1] $end
$var wire 1 <A Sum_4_bit [0] $end
$var wire 1 =A Cout_4_bit $end
$var wire 1 eA w_C [4] $end
$var wire 1 fA w_C [3] $end
$var wire 1 gA w_C [2] $end
$var wire 1 hA w_C [1] $end
$var wire 1 iA w_C [0] $end
$var wire 1 jA w_G [3] $end
$var wire 1 kA w_G [2] $end
$var wire 1 lA w_G [1] $end
$var wire 1 mA w_G [0] $end
$var wire 1 nA w_P [3] $end
$var wire 1 oA w_P [2] $end
$var wire 1 pA w_P [1] $end
$var wire 1 qA w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 !@ i_bit1 $end
$var wire 1 o? i_bit2 $end
$var wire 1 iA i_carry $end
$var wire 1 <A o_sum $end
$var wire 1 rA o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 ~? i_bit1 $end
$var wire 1 n? i_bit2 $end
$var wire 1 hA i_carry $end
$var wire 1 ;A o_sum $end
$var wire 1 sA o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 }? i_bit1 $end
$var wire 1 m? i_bit2 $end
$var wire 1 gA i_carry $end
$var wire 1 :A o_sum $end
$var wire 1 tA o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 |? i_bit1 $end
$var wire 1 l? i_bit2 $end
$var wire 1 fA i_carry $end
$var wire 1 9A o_sum $end
$var wire 1 uA o_carry $end
$upscope $end
$upscope $end

$scope module cla_12_15_bits $end
$var wire 1 x? i_add1 [3] $end
$var wire 1 y? i_add1 [2] $end
$var wire 1 z? i_add1 [1] $end
$var wire 1 {? i_add1 [0] $end
$var wire 1 h? i_add2 [3] $end
$var wire 1 i? i_add2 [2] $end
$var wire 1 j? i_add2 [1] $end
$var wire 1 k? i_add2 [0] $end
$var wire 1 =A Cin_4_bit $end
$var wire 1 >A Sum_4_bit [3] $end
$var wire 1 ?A Sum_4_bit [2] $end
$var wire 1 @A Sum_4_bit [1] $end
$var wire 1 AA Sum_4_bit [0] $end
$var wire 1 K@ Cout_4_bit $end
$var wire 1 vA w_C [4] $end
$var wire 1 wA w_C [3] $end
$var wire 1 xA w_C [2] $end
$var wire 1 yA w_C [1] $end
$var wire 1 zA w_C [0] $end
$var wire 1 {A w_G [3] $end
$var wire 1 |A w_G [2] $end
$var wire 1 }A w_G [1] $end
$var wire 1 ~A w_G [0] $end
$var wire 1 !B w_P [3] $end
$var wire 1 "B w_P [2] $end
$var wire 1 #B w_P [1] $end
$var wire 1 $B w_P [0] $end

$scope module full_adder_bit_0 $end
$var wire 1 {? i_bit1 $end
$var wire 1 k? i_bit2 $end
$var wire 1 zA i_carry $end
$var wire 1 AA o_sum $end
$var wire 1 %B o_carry $end
$upscope $end

$scope module full_adder_bit_1 $end
$var wire 1 z? i_bit1 $end
$var wire 1 j? i_bit2 $end
$var wire 1 yA i_carry $end
$var wire 1 @A o_sum $end
$var wire 1 &B o_carry $end
$upscope $end

$scope module full_adder_bit_2 $end
$var wire 1 y? i_bit1 $end
$var wire 1 i? i_bit2 $end
$var wire 1 xA i_carry $end
$var wire 1 ?A o_sum $end
$var wire 1 'B o_carry $end
$upscope $end

$scope module full_adder_bit_3 $end
$var wire 1 x? i_bit1 $end
$var wire 1 h? i_bit2 $end
$var wire 1 wA i_carry $end
$var wire 1 >A o_sum $end
$var wire 1 (B o_carry $end
$upscope $end
$upscope $end
$upscope $end

$scope module barrel_shifter $end
$var wire 1 X? In [15] $end
$var wire 1 Y? In [14] $end
$var wire 1 Z? In [13] $end
$var wire 1 [? In [12] $end
$var wire 1 \? In [11] $end
$var wire 1 ]? In [10] $end
$var wire 1 ^? In [9] $end
$var wire 1 _? In [8] $end
$var wire 1 `? In [7] $end
$var wire 1 a? In [6] $end
$var wire 1 b? In [5] $end
$var wire 1 c? In [4] $end
$var wire 1 d? In [3] $end
$var wire 1 e? In [2] $end
$var wire 1 f? In [1] $end
$var wire 1 g? In [0] $end
$var wire 1 t? Cnt [3] $end
$var wire 1 u? Cnt [2] $end
$var wire 1 v? Cnt [1] $end
$var wire 1 w? Cnt [0] $end
$var wire 1 ?! Op [3] $end
$var wire 1 @! Op [2] $end
$var wire 1 A! Op [1] $end
$var wire 1 B! Op [0] $end
$var reg 16 )B Out [15:0] $end
$var wire 1 *B select $end
$var wire 1 +B append $end
$var reg 16 ,B stage_0 [15:0] $end
$var reg 16 -B stage_1 [15:0] $end
$var reg 16 .B stage_2 [15:0] $end
$var wire 1 /B In_rev [15] $end
$var wire 1 0B In_rev [14] $end
$var wire 1 1B In_rev [13] $end
$var wire 1 2B In_rev [12] $end
$var wire 1 3B In_rev [11] $end
$var wire 1 4B In_rev [10] $end
$var wire 1 5B In_rev [9] $end
$var wire 1 6B In_rev [8] $end
$var wire 1 7B In_rev [7] $end
$var wire 1 8B In_rev [6] $end
$var wire 1 9B In_rev [5] $end
$var wire 1 :B In_rev [4] $end
$var wire 1 ;B In_rev [3] $end
$var wire 1 <B In_rev [2] $end
$var wire 1 =B In_rev [1] $end
$var wire 1 >B In_rev [0] $end
$upscope $end

$scope module mag_inst $end
$var wire 1 X? A [15] $end
$var wire 1 Y? A [14] $end
$var wire 1 Z? A [13] $end
$var wire 1 [? A [12] $end
$var wire 1 \? A [11] $end
$var wire 1 ]? A [10] $end
$var wire 1 ^? A [9] $end
$var wire 1 _? A [8] $end
$var wire 1 `? A [7] $end
$var wire 1 a? A [6] $end
$var wire 1 b? A [5] $end
$var wire 1 c? A [4] $end
$var wire 1 d? A [3] $end
$var wire 1 e? A [2] $end
$var wire 1 f? A [1] $end
$var wire 1 g? A [0] $end
$var wire 1 h? B [15] $end
$var wire 1 i? B [14] $end
$var wire 1 j? B [13] $end
$var wire 1 k? B [12] $end
$var wire 1 l? B [11] $end
$var wire 1 m? B [10] $end
$var wire 1 n? B [9] $end
$var wire 1 o? B [8] $end
$var wire 1 p? B [7] $end
$var wire 1 q? B [6] $end
$var wire 1 r? B [5] $end
$var wire 1 s? B [4] $end
$var wire 1 t? B [3] $end
$var wire 1 u? B [2] $end
$var wire 1 v? B [1] $end
$var wire 1 w? B [0] $end
$var wire 1 V? AgtB $end
$var wire 1 W? AeqB $end
$var wire 1 U? AltB $end
$var wire 1 ?B gt_vec [15] $end
$var wire 1 @B gt_vec [14] $end
$var wire 1 AB gt_vec [13] $end
$var wire 1 BB gt_vec [12] $end
$var wire 1 CB gt_vec [11] $end
$var wire 1 DB gt_vec [10] $end
$var wire 1 EB gt_vec [9] $end
$var wire 1 FB gt_vec [8] $end
$var wire 1 GB gt_vec [7] $end
$var wire 1 HB gt_vec [6] $end
$var wire 1 IB gt_vec [5] $end
$var wire 1 JB gt_vec [4] $end
$var wire 1 KB gt_vec [3] $end
$var wire 1 LB gt_vec [2] $end
$var wire 1 MB gt_vec [1] $end
$var wire 1 NB gt_vec [0] $end
$var wire 1 OB eq_vec [15] $end
$var wire 1 PB eq_vec [14] $end
$var wire 1 QB eq_vec [13] $end
$var wire 1 RB eq_vec [12] $end
$var wire 1 SB eq_vec [11] $end
$var wire 1 TB eq_vec [10] $end
$var wire 1 UB eq_vec [9] $end
$var wire 1 VB eq_vec [8] $end
$var wire 1 WB eq_vec [7] $end
$var wire 1 XB eq_vec [6] $end
$var wire 1 YB eq_vec [5] $end
$var wire 1 ZB eq_vec [4] $end
$var wire 1 [B eq_vec [3] $end
$var wire 1 \B eq_vec [2] $end
$var wire 1 ]B eq_vec [1] $end
$var wire 1 ^B eq_vec [0] $end
$var wire 1 _B lt_vec [15] $end
$var wire 1 `B lt_vec [14] $end
$var wire 1 aB lt_vec [13] $end
$var wire 1 bB lt_vec [12] $end
$var wire 1 cB lt_vec [11] $end
$var wire 1 dB lt_vec [10] $end
$var wire 1 eB lt_vec [9] $end
$var wire 1 fB lt_vec [8] $end
$var wire 1 gB lt_vec [7] $end
$var wire 1 hB lt_vec [6] $end
$var wire 1 iB lt_vec [5] $end
$var wire 1 jB lt_vec [4] $end
$var wire 1 kB lt_vec [3] $end
$var wire 1 lB lt_vec [2] $end
$var wire 1 mB lt_vec [1] $end
$var wire 1 nB lt_vec [0] $end

$scope module iCMP[15] $end
$var wire 1 X? A $end
$var wire 1 h? B $end
$var wire 1 @B AgtBi $end
$var wire 1 PB AeqBi $end
$var wire 1 `B AltBi $end
$var wire 1 ?B AgtBo $end
$var wire 1 OB AeqBo $end
$var wire 1 _B AltBo $end
$upscope $end

$scope module iCMP[14] $end
$var wire 1 Y? A $end
$var wire 1 i? B $end
$var wire 1 AB AgtBi $end
$var wire 1 QB AeqBi $end
$var wire 1 aB AltBi $end
$var wire 1 @B AgtBo $end
$var wire 1 PB AeqBo $end
$var wire 1 `B AltBo $end
$upscope $end

$scope module iCMP[13] $end
$var wire 1 Z? A $end
$var wire 1 j? B $end
$var wire 1 BB AgtBi $end
$var wire 1 RB AeqBi $end
$var wire 1 bB AltBi $end
$var wire 1 AB AgtBo $end
$var wire 1 QB AeqBo $end
$var wire 1 aB AltBo $end
$upscope $end

$scope module iCMP[12] $end
$var wire 1 [? A $end
$var wire 1 k? B $end
$var wire 1 CB AgtBi $end
$var wire 1 SB AeqBi $end
$var wire 1 cB AltBi $end
$var wire 1 BB AgtBo $end
$var wire 1 RB AeqBo $end
$var wire 1 bB AltBo $end
$upscope $end

$scope module iCMP[11] $end
$var wire 1 \? A $end
$var wire 1 l? B $end
$var wire 1 DB AgtBi $end
$var wire 1 TB AeqBi $end
$var wire 1 dB AltBi $end
$var wire 1 CB AgtBo $end
$var wire 1 SB AeqBo $end
$var wire 1 cB AltBo $end
$upscope $end

$scope module iCMP[10] $end
$var wire 1 ]? A $end
$var wire 1 m? B $end
$var wire 1 EB AgtBi $end
$var wire 1 UB AeqBi $end
$var wire 1 eB AltBi $end
$var wire 1 DB AgtBo $end
$var wire 1 TB AeqBo $end
$var wire 1 dB AltBo $end
$upscope $end

$scope module iCMP[9] $end
$var wire 1 ^? A $end
$var wire 1 n? B $end
$var wire 1 FB AgtBi $end
$var wire 1 VB AeqBi $end
$var wire 1 fB AltBi $end
$var wire 1 EB AgtBo $end
$var wire 1 UB AeqBo $end
$var wire 1 eB AltBo $end
$upscope $end

$scope module iCMP[8] $end
$var wire 1 _? A $end
$var wire 1 o? B $end
$var wire 1 GB AgtBi $end
$var wire 1 WB AeqBi $end
$var wire 1 gB AltBi $end
$var wire 1 FB AgtBo $end
$var wire 1 VB AeqBo $end
$var wire 1 fB AltBo $end
$upscope $end

$scope module iCMP[7] $end
$var wire 1 `? A $end
$var wire 1 p? B $end
$var wire 1 HB AgtBi $end
$var wire 1 XB AeqBi $end
$var wire 1 hB AltBi $end
$var wire 1 GB AgtBo $end
$var wire 1 WB AeqBo $end
$var wire 1 gB AltBo $end
$upscope $end

$scope module iCMP[6] $end
$var wire 1 a? A $end
$var wire 1 q? B $end
$var wire 1 IB AgtBi $end
$var wire 1 YB AeqBi $end
$var wire 1 iB AltBi $end
$var wire 1 HB AgtBo $end
$var wire 1 XB AeqBo $end
$var wire 1 hB AltBo $end
$upscope $end

$scope module iCMP[5] $end
$var wire 1 b? A $end
$var wire 1 r? B $end
$var wire 1 JB AgtBi $end
$var wire 1 ZB AeqBi $end
$var wire 1 jB AltBi $end
$var wire 1 IB AgtBo $end
$var wire 1 YB AeqBo $end
$var wire 1 iB AltBo $end
$upscope $end

$scope module iCMP[4] $end
$var wire 1 c? A $end
$var wire 1 s? B $end
$var wire 1 KB AgtBi $end
$var wire 1 [B AeqBi $end
$var wire 1 kB AltBi $end
$var wire 1 JB AgtBo $end
$var wire 1 ZB AeqBo $end
$var wire 1 jB AltBo $end
$upscope $end

$scope module iCMP[3] $end
$var wire 1 d? A $end
$var wire 1 t? B $end
$var wire 1 LB AgtBi $end
$var wire 1 \B AeqBi $end
$var wire 1 lB AltBi $end
$var wire 1 KB AgtBo $end
$var wire 1 [B AeqBo $end
$var wire 1 kB AltBo $end
$upscope $end

$scope module iCMP[2] $end
$var wire 1 e? A $end
$var wire 1 u? B $end
$var wire 1 MB AgtBi $end
$var wire 1 ]B AeqBi $end
$var wire 1 mB AltBi $end
$var wire 1 LB AgtBo $end
$var wire 1 \B AeqBo $end
$var wire 1 lB AltBo $end
$upscope $end

$scope module iCMP[1] $end
$var wire 1 f? A $end
$var wire 1 v? B $end
$var wire 1 NB AgtBi $end
$var wire 1 ^B AeqBi $end
$var wire 1 nB AltBi $end
$var wire 1 MB AgtBo $end
$var wire 1 ]B AeqBo $end
$var wire 1 mB AltBo $end
$upscope $end

$scope module iCMP[0] $end
$var wire 1 g? A $end
$var wire 1 w? B $end
$var wire 1 oB AgtBi $end
$var wire 1 pB AeqBi $end
$var wire 1 qB AltBi $end
$var wire 1 NB AgtBo $end
$var wire 1 ^B AeqBo $end
$var wire 1 nB AltBo $end
$upscope $end
$upscope $end
$upscope $end

$scope module barrel_shifter_0 $end
$var wire 1 S! In [15] $end
$var wire 1 T! In [14] $end
$var wire 1 U! In [13] $end
$var wire 1 V! In [12] $end
$var wire 1 W! In [11] $end
$var wire 1 X! In [10] $end
$var wire 1 Y! In [9] $end
$var wire 1 Z! In [8] $end
$var wire 1 [! In [7] $end
$var wire 1 \! In [6] $end
$var wire 1 ]! In [5] $end
$var wire 1 ^! In [4] $end
$var wire 1 _! In [3] $end
$var wire 1 `! In [2] $end
$var wire 1 a! In [1] $end
$var wire 1 b! In [0] $end
$var wire 1 rB Cnt [3] $end
$var wire 1 sB Cnt [2] $end
$var wire 1 tB Cnt [1] $end
$var wire 1 uB Cnt [0] $end
$var wire 1 vB Op [3] $end
$var wire 1 wB Op [2] $end
$var wire 1 xB Op [1] $end
$var wire 1 yB Op [0] $end
$var reg 16 zB Out [15:0] $end
$var wire 1 {B select $end
$var wire 1 |B append $end
$var reg 16 }B stage_0 [15:0] $end
$var reg 16 ~B stage_1 [15:0] $end
$var reg 16 !C stage_2 [15:0] $end
$var wire 1 "C In_rev [15] $end
$var wire 1 #C In_rev [14] $end
$var wire 1 $C In_rev [13] $end
$var wire 1 %C In_rev [12] $end
$var wire 1 &C In_rev [11] $end
$var wire 1 'C In_rev [10] $end
$var wire 1 (C In_rev [9] $end
$var wire 1 )C In_rev [8] $end
$var wire 1 *C In_rev [7] $end
$var wire 1 +C In_rev [6] $end
$var wire 1 ,C In_rev [5] $end
$var wire 1 -C In_rev [4] $end
$var wire 1 .C In_rev [3] $end
$var wire 1 /C In_rev [2] $end
$var wire 1 0C In_rev [1] $end
$var wire 1 1C In_rev [0] $end
$upscope $end

$scope module barrel_shifter_1 $end
$var wire 1 2C In [15] $end
$var wire 1 3C In [14] $end
$var wire 1 4C In [13] $end
$var wire 1 5C In [12] $end
$var wire 1 6C In [11] $end
$var wire 1 H! In [10] $end
$var wire 1 I! In [9] $end
$var wire 1 J! In [8] $end
$var wire 1 K! In [7] $end
$var wire 1 L! In [6] $end
$var wire 1 M! In [5] $end
$var wire 1 N! In [4] $end
$var wire 1 O! In [3] $end
$var wire 1 P! In [2] $end
$var wire 1 Q! In [1] $end
$var wire 1 R! In [0] $end
$var wire 1 7C Cnt [3] $end
$var wire 1 8C Cnt [2] $end
$var wire 1 9C Cnt [1] $end
$var wire 1 :C Cnt [0] $end
$var wire 1 ;C Op [3] $end
$var wire 1 <C Op [2] $end
$var wire 1 =C Op [1] $end
$var wire 1 >C Op [0] $end
$var reg 16 ?C Out [15:0] $end
$var wire 1 @C select $end
$var wire 1 AC append $end
$var reg 16 BC stage_0 [15:0] $end
$var reg 16 CC stage_1 [15:0] $end
$var reg 16 DC stage_2 [15:0] $end
$var wire 1 EC In_rev [15] $end
$var wire 1 FC In_rev [14] $end
$var wire 1 GC In_rev [13] $end
$var wire 1 HC In_rev [12] $end
$var wire 1 IC In_rev [11] $end
$var wire 1 JC In_rev [10] $end
$var wire 1 KC In_rev [9] $end
$var wire 1 LC In_rev [8] $end
$var wire 1 MC In_rev [7] $end
$var wire 1 NC In_rev [6] $end
$var wire 1 OC In_rev [5] $end
$var wire 1 PC In_rev [4] $end
$var wire 1 QC In_rev [3] $end
$var wire 1 RC In_rev [2] $end
$var wire 1 SC In_rev [1] $end
$var wire 1 TC In_rev [0] $end
$upscope $end
$upscope $end

$scope module memory_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 '# read2Data [15] $end
$var wire 1 (# read2Data [14] $end
$var wire 1 )# read2Data [13] $end
$var wire 1 *# read2Data [12] $end
$var wire 1 +# read2Data [11] $end
$var wire 1 ,# read2Data [10] $end
$var wire 1 -# read2Data [9] $end
$var wire 1 .# read2Data [8] $end
$var wire 1 /# read2Data [7] $end
$var wire 1 0# read2Data [6] $end
$var wire 1 1# read2Data [5] $end
$var wire 1 2# read2Data [4] $end
$var wire 1 3# read2Data [3] $end
$var wire 1 4# read2Data [2] $end
$var wire 1 5# read2Data [1] $end
$var wire 1 6# read2Data [0] $end
$var wire 1 %" memaddr [15] $end
$var wire 1 &" memaddr [14] $end
$var wire 1 '" memaddr [13] $end
$var wire 1 (" memaddr [12] $end
$var wire 1 )" memaddr [11] $end
$var wire 1 *" memaddr [10] $end
$var wire 1 +" memaddr [9] $end
$var wire 1 ," memaddr [8] $end
$var wire 1 -" memaddr [7] $end
$var wire 1 ." memaddr [6] $end
$var wire 1 /" memaddr [5] $end
$var wire 1 0" memaddr [4] $end
$var wire 1 1" memaddr [3] $end
$var wire 1 2" memaddr [2] $end
$var wire 1 3" memaddr [1] $end
$var wire 1 4" memaddr [0] $end
$var wire 1 -! memwrite $end
$var wire 1 (! memread $end
$var wire 1 UC err $end
$var wire 1 e" mem_rd_data [15] $end
$var wire 1 f" mem_rd_data [14] $end
$var wire 1 g" mem_rd_data [13] $end
$var wire 1 h" mem_rd_data [12] $end
$var wire 1 i" mem_rd_data [11] $end
$var wire 1 j" mem_rd_data [10] $end
$var wire 1 k" mem_rd_data [9] $end
$var wire 1 l" mem_rd_data [8] $end
$var wire 1 m" mem_rd_data [7] $end
$var wire 1 n" mem_rd_data [6] $end
$var wire 1 o" mem_rd_data [5] $end
$var wire 1 p" mem_rd_data [4] $end
$var wire 1 q" mem_rd_data [3] $end
$var wire 1 r" mem_rd_data [2] $end
$var wire 1 s" mem_rd_data [1] $end
$var wire 1 t" mem_rd_data [0] $end

$scope module dMem $end
$var wire 1 e" data_out [15] $end
$var wire 1 f" data_out [14] $end
$var wire 1 g" data_out [13] $end
$var wire 1 h" data_out [12] $end
$var wire 1 i" data_out [11] $end
$var wire 1 j" data_out [10] $end
$var wire 1 k" data_out [9] $end
$var wire 1 l" data_out [8] $end
$var wire 1 m" data_out [7] $end
$var wire 1 n" data_out [6] $end
$var wire 1 o" data_out [5] $end
$var wire 1 p" data_out [4] $end
$var wire 1 q" data_out [3] $end
$var wire 1 r" data_out [2] $end
$var wire 1 s" data_out [1] $end
$var wire 1 t" data_out [0] $end
$var wire 1 '# data_in [15] $end
$var wire 1 (# data_in [14] $end
$var wire 1 )# data_in [13] $end
$var wire 1 *# data_in [12] $end
$var wire 1 +# data_in [11] $end
$var wire 1 ,# data_in [10] $end
$var wire 1 -# data_in [9] $end
$var wire 1 .# data_in [8] $end
$var wire 1 /# data_in [7] $end
$var wire 1 0# data_in [6] $end
$var wire 1 1# data_in [5] $end
$var wire 1 2# data_in [4] $end
$var wire 1 3# data_in [3] $end
$var wire 1 4# data_in [2] $end
$var wire 1 5# data_in [1] $end
$var wire 1 6# data_in [0] $end
$var wire 1 %" addr [15] $end
$var wire 1 &" addr [14] $end
$var wire 1 '" addr [13] $end
$var wire 1 (" addr [12] $end
$var wire 1 )" addr [11] $end
$var wire 1 *" addr [10] $end
$var wire 1 +" addr [9] $end
$var wire 1 ," addr [8] $end
$var wire 1 -" addr [7] $end
$var wire 1 ." addr [6] $end
$var wire 1 /" addr [5] $end
$var wire 1 0" addr [4] $end
$var wire 1 1" addr [3] $end
$var wire 1 2" addr [2] $end
$var wire 1 3" addr [1] $end
$var wire 1 4" addr [0] $end
$var wire 1 VC enable $end
$var wire 1 -! wr $end
$var wire 1 WC createdump $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var reg 1 XC loaded $end
$var reg 17 YC largest [16:0] $end
$var integer 32 ZC mcd $end
$var integer 32 [C i $end
$upscope $end
$upscope $end

$scope module writeback_inst $end
$var wire 1 { clk $end
$var wire 1 } rst $end
$var wire 1 e" mem_rd_data1 [15] $end
$var wire 1 f" mem_rd_data1 [14] $end
$var wire 1 g" mem_rd_data1 [13] $end
$var wire 1 h" mem_rd_data1 [12] $end
$var wire 1 i" mem_rd_data1 [11] $end
$var wire 1 j" mem_rd_data1 [10] $end
$var wire 1 k" mem_rd_data1 [9] $end
$var wire 1 l" mem_rd_data1 [8] $end
$var wire 1 m" mem_rd_data1 [7] $end
$var wire 1 n" mem_rd_data1 [6] $end
$var wire 1 o" mem_rd_data1 [5] $end
$var wire 1 p" mem_rd_data1 [4] $end
$var wire 1 q" mem_rd_data1 [3] $end
$var wire 1 r" mem_rd_data1 [2] $end
$var wire 1 s" mem_rd_data1 [1] $end
$var wire 1 t" mem_rd_data1 [0] $end
$var wire 1 %" mem_rd_data2 [15] $end
$var wire 1 &" mem_rd_data2 [14] $end
$var wire 1 '" mem_rd_data2 [13] $end
$var wire 1 (" mem_rd_data2 [12] $end
$var wire 1 )" mem_rd_data2 [11] $end
$var wire 1 *" mem_rd_data2 [10] $end
$var wire 1 +" mem_rd_data2 [9] $end
$var wire 1 ," mem_rd_data2 [8] $end
$var wire 1 -" mem_rd_data2 [7] $end
$var wire 1 ." mem_rd_data2 [6] $end
$var wire 1 /" mem_rd_data2 [5] $end
$var wire 1 0" mem_rd_data2 [4] $end
$var wire 1 1" mem_rd_data2 [3] $end
$var wire 1 2" mem_rd_data2 [2] $end
$var wire 1 3" mem_rd_data2 [1] $end
$var wire 1 4" mem_rd_data2 [0] $end
$var wire 1 S! se_instruction_7_0 [15] $end
$var wire 1 T! se_instruction_7_0 [14] $end
$var wire 1 U! se_instruction_7_0 [13] $end
$var wire 1 V! se_instruction_7_0 [12] $end
$var wire 1 W! se_instruction_7_0 [11] $end
$var wire 1 X! se_instruction_7_0 [10] $end
$var wire 1 Y! se_instruction_7_0 [9] $end
$var wire 1 Z! se_instruction_7_0 [8] $end
$var wire 1 [! se_instruction_7_0 [7] $end
$var wire 1 \! se_instruction_7_0 [6] $end
$var wire 1 ]! se_instruction_7_0 [5] $end
$var wire 1 ^! se_instruction_7_0 [4] $end
$var wire 1 _! se_instruction_7_0 [3] $end
$var wire 1 `! se_instruction_7_0 [2] $end
$var wire 1 a! se_instruction_7_0 [1] $end
$var wire 1 b! se_instruction_7_0 [0] $end
$var wire 1 (! memread $end
$var wire 1 )! memtoreg $end
$var wire 1 -! memwrite $end
$var wire 1 1! regload [1] $end
$var wire 1 2! regload [0] $end
$var wire 1 5" PC_adder_out [15] $end
$var wire 1 6" PC_adder_out [14] $end
$var wire 1 7" PC_adder_out [13] $end
$var wire 1 8" PC_adder_out [12] $end
$var wire 1 9" PC_adder_out [11] $end
$var wire 1 :" PC_adder_out [10] $end
$var wire 1 ;" PC_adder_out [9] $end
$var wire 1 <" PC_adder_out [8] $end
$var wire 1 =" PC_adder_out [7] $end
$var wire 1 >" PC_adder_out [6] $end
$var wire 1 ?" PC_adder_out [5] $end
$var wire 1 @" PC_adder_out [4] $end
$var wire 1 A" PC_adder_out [3] $end
$var wire 1 B" PC_adder_out [2] $end
$var wire 1 C" PC_adder_out [1] $end
$var wire 1 D" PC_adder_out [0] $end
$var wire 1 G# comp_value_out $end
$var wire 1 \C err $end
$var wire 1 7# writeData [15] $end
$var wire 1 8# writeData [14] $end
$var wire 1 9# writeData [13] $end
$var wire 1 :# writeData [12] $end
$var wire 1 ;# writeData [11] $end
$var wire 1 <# writeData [10] $end
$var wire 1 =# writeData [9] $end
$var wire 1 ># writeData [8] $end
$var wire 1 ?# writeData [7] $end
$var wire 1 @# writeData [6] $end
$var wire 1 A# writeData [5] $end
$var wire 1 B# writeData [4] $end
$var wire 1 C# writeData [3] $end
$var wire 1 D# writeData [2] $end
$var wire 1 E# writeData [1] $end
$var wire 1 F# writeData [0] $end
$var wire 1 ]C mux3_out [15] $end
$var wire 1 ^C mux3_out [14] $end
$var wire 1 _C mux3_out [13] $end
$var wire 1 `C mux3_out [12] $end
$var wire 1 aC mux3_out [11] $end
$var wire 1 bC mux3_out [10] $end
$var wire 1 cC mux3_out [9] $end
$var wire 1 dC mux3_out [8] $end
$var wire 1 eC mux3_out [7] $end
$var wire 1 fC mux3_out [6] $end
$var wire 1 gC mux3_out [5] $end
$var wire 1 hC mux3_out [4] $end
$var wire 1 iC mux3_out [3] $end
$var wire 1 jC mux3_out [2] $end
$var wire 1 kC mux3_out [1] $end
$var wire 1 lC mux3_out [0] $end

$scope module mux2 $end
$var wire 1 ]C InA [15] $end
$var wire 1 ^C InA [14] $end
$var wire 1 _C InA [13] $end
$var wire 1 `C InA [12] $end
$var wire 1 aC InA [11] $end
$var wire 1 bC InA [10] $end
$var wire 1 cC InA [9] $end
$var wire 1 dC InA [8] $end
$var wire 1 eC InA [7] $end
$var wire 1 fC InA [6] $end
$var wire 1 gC InA [5] $end
$var wire 1 hC InA [4] $end
$var wire 1 iC InA [3] $end
$var wire 1 jC InA [2] $end
$var wire 1 kC InA [1] $end
$var wire 1 lC InA [0] $end
$var wire 1 S! InB [15] $end
$var wire 1 T! InB [14] $end
$var wire 1 U! InB [13] $end
$var wire 1 V! InB [12] $end
$var wire 1 W! InB [11] $end
$var wire 1 X! InB [10] $end
$var wire 1 Y! InB [9] $end
$var wire 1 Z! InB [8] $end
$var wire 1 [! InB [7] $end
$var wire 1 \! InB [6] $end
$var wire 1 ]! InB [5] $end
$var wire 1 ^! InB [4] $end
$var wire 1 _! InB [3] $end
$var wire 1 `! InB [2] $end
$var wire 1 a! InB [1] $end
$var wire 1 b! InB [0] $end
$var wire 1 5" InC [15] $end
$var wire 1 6" InC [14] $end
$var wire 1 7" InC [13] $end
$var wire 1 8" InC [12] $end
$var wire 1 9" InC [11] $end
$var wire 1 :" InC [10] $end
$var wire 1 ;" InC [9] $end
$var wire 1 <" InC [8] $end
$var wire 1 =" InC [7] $end
$var wire 1 >" InC [6] $end
$var wire 1 ?" InC [5] $end
$var wire 1 @" InC [4] $end
$var wire 1 A" InC [3] $end
$var wire 1 B" InC [2] $end
$var wire 1 C" InC [1] $end
$var wire 1 D" InC [0] $end
$var wire 1 mC InD [15] $end
$var wire 1 nC InD [14] $end
$var wire 1 oC InD [13] $end
$var wire 1 pC InD [12] $end
$var wire 1 qC InD [11] $end
$var wire 1 rC InD [10] $end
$var wire 1 sC InD [9] $end
$var wire 1 tC InD [8] $end
$var wire 1 uC InD [7] $end
$var wire 1 vC InD [6] $end
$var wire 1 wC InD [5] $end
$var wire 1 xC InD [4] $end
$var wire 1 yC InD [3] $end
$var wire 1 zC InD [2] $end
$var wire 1 {C InD [1] $end
$var wire 1 G# InD [0] $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 7# Out [15] $end
$var wire 1 8# Out [14] $end
$var wire 1 9# Out [13] $end
$var wire 1 :# Out [12] $end
$var wire 1 ;# Out [11] $end
$var wire 1 <# Out [10] $end
$var wire 1 =# Out [9] $end
$var wire 1 ># Out [8] $end
$var wire 1 ?# Out [7] $end
$var wire 1 @# Out [6] $end
$var wire 1 A# Out [5] $end
$var wire 1 B# Out [4] $end
$var wire 1 C# Out [3] $end
$var wire 1 D# Out [2] $end
$var wire 1 E# Out [1] $end
$var wire 1 F# Out [0] $end

$scope module inst_0 $end
$var wire 1 lC InA $end
$var wire 1 b! InB $end
$var wire 1 D" InC $end
$var wire 1 G# InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 F# Out $end
$var wire 1 |C Out_1 $end
$var wire 1 }C Out_2 $end

$scope module inst_1 $end
$var wire 1 lC InA $end
$var wire 1 b! InB $end
$var wire 1 2! S $end
$var wire 1 |C Out $end
$var wire 1 ~C notS $end
$var wire 1 !D pdt1 $end
$var wire 1 "D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 ~C out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 b! in2 $end
$var wire 1 !D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ~C in1 $end
$var wire 1 lC in2 $end
$var wire 1 "D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 !D in1 $end
$var wire 1 "D in2 $end
$var wire 1 |C out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 D" InA $end
$var wire 1 G# InB $end
$var wire 1 2! S $end
$var wire 1 }C Out $end
$var wire 1 #D notS $end
$var wire 1 $D pdt1 $end
$var wire 1 %D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 #D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 G# in2 $end
$var wire 1 $D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 #D in1 $end
$var wire 1 D" in2 $end
$var wire 1 %D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 $D in1 $end
$var wire 1 %D in2 $end
$var wire 1 }C out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 |C InA $end
$var wire 1 }C InB $end
$var wire 1 1! S $end
$var wire 1 F# Out $end
$var wire 1 &D notS $end
$var wire 1 'D pdt1 $end
$var wire 1 (D pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 &D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 }C in2 $end
$var wire 1 'D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 &D in1 $end
$var wire 1 |C in2 $end
$var wire 1 (D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 'D in1 $end
$var wire 1 (D in2 $end
$var wire 1 F# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 kC InA $end
$var wire 1 a! InB $end
$var wire 1 C" InC $end
$var wire 1 {C InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 E# Out $end
$var wire 1 )D Out_1 $end
$var wire 1 *D Out_2 $end

$scope module inst_1 $end
$var wire 1 kC InA $end
$var wire 1 a! InB $end
$var wire 1 2! S $end
$var wire 1 )D Out $end
$var wire 1 +D notS $end
$var wire 1 ,D pdt1 $end
$var wire 1 -D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 +D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 a! in2 $end
$var wire 1 ,D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 +D in1 $end
$var wire 1 kC in2 $end
$var wire 1 -D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ,D in1 $end
$var wire 1 -D in2 $end
$var wire 1 )D out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 C" InA $end
$var wire 1 {C InB $end
$var wire 1 2! S $end
$var wire 1 *D Out $end
$var wire 1 .D notS $end
$var wire 1 /D pdt1 $end
$var wire 1 0D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 .D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 {C in2 $end
$var wire 1 /D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 .D in1 $end
$var wire 1 C" in2 $end
$var wire 1 0D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 /D in1 $end
$var wire 1 0D in2 $end
$var wire 1 *D out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 )D InA $end
$var wire 1 *D InB $end
$var wire 1 1! S $end
$var wire 1 E# Out $end
$var wire 1 1D notS $end
$var wire 1 2D pdt1 $end
$var wire 1 3D pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 1D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 *D in2 $end
$var wire 1 2D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 1D in1 $end
$var wire 1 )D in2 $end
$var wire 1 3D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 2D in1 $end
$var wire 1 3D in2 $end
$var wire 1 E# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 jC InA $end
$var wire 1 `! InB $end
$var wire 1 B" InC $end
$var wire 1 zC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 D# Out $end
$var wire 1 4D Out_1 $end
$var wire 1 5D Out_2 $end

$scope module inst_1 $end
$var wire 1 jC InA $end
$var wire 1 `! InB $end
$var wire 1 2! S $end
$var wire 1 4D Out $end
$var wire 1 6D notS $end
$var wire 1 7D pdt1 $end
$var wire 1 8D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 6D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 `! in2 $end
$var wire 1 7D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 6D in1 $end
$var wire 1 jC in2 $end
$var wire 1 8D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 7D in1 $end
$var wire 1 8D in2 $end
$var wire 1 4D out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 B" InA $end
$var wire 1 zC InB $end
$var wire 1 2! S $end
$var wire 1 5D Out $end
$var wire 1 9D notS $end
$var wire 1 :D pdt1 $end
$var wire 1 ;D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 9D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 zC in2 $end
$var wire 1 :D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 9D in1 $end
$var wire 1 B" in2 $end
$var wire 1 ;D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 :D in1 $end
$var wire 1 ;D in2 $end
$var wire 1 5D out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 4D InA $end
$var wire 1 5D InB $end
$var wire 1 1! S $end
$var wire 1 D# Out $end
$var wire 1 <D notS $end
$var wire 1 =D pdt1 $end
$var wire 1 >D pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 <D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 5D in2 $end
$var wire 1 =D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 <D in1 $end
$var wire 1 4D in2 $end
$var wire 1 >D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 =D in1 $end
$var wire 1 >D in2 $end
$var wire 1 D# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 iC InA $end
$var wire 1 _! InB $end
$var wire 1 A" InC $end
$var wire 1 yC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 C# Out $end
$var wire 1 ?D Out_1 $end
$var wire 1 @D Out_2 $end

$scope module inst_1 $end
$var wire 1 iC InA $end
$var wire 1 _! InB $end
$var wire 1 2! S $end
$var wire 1 ?D Out $end
$var wire 1 AD notS $end
$var wire 1 BD pdt1 $end
$var wire 1 CD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 AD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 _! in2 $end
$var wire 1 BD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 AD in1 $end
$var wire 1 iC in2 $end
$var wire 1 CD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 BD in1 $end
$var wire 1 CD in2 $end
$var wire 1 ?D out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 A" InA $end
$var wire 1 yC InB $end
$var wire 1 2! S $end
$var wire 1 @D Out $end
$var wire 1 DD notS $end
$var wire 1 ED pdt1 $end
$var wire 1 FD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 DD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 yC in2 $end
$var wire 1 ED out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 DD in1 $end
$var wire 1 A" in2 $end
$var wire 1 FD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ED in1 $end
$var wire 1 FD in2 $end
$var wire 1 @D out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 ?D InA $end
$var wire 1 @D InB $end
$var wire 1 1! S $end
$var wire 1 C# Out $end
$var wire 1 GD notS $end
$var wire 1 HD pdt1 $end
$var wire 1 ID pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 GD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 @D in2 $end
$var wire 1 HD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 GD in1 $end
$var wire 1 ?D in2 $end
$var wire 1 ID out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 HD in1 $end
$var wire 1 ID in2 $end
$var wire 1 C# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 hC InA $end
$var wire 1 ^! InB $end
$var wire 1 @" InC $end
$var wire 1 xC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 B# Out $end
$var wire 1 JD Out_1 $end
$var wire 1 KD Out_2 $end

$scope module inst_1 $end
$var wire 1 hC InA $end
$var wire 1 ^! InB $end
$var wire 1 2! S $end
$var wire 1 JD Out $end
$var wire 1 LD notS $end
$var wire 1 MD pdt1 $end
$var wire 1 ND pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 LD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 ^! in2 $end
$var wire 1 MD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 LD in1 $end
$var wire 1 hC in2 $end
$var wire 1 ND out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 MD in1 $end
$var wire 1 ND in2 $end
$var wire 1 JD out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 @" InA $end
$var wire 1 xC InB $end
$var wire 1 2! S $end
$var wire 1 KD Out $end
$var wire 1 OD notS $end
$var wire 1 PD pdt1 $end
$var wire 1 QD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 OD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 xC in2 $end
$var wire 1 PD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 OD in1 $end
$var wire 1 @" in2 $end
$var wire 1 QD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 PD in1 $end
$var wire 1 QD in2 $end
$var wire 1 KD out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 JD InA $end
$var wire 1 KD InB $end
$var wire 1 1! S $end
$var wire 1 B# Out $end
$var wire 1 RD notS $end
$var wire 1 SD pdt1 $end
$var wire 1 TD pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 RD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 KD in2 $end
$var wire 1 SD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 RD in1 $end
$var wire 1 JD in2 $end
$var wire 1 TD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 SD in1 $end
$var wire 1 TD in2 $end
$var wire 1 B# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 gC InA $end
$var wire 1 ]! InB $end
$var wire 1 ?" InC $end
$var wire 1 wC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 A# Out $end
$var wire 1 UD Out_1 $end
$var wire 1 VD Out_2 $end

$scope module inst_1 $end
$var wire 1 gC InA $end
$var wire 1 ]! InB $end
$var wire 1 2! S $end
$var wire 1 UD Out $end
$var wire 1 WD notS $end
$var wire 1 XD pdt1 $end
$var wire 1 YD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 WD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 ]! in2 $end
$var wire 1 XD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 WD in1 $end
$var wire 1 gC in2 $end
$var wire 1 YD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 XD in1 $end
$var wire 1 YD in2 $end
$var wire 1 UD out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ?" InA $end
$var wire 1 wC InB $end
$var wire 1 2! S $end
$var wire 1 VD Out $end
$var wire 1 ZD notS $end
$var wire 1 [D pdt1 $end
$var wire 1 \D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 ZD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 wC in2 $end
$var wire 1 [D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ZD in1 $end
$var wire 1 ?" in2 $end
$var wire 1 \D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 [D in1 $end
$var wire 1 \D in2 $end
$var wire 1 VD out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 UD InA $end
$var wire 1 VD InB $end
$var wire 1 1! S $end
$var wire 1 A# Out $end
$var wire 1 ]D notS $end
$var wire 1 ^D pdt1 $end
$var wire 1 _D pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 ]D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 VD in2 $end
$var wire 1 ^D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ]D in1 $end
$var wire 1 UD in2 $end
$var wire 1 _D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ^D in1 $end
$var wire 1 _D in2 $end
$var wire 1 A# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 fC InA $end
$var wire 1 \! InB $end
$var wire 1 >" InC $end
$var wire 1 vC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 @# Out $end
$var wire 1 `D Out_1 $end
$var wire 1 aD Out_2 $end

$scope module inst_1 $end
$var wire 1 fC InA $end
$var wire 1 \! InB $end
$var wire 1 2! S $end
$var wire 1 `D Out $end
$var wire 1 bD notS $end
$var wire 1 cD pdt1 $end
$var wire 1 dD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 bD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 \! in2 $end
$var wire 1 cD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 bD in1 $end
$var wire 1 fC in2 $end
$var wire 1 dD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 cD in1 $end
$var wire 1 dD in2 $end
$var wire 1 `D out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 >" InA $end
$var wire 1 vC InB $end
$var wire 1 2! S $end
$var wire 1 aD Out $end
$var wire 1 eD notS $end
$var wire 1 fD pdt1 $end
$var wire 1 gD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 eD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 vC in2 $end
$var wire 1 fD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 eD in1 $end
$var wire 1 >" in2 $end
$var wire 1 gD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 fD in1 $end
$var wire 1 gD in2 $end
$var wire 1 aD out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 `D InA $end
$var wire 1 aD InB $end
$var wire 1 1! S $end
$var wire 1 @# Out $end
$var wire 1 hD notS $end
$var wire 1 iD pdt1 $end
$var wire 1 jD pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 hD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 aD in2 $end
$var wire 1 iD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 hD in1 $end
$var wire 1 `D in2 $end
$var wire 1 jD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 iD in1 $end
$var wire 1 jD in2 $end
$var wire 1 @# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 eC InA $end
$var wire 1 [! InB $end
$var wire 1 =" InC $end
$var wire 1 uC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 ?# Out $end
$var wire 1 kD Out_1 $end
$var wire 1 lD Out_2 $end

$scope module inst_1 $end
$var wire 1 eC InA $end
$var wire 1 [! InB $end
$var wire 1 2! S $end
$var wire 1 kD Out $end
$var wire 1 mD notS $end
$var wire 1 nD pdt1 $end
$var wire 1 oD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 mD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 [! in2 $end
$var wire 1 nD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 mD in1 $end
$var wire 1 eC in2 $end
$var wire 1 oD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 nD in1 $end
$var wire 1 oD in2 $end
$var wire 1 kD out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 =" InA $end
$var wire 1 uC InB $end
$var wire 1 2! S $end
$var wire 1 lD Out $end
$var wire 1 pD notS $end
$var wire 1 qD pdt1 $end
$var wire 1 rD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 pD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 uC in2 $end
$var wire 1 qD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 pD in1 $end
$var wire 1 =" in2 $end
$var wire 1 rD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 qD in1 $end
$var wire 1 rD in2 $end
$var wire 1 lD out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 kD InA $end
$var wire 1 lD InB $end
$var wire 1 1! S $end
$var wire 1 ?# Out $end
$var wire 1 sD notS $end
$var wire 1 tD pdt1 $end
$var wire 1 uD pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 sD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 lD in2 $end
$var wire 1 tD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 sD in1 $end
$var wire 1 kD in2 $end
$var wire 1 uD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 tD in1 $end
$var wire 1 uD in2 $end
$var wire 1 ?# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 dC InA $end
$var wire 1 Z! InB $end
$var wire 1 <" InC $end
$var wire 1 tC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 ># Out $end
$var wire 1 vD Out_1 $end
$var wire 1 wD Out_2 $end

$scope module inst_1 $end
$var wire 1 dC InA $end
$var wire 1 Z! InB $end
$var wire 1 2! S $end
$var wire 1 vD Out $end
$var wire 1 xD notS $end
$var wire 1 yD pdt1 $end
$var wire 1 zD pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 xD out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 Z! in2 $end
$var wire 1 yD out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 xD in1 $end
$var wire 1 dC in2 $end
$var wire 1 zD out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 yD in1 $end
$var wire 1 zD in2 $end
$var wire 1 vD out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 <" InA $end
$var wire 1 tC InB $end
$var wire 1 2! S $end
$var wire 1 wD Out $end
$var wire 1 {D notS $end
$var wire 1 |D pdt1 $end
$var wire 1 }D pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 {D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 tC in2 $end
$var wire 1 |D out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 {D in1 $end
$var wire 1 <" in2 $end
$var wire 1 }D out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 |D in1 $end
$var wire 1 }D in2 $end
$var wire 1 wD out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 vD InA $end
$var wire 1 wD InB $end
$var wire 1 1! S $end
$var wire 1 ># Out $end
$var wire 1 ~D notS $end
$var wire 1 !E pdt1 $end
$var wire 1 "E pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 ~D out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 wD in2 $end
$var wire 1 !E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ~D in1 $end
$var wire 1 vD in2 $end
$var wire 1 "E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 !E in1 $end
$var wire 1 "E in2 $end
$var wire 1 ># out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 cC InA $end
$var wire 1 Y! InB $end
$var wire 1 ;" InC $end
$var wire 1 sC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 =# Out $end
$var wire 1 #E Out_1 $end
$var wire 1 $E Out_2 $end

$scope module inst_1 $end
$var wire 1 cC InA $end
$var wire 1 Y! InB $end
$var wire 1 2! S $end
$var wire 1 #E Out $end
$var wire 1 %E notS $end
$var wire 1 &E pdt1 $end
$var wire 1 'E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 %E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 Y! in2 $end
$var wire 1 &E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 %E in1 $end
$var wire 1 cC in2 $end
$var wire 1 'E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 &E in1 $end
$var wire 1 'E in2 $end
$var wire 1 #E out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 ;" InA $end
$var wire 1 sC InB $end
$var wire 1 2! S $end
$var wire 1 $E Out $end
$var wire 1 (E notS $end
$var wire 1 )E pdt1 $end
$var wire 1 *E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 (E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 sC in2 $end
$var wire 1 )E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 (E in1 $end
$var wire 1 ;" in2 $end
$var wire 1 *E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 )E in1 $end
$var wire 1 *E in2 $end
$var wire 1 $E out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 #E InA $end
$var wire 1 $E InB $end
$var wire 1 1! S $end
$var wire 1 =# Out $end
$var wire 1 +E notS $end
$var wire 1 ,E pdt1 $end
$var wire 1 -E pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 +E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 $E in2 $end
$var wire 1 ,E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 +E in1 $end
$var wire 1 #E in2 $end
$var wire 1 -E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ,E in1 $end
$var wire 1 -E in2 $end
$var wire 1 =# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 bC InA $end
$var wire 1 X! InB $end
$var wire 1 :" InC $end
$var wire 1 rC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 <# Out $end
$var wire 1 .E Out_1 $end
$var wire 1 /E Out_2 $end

$scope module inst_1 $end
$var wire 1 bC InA $end
$var wire 1 X! InB $end
$var wire 1 2! S $end
$var wire 1 .E Out $end
$var wire 1 0E notS $end
$var wire 1 1E pdt1 $end
$var wire 1 2E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 0E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 X! in2 $end
$var wire 1 1E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 0E in1 $end
$var wire 1 bC in2 $end
$var wire 1 2E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 1E in1 $end
$var wire 1 2E in2 $end
$var wire 1 .E out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 :" InA $end
$var wire 1 rC InB $end
$var wire 1 2! S $end
$var wire 1 /E Out $end
$var wire 1 3E notS $end
$var wire 1 4E pdt1 $end
$var wire 1 5E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 3E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 rC in2 $end
$var wire 1 4E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 3E in1 $end
$var wire 1 :" in2 $end
$var wire 1 5E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 4E in1 $end
$var wire 1 5E in2 $end
$var wire 1 /E out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 .E InA $end
$var wire 1 /E InB $end
$var wire 1 1! S $end
$var wire 1 <# Out $end
$var wire 1 6E notS $end
$var wire 1 7E pdt1 $end
$var wire 1 8E pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 6E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 /E in2 $end
$var wire 1 7E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 6E in1 $end
$var wire 1 .E in2 $end
$var wire 1 8E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 7E in1 $end
$var wire 1 8E in2 $end
$var wire 1 <# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 aC InA $end
$var wire 1 W! InB $end
$var wire 1 9" InC $end
$var wire 1 qC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 ;# Out $end
$var wire 1 9E Out_1 $end
$var wire 1 :E Out_2 $end

$scope module inst_1 $end
$var wire 1 aC InA $end
$var wire 1 W! InB $end
$var wire 1 2! S $end
$var wire 1 9E Out $end
$var wire 1 ;E notS $end
$var wire 1 <E pdt1 $end
$var wire 1 =E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 ;E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 W! in2 $end
$var wire 1 <E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ;E in1 $end
$var wire 1 aC in2 $end
$var wire 1 =E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 <E in1 $end
$var wire 1 =E in2 $end
$var wire 1 9E out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 9" InA $end
$var wire 1 qC InB $end
$var wire 1 2! S $end
$var wire 1 :E Out $end
$var wire 1 >E notS $end
$var wire 1 ?E pdt1 $end
$var wire 1 @E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 >E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 qC in2 $end
$var wire 1 ?E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 >E in1 $end
$var wire 1 9" in2 $end
$var wire 1 @E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ?E in1 $end
$var wire 1 @E in2 $end
$var wire 1 :E out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 9E InA $end
$var wire 1 :E InB $end
$var wire 1 1! S $end
$var wire 1 ;# Out $end
$var wire 1 AE notS $end
$var wire 1 BE pdt1 $end
$var wire 1 CE pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 AE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 :E in2 $end
$var wire 1 BE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 AE in1 $end
$var wire 1 9E in2 $end
$var wire 1 CE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 BE in1 $end
$var wire 1 CE in2 $end
$var wire 1 ;# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 `C InA $end
$var wire 1 V! InB $end
$var wire 1 8" InC $end
$var wire 1 pC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 :# Out $end
$var wire 1 DE Out_1 $end
$var wire 1 EE Out_2 $end

$scope module inst_1 $end
$var wire 1 `C InA $end
$var wire 1 V! InB $end
$var wire 1 2! S $end
$var wire 1 DE Out $end
$var wire 1 FE notS $end
$var wire 1 GE pdt1 $end
$var wire 1 HE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 FE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 V! in2 $end
$var wire 1 GE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 FE in1 $end
$var wire 1 `C in2 $end
$var wire 1 HE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 GE in1 $end
$var wire 1 HE in2 $end
$var wire 1 DE out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 8" InA $end
$var wire 1 pC InB $end
$var wire 1 2! S $end
$var wire 1 EE Out $end
$var wire 1 IE notS $end
$var wire 1 JE pdt1 $end
$var wire 1 KE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 IE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 pC in2 $end
$var wire 1 JE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 IE in1 $end
$var wire 1 8" in2 $end
$var wire 1 KE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 JE in1 $end
$var wire 1 KE in2 $end
$var wire 1 EE out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 DE InA $end
$var wire 1 EE InB $end
$var wire 1 1! S $end
$var wire 1 :# Out $end
$var wire 1 LE notS $end
$var wire 1 ME pdt1 $end
$var wire 1 NE pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 LE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 EE in2 $end
$var wire 1 ME out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 LE in1 $end
$var wire 1 DE in2 $end
$var wire 1 NE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ME in1 $end
$var wire 1 NE in2 $end
$var wire 1 :# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 _C InA $end
$var wire 1 U! InB $end
$var wire 1 7" InC $end
$var wire 1 oC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 9# Out $end
$var wire 1 OE Out_1 $end
$var wire 1 PE Out_2 $end

$scope module inst_1 $end
$var wire 1 _C InA $end
$var wire 1 U! InB $end
$var wire 1 2! S $end
$var wire 1 OE Out $end
$var wire 1 QE notS $end
$var wire 1 RE pdt1 $end
$var wire 1 SE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 QE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 U! in2 $end
$var wire 1 RE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 QE in1 $end
$var wire 1 _C in2 $end
$var wire 1 SE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 RE in1 $end
$var wire 1 SE in2 $end
$var wire 1 OE out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 7" InA $end
$var wire 1 oC InB $end
$var wire 1 2! S $end
$var wire 1 PE Out $end
$var wire 1 TE notS $end
$var wire 1 UE pdt1 $end
$var wire 1 VE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 TE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 oC in2 $end
$var wire 1 UE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 TE in1 $end
$var wire 1 7" in2 $end
$var wire 1 VE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 UE in1 $end
$var wire 1 VE in2 $end
$var wire 1 PE out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 OE InA $end
$var wire 1 PE InB $end
$var wire 1 1! S $end
$var wire 1 9# Out $end
$var wire 1 WE notS $end
$var wire 1 XE pdt1 $end
$var wire 1 YE pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 WE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 PE in2 $end
$var wire 1 XE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 WE in1 $end
$var wire 1 OE in2 $end
$var wire 1 YE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 XE in1 $end
$var wire 1 YE in2 $end
$var wire 1 9# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 ^C InA $end
$var wire 1 T! InB $end
$var wire 1 6" InC $end
$var wire 1 nC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 8# Out $end
$var wire 1 ZE Out_1 $end
$var wire 1 [E Out_2 $end

$scope module inst_1 $end
$var wire 1 ^C InA $end
$var wire 1 T! InB $end
$var wire 1 2! S $end
$var wire 1 ZE Out $end
$var wire 1 \E notS $end
$var wire 1 ]E pdt1 $end
$var wire 1 ^E pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 \E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 T! in2 $end
$var wire 1 ]E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 \E in1 $end
$var wire 1 ^C in2 $end
$var wire 1 ^E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 ]E in1 $end
$var wire 1 ^E in2 $end
$var wire 1 ZE out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 6" InA $end
$var wire 1 nC InB $end
$var wire 1 2! S $end
$var wire 1 [E Out $end
$var wire 1 _E notS $end
$var wire 1 `E pdt1 $end
$var wire 1 aE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 _E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 nC in2 $end
$var wire 1 `E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 _E in1 $end
$var wire 1 6" in2 $end
$var wire 1 aE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 `E in1 $end
$var wire 1 aE in2 $end
$var wire 1 [E out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 ZE InA $end
$var wire 1 [E InB $end
$var wire 1 1! S $end
$var wire 1 8# Out $end
$var wire 1 bE notS $end
$var wire 1 cE pdt1 $end
$var wire 1 dE pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 bE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 [E in2 $end
$var wire 1 cE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 bE in1 $end
$var wire 1 ZE in2 $end
$var wire 1 dE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 cE in1 $end
$var wire 1 dE in2 $end
$var wire 1 8# out $end
$upscope $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 ]C InA $end
$var wire 1 S! InB $end
$var wire 1 5" InC $end
$var wire 1 mC InD $end
$var wire 1 1! S [1] $end
$var wire 1 2! S [0] $end
$var wire 1 7# Out $end
$var wire 1 eE Out_1 $end
$var wire 1 fE Out_2 $end

$scope module inst_1 $end
$var wire 1 ]C InA $end
$var wire 1 S! InB $end
$var wire 1 2! S $end
$var wire 1 eE Out $end
$var wire 1 gE notS $end
$var wire 1 hE pdt1 $end
$var wire 1 iE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 gE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 S! in2 $end
$var wire 1 hE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 gE in1 $end
$var wire 1 ]C in2 $end
$var wire 1 iE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 hE in1 $end
$var wire 1 iE in2 $end
$var wire 1 eE out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 5" InA $end
$var wire 1 mC InB $end
$var wire 1 2! S $end
$var wire 1 fE Out $end
$var wire 1 jE notS $end
$var wire 1 kE pdt1 $end
$var wire 1 lE pdt2 $end

$scope module not_inst $end
$var wire 1 2! in1 $end
$var wire 1 jE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 2! in1 $end
$var wire 1 mC in2 $end
$var wire 1 kE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 jE in1 $end
$var wire 1 5" in2 $end
$var wire 1 lE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 kE in1 $end
$var wire 1 lE in2 $end
$var wire 1 fE out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 eE InA $end
$var wire 1 fE InB $end
$var wire 1 1! S $end
$var wire 1 7# Out $end
$var wire 1 mE notS $end
$var wire 1 nE pdt1 $end
$var wire 1 oE pdt2 $end

$scope module not_inst $end
$var wire 1 1! in1 $end
$var wire 1 mE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 1! in1 $end
$var wire 1 fE in2 $end
$var wire 1 nE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 mE in1 $end
$var wire 1 eE in2 $end
$var wire 1 oE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 nE in1 $end
$var wire 1 oE in2 $end
$var wire 1 7# out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end

$scope module mux3 $end
$var wire 1 %" InA [15] $end
$var wire 1 &" InA [14] $end
$var wire 1 '" InA [13] $end
$var wire 1 (" InA [12] $end
$var wire 1 )" InA [11] $end
$var wire 1 *" InA [10] $end
$var wire 1 +" InA [9] $end
$var wire 1 ," InA [8] $end
$var wire 1 -" InA [7] $end
$var wire 1 ." InA [6] $end
$var wire 1 /" InA [5] $end
$var wire 1 0" InA [4] $end
$var wire 1 1" InA [3] $end
$var wire 1 2" InA [2] $end
$var wire 1 3" InA [1] $end
$var wire 1 4" InA [0] $end
$var wire 1 e" InB [15] $end
$var wire 1 f" InB [14] $end
$var wire 1 g" InB [13] $end
$var wire 1 h" InB [12] $end
$var wire 1 i" InB [11] $end
$var wire 1 j" InB [10] $end
$var wire 1 k" InB [9] $end
$var wire 1 l" InB [8] $end
$var wire 1 m" InB [7] $end
$var wire 1 n" InB [6] $end
$var wire 1 o" InB [5] $end
$var wire 1 p" InB [4] $end
$var wire 1 q" InB [3] $end
$var wire 1 r" InB [2] $end
$var wire 1 s" InB [1] $end
$var wire 1 t" InB [0] $end
$var wire 1 )! S $end
$var wire 1 ]C Out [15] $end
$var wire 1 ^C Out [14] $end
$var wire 1 _C Out [13] $end
$var wire 1 `C Out [12] $end
$var wire 1 aC Out [11] $end
$var wire 1 bC Out [10] $end
$var wire 1 cC Out [9] $end
$var wire 1 dC Out [8] $end
$var wire 1 eC Out [7] $end
$var wire 1 fC Out [6] $end
$var wire 1 gC Out [5] $end
$var wire 1 hC Out [4] $end
$var wire 1 iC Out [3] $end
$var wire 1 jC Out [2] $end
$var wire 1 kC Out [1] $end
$var wire 1 lC Out [0] $end

$scope module inst_0 $end
$var wire 1 4" InA $end
$var wire 1 t" InB $end
$var wire 1 )! S $end
$var wire 1 lC Out $end
$var wire 1 pE notS $end
$var wire 1 qE pdt1 $end
$var wire 1 rE pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 pE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 t" in2 $end
$var wire 1 qE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 pE in1 $end
$var wire 1 4" in2 $end
$var wire 1 rE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 qE in1 $end
$var wire 1 rE in2 $end
$var wire 1 lC out $end
$upscope $end
$upscope $end

$scope module inst_1 $end
$var wire 1 3" InA $end
$var wire 1 s" InB $end
$var wire 1 )! S $end
$var wire 1 kC Out $end
$var wire 1 sE notS $end
$var wire 1 tE pdt1 $end
$var wire 1 uE pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 sE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 s" in2 $end
$var wire 1 tE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 sE in1 $end
$var wire 1 3" in2 $end
$var wire 1 uE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 tE in1 $end
$var wire 1 uE in2 $end
$var wire 1 kC out $end
$upscope $end
$upscope $end

$scope module inst_2 $end
$var wire 1 2" InA $end
$var wire 1 r" InB $end
$var wire 1 )! S $end
$var wire 1 jC Out $end
$var wire 1 vE notS $end
$var wire 1 wE pdt1 $end
$var wire 1 xE pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 vE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 r" in2 $end
$var wire 1 wE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 vE in1 $end
$var wire 1 2" in2 $end
$var wire 1 xE out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 wE in1 $end
$var wire 1 xE in2 $end
$var wire 1 jC out $end
$upscope $end
$upscope $end

$scope module inst_3 $end
$var wire 1 1" InA $end
$var wire 1 q" InB $end
$var wire 1 )! S $end
$var wire 1 iC Out $end
$var wire 1 yE notS $end
$var wire 1 zE pdt1 $end
$var wire 1 {E pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 yE out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 q" in2 $end
$var wire 1 zE out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 yE in1 $end
$var wire 1 1" in2 $end
$var wire 1 {E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 zE in1 $end
$var wire 1 {E in2 $end
$var wire 1 iC out $end
$upscope $end
$upscope $end

$scope module inst_4 $end
$var wire 1 0" InA $end
$var wire 1 p" InB $end
$var wire 1 )! S $end
$var wire 1 hC Out $end
$var wire 1 |E notS $end
$var wire 1 }E pdt1 $end
$var wire 1 ~E pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 |E out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 p" in2 $end
$var wire 1 }E out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 |E in1 $end
$var wire 1 0" in2 $end
$var wire 1 ~E out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 }E in1 $end
$var wire 1 ~E in2 $end
$var wire 1 hC out $end
$upscope $end
$upscope $end

$scope module inst_5 $end
$var wire 1 /" InA $end
$var wire 1 o" InB $end
$var wire 1 )! S $end
$var wire 1 gC Out $end
$var wire 1 !F notS $end
$var wire 1 "F pdt1 $end
$var wire 1 #F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 !F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 o" in2 $end
$var wire 1 "F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 !F in1 $end
$var wire 1 /" in2 $end
$var wire 1 #F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 "F in1 $end
$var wire 1 #F in2 $end
$var wire 1 gC out $end
$upscope $end
$upscope $end

$scope module inst_6 $end
$var wire 1 ." InA $end
$var wire 1 n" InB $end
$var wire 1 )! S $end
$var wire 1 fC Out $end
$var wire 1 $F notS $end
$var wire 1 %F pdt1 $end
$var wire 1 &F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 $F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 n" in2 $end
$var wire 1 %F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 $F in1 $end
$var wire 1 ." in2 $end
$var wire 1 &F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 %F in1 $end
$var wire 1 &F in2 $end
$var wire 1 fC out $end
$upscope $end
$upscope $end

$scope module inst_7 $end
$var wire 1 -" InA $end
$var wire 1 m" InB $end
$var wire 1 )! S $end
$var wire 1 eC Out $end
$var wire 1 'F notS $end
$var wire 1 (F pdt1 $end
$var wire 1 )F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 'F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 m" in2 $end
$var wire 1 (F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 'F in1 $end
$var wire 1 -" in2 $end
$var wire 1 )F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 (F in1 $end
$var wire 1 )F in2 $end
$var wire 1 eC out $end
$upscope $end
$upscope $end

$scope module inst_8 $end
$var wire 1 ," InA $end
$var wire 1 l" InB $end
$var wire 1 )! S $end
$var wire 1 dC Out $end
$var wire 1 *F notS $end
$var wire 1 +F pdt1 $end
$var wire 1 ,F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 *F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 l" in2 $end
$var wire 1 +F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 *F in1 $end
$var wire 1 ," in2 $end
$var wire 1 ,F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 +F in1 $end
$var wire 1 ,F in2 $end
$var wire 1 dC out $end
$upscope $end
$upscope $end

$scope module inst_9 $end
$var wire 1 +" InA $end
$var wire 1 k" InB $end
$var wire 1 )! S $end
$var wire 1 cC Out $end
$var wire 1 -F notS $end
$var wire 1 .F pdt1 $end
$var wire 1 /F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 -F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 k" in2 $end
$var wire 1 .F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 -F in1 $end
$var wire 1 +" in2 $end
$var wire 1 /F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 .F in1 $end
$var wire 1 /F in2 $end
$var wire 1 cC out $end
$upscope $end
$upscope $end

$scope module inst_10 $end
$var wire 1 *" InA $end
$var wire 1 j" InB $end
$var wire 1 )! S $end
$var wire 1 bC Out $end
$var wire 1 0F notS $end
$var wire 1 1F pdt1 $end
$var wire 1 2F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 0F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 j" in2 $end
$var wire 1 1F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 0F in1 $end
$var wire 1 *" in2 $end
$var wire 1 2F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 1F in1 $end
$var wire 1 2F in2 $end
$var wire 1 bC out $end
$upscope $end
$upscope $end

$scope module inst_11 $end
$var wire 1 )" InA $end
$var wire 1 i" InB $end
$var wire 1 )! S $end
$var wire 1 aC Out $end
$var wire 1 3F notS $end
$var wire 1 4F pdt1 $end
$var wire 1 5F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 3F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 i" in2 $end
$var wire 1 4F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 3F in1 $end
$var wire 1 )" in2 $end
$var wire 1 5F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 4F in1 $end
$var wire 1 5F in2 $end
$var wire 1 aC out $end
$upscope $end
$upscope $end

$scope module inst_12 $end
$var wire 1 (" InA $end
$var wire 1 h" InB $end
$var wire 1 )! S $end
$var wire 1 `C Out $end
$var wire 1 6F notS $end
$var wire 1 7F pdt1 $end
$var wire 1 8F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 6F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 h" in2 $end
$var wire 1 7F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 6F in1 $end
$var wire 1 (" in2 $end
$var wire 1 8F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 7F in1 $end
$var wire 1 8F in2 $end
$var wire 1 `C out $end
$upscope $end
$upscope $end

$scope module inst_13 $end
$var wire 1 '" InA $end
$var wire 1 g" InB $end
$var wire 1 )! S $end
$var wire 1 _C Out $end
$var wire 1 9F notS $end
$var wire 1 :F pdt1 $end
$var wire 1 ;F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 9F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 g" in2 $end
$var wire 1 :F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 9F in1 $end
$var wire 1 '" in2 $end
$var wire 1 ;F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 :F in1 $end
$var wire 1 ;F in2 $end
$var wire 1 _C out $end
$upscope $end
$upscope $end

$scope module inst_14 $end
$var wire 1 &" InA $end
$var wire 1 f" InB $end
$var wire 1 )! S $end
$var wire 1 ^C Out $end
$var wire 1 <F notS $end
$var wire 1 =F pdt1 $end
$var wire 1 >F pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 <F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 f" in2 $end
$var wire 1 =F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 <F in1 $end
$var wire 1 &" in2 $end
$var wire 1 >F out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 =F in1 $end
$var wire 1 >F in2 $end
$var wire 1 ^C out $end
$upscope $end
$upscope $end

$scope module inst_15 $end
$var wire 1 %" InA $end
$var wire 1 e" InB $end
$var wire 1 )! S $end
$var wire 1 ]C Out $end
$var wire 1 ?F notS $end
$var wire 1 @F pdt1 $end
$var wire 1 AF pdt2 $end

$scope module not_inst $end
$var wire 1 )! in1 $end
$var wire 1 ?F out $end
$upscope $end

$scope module nand_inst_1 $end
$var wire 1 )! in1 $end
$var wire 1 e" in2 $end
$var wire 1 @F out $end
$upscope $end

$scope module nand_inst_2 $end
$var wire 1 ?F in1 $end
$var wire 1 %" in2 $end
$var wire 1 AF out $end
$upscope $end

$scope module nand_inst_3 $end
$var wire 1 @F in1 $end
$var wire 1 AF in2 $end
$var wire 1 ]C out $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
1~
1!!
x;!
b0 .*
bx 1*
bx 2*
bx 3*
b0 c-
bx f-
bx g-
bx h-
0o.
0n.
0m.
0l.
0k.
0j.
0i.
0h.
0g.
0f.
0e.
0d.
0c.
0b.
0a.
0`.
1%/
b0 &/
0J/
0I/
0H/
0G/
0F/
0E/
0D/
0C/
0B/
0A/
0@/
0?/
0>/
0=/
0</
0;/
bx Z0
bx [0
b0 \0
b0 ]0
b0 ^0
b0 _0
b0 `0
b0 a0
b0 b0
b0 c0
0H2
0G2
0F2
0E2
0D2
0C2
0B2
0A2
0@2
0?2
0>2
0=2
0<2
0;2
0:2
092
0i2
0h2
0g2
0f2
0e2
0d2
0c2
0b2
0a2
0`2
0_2
0^2
0]2
0\2
0[2
0Z2
0,3
0+3
0*3
0)3
0(3
0'3
0&3
0%3
0$3
0#3
0"3
0!3
0~2
0}2
0|2
0{2
0M3
0L3
0K3
0J3
0I3
0H3
0G3
0F3
0E3
0D3
0C3
0B3
0A3
0@3
0?3
0>3
0n3
0m3
0l3
0k3
0j3
0i3
0h3
0g3
0f3
0e3
0d3
0c3
0b3
0a3
0`3
0_3
014
004
0/4
0.4
0-4
0,4
0+4
0*4
0)4
0(4
0'4
0&4
0%4
0$4
0#4
0"4
0R4
0Q4
0P4
0O4
0N4
0M4
0L4
0K4
0J4
0I4
0H4
0G4
0F4
0E4
0D4
0C4
0s4
0r4
0q4
0p4
0o4
0n4
0m4
0l4
0k4
0j4
0i4
0h4
0g4
0f4
0e4
0d4
bx e/
xf/
xg/
xV5
bx W5
xX5
bx Y5
xZ5
x[5
bx \5
x]5
bx ^5
x_5
bx `5
bx a5
xb5
xc5
xd5
xe5
bx g5
xp5
x97
b0 Z>
bx ]>
bx ^>
bx _>
bx )B
bx ,B
bx -B
bx .B
bx zB
bx }B
bx ~B
bx !C
b0xxxxxxxxxxx ?C
b0xxxxxxxxxxx BC
b0xxxxxxxxxxx CC
b0xxxxxxxxxxx DC
1XC
b0 YC
b0 2'
b1 3'
b10 4'
b11 5'
b100 6'
b101 7'
b110 8'
b111 9'
b1000 :'
b1100 ;'
b1101 <'
b1110 ='
b1111 >'
b0 w*
b1 x*
b10 y*
b11 z*
b100 {*
b101 |*
b110 }*
b111 ~*
b1000 !+
b1100 "+
b1101 #+
b1110 $+
b1111 %+
b10000 N.
b10000 */
b10000 P0
b0 Q0
b1 R0
b10 S0
b11 T0
b100 U0
b101 V0
b110 W0
b111 X0
bz Y0
b10000 (2
b10000 I2
b10000 j2
b10000 -3
b10000 N3
b10000 o3
b10000 24
b10000 S4
b0 n;
b1 o;
b10 p;
b11 q;
b100 r;
b101 s;
b110 t;
b111 u;
b1000 v;
b1100 w;
b1101 x;
b1110 y;
b1111 z;
b0 E?
b1 F?
b10 G?
b11 H?
b100 I?
b101 J?
b110 K?
b111 L?
b1000 M?
b1100 N?
b1101 O?
b1110 P?
b1111 Q?
b0 x
b10 y
b100 z
b1 "!
bx '/
b10000000000000000 (/
bx ZC
b10000000000000000 [C
x0
x/
x.
x-
x,
x+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
xA
xD
xC
xB
xT
xS
xR
xQ
xP
xO
xN
xM
xL
xK
xJ
xI
xH
xG
xF
xE
xU
xV
xf
xe
xd
xc
xb
xa
x`
x_
x^
x]
x\
x[
xZ
xY
xX
xW
xv
xu
xt
xs
xr
xq
xp
xo
xn
xm
xl
xk
xj
xi
xh
xg
xw
1{
z|
1}
x$!
x#!
z%!
x'!
x&!
x(!
x)!
x,!
x+!
x*!
x-!
x/!
x.!
x0!
x2!
x1!
x4!
x3!
x5!
x6!
x7!
z8!
x9!
z:!
z<!
z=!
z>!
xB!
xA!
x@!
x?!
xR!
xQ!
xP!
xO!
xN!
xM!
xL!
xK!
xJ!
xI!
xH!
xG!
xF!
xE!
xD!
xC!
xb!
xa!
x`!
x_!
x^!
x]!
x\!
x[!
xZ!
xY!
xX!
xW!
xV!
xU!
xT!
xS!
xr!
xq!
xp!
xo!
xn!
xm!
xl!
xk!
0j!
0i!
0h!
0g!
0f!
0e!
0d!
0c!
x$"
x#"
x""
x!"
x~!
x}!
x|!
x{!
xz!
xy!
xx!
xw!
xv!
xu!
xt!
xs!
x4"
x3"
x2"
x1"
x0"
x/"
x."
x-"
x,"
x+"
x*"
x)"
x("
x'"
x&"
x%"
xD"
xC"
xB"
xA"
x@"
x?"
x>"
x="
x<"
x;"
x:"
x9"
x8"
x7"
x6"
x5"
xT"
xS"
xR"
xQ"
xP"
xO"
xN"
xM"
xL"
xK"
xJ"
xI"
xH"
xG"
xF"
xE"
zd"
zc"
zb"
za"
z`"
z_"
z^"
z]"
z\"
z["
zZ"
zY"
zX"
zW"
zV"
zU"
xt"
xs"
xr"
xq"
xp"
xo"
xn"
xm"
xl"
xk"
xj"
xi"
xh"
xg"
xf"
xe"
x&#
x%#
x$#
x##
x"#
x!#
x~"
x}"
x|"
x{"
xz"
xy"
xx"
xw"
xv"
xu"
x6#
x5#
x4#
x3#
x2#
x1#
x0#
x/#
x.#
x-#
x,#
x+#
x*#
x)#
x(#
x'#
xF#
xE#
xD#
xC#
xB#
xA#
x@#
x?#
x>#
x=#
x<#
x;#
x:#
x9#
x8#
x7#
xG#
zH#
xY#
xX#
xW#
xV#
xU#
xT#
xS#
xR#
xQ#
xP#
xO#
xN#
xM#
xL#
xK#
xJ#
xi#
xh#
xg#
xf#
xe#
xd#
xc#
xb#
xa#
x`#
x_#
x^#
x]#
x\#
x[#
xZ#
xy#
xx#
xw#
xv#
xu#
xt#
xs#
xr#
xq#
xp#
xo#
xn#
xm#
xl#
xk#
xj#
x+$
x*$
x)$
x($
x'$
x&$
x%$
x$$
x#$
x"$
x!$
x~#
x}#
x|#
x{#
xz#
x;$
x:$
x9$
x8$
x7$
x6$
x5$
x4$
x3$
x2$
x1$
x0$
x/$
x.$
x-$
x,$
xK$
xJ$
xI$
xH$
xG$
xF$
xE$
xD$
xC$
xB$
xA$
x@$
x?$
x>$
x=$
x<$
x[$
xZ$
xY$
xX$
xW$
xV$
xU$
xT$
xS$
xR$
xQ$
xP$
xO$
xN$
xM$
xL$
xl$
xm$
xn$
xo$
xp$
xq$
1r$
xs$
xt$
xu$
xv$
xw$
xx$
xy$
xz$
x{$
x|$
1}$
x~$
x!%
x"%
x#%
x$%
x%%
x&%
x'%
x(%
x)%
1*%
x+%
x,%
x-%
x.%
x/%
x0%
x1%
x2%
x3%
x4%
15%
x6%
x7%
x8%
x9%
x:%
x;%
x<%
x=%
x>%
x?%
1@%
xA%
xB%
xC%
xD%
xE%
xF%
xG%
xH%
xI%
xJ%
1K%
xL%
xM%
xN%
xO%
xP%
xQ%
xR%
xS%
xT%
xU%
1V%
xW%
xX%
xY%
xZ%
x[%
x\%
x]%
x^%
x_%
x`%
1a%
xb%
xc%
xd%
xe%
xf%
xg%
xh%
xi%
xj%
xk%
1l%
xm%
xn%
xo%
xp%
xq%
xr%
xs%
xt%
xu%
xv%
1w%
xx%
xy%
xz%
x{%
x|%
x}%
x~%
x!&
x"&
x#&
1$&
x%&
x&&
x'&
x(&
x)&
x*&
x+&
x,&
x-&
x.&
1/&
x0&
x1&
x2&
x3&
x4&
x5&
x6&
x7&
x8&
x9&
1:&
x;&
x<&
x=&
x>&
x?&
x@&
xA&
xB&
xC&
xD&
1E&
xF&
xG&
xH&
xI&
xJ&
xK&
xL&
xM&
xN&
xO&
1P&
xQ&
xR&
xS&
xT&
xU&
xV&
xW&
xX&
xY&
xZ&
1[&
x\&
x]&
x^&
x_&
x`&
xa&
xb&
xc&
xd&
xe&
xf&
xg&
xh&
xi&
xj&
xk&
xl&
xm&
xn&
xo&
xp&
xq&
xr&
xs&
xt&
xu&
xv&
xw&
xx&
xy&
xz&
x{&
x|&
x}&
x~&
x!'
x"'
x#'
x$'
x%'
x&'
x''
x('
x)'
x*'
x+'
x,'
x-'
x.'
x/'
x0'
x1'
xl'
xk'
xj'
xi'
xh'
xg'
xf'
xe'
xd'
xc'
xb'
xa'
x`'
x_'
x^'
x]'
0|'
1{'
0z'
0y'
0x'
0w'
0v'
0u'
0t'
0s'
0r'
0q'
0p'
0o'
0n'
0m'
x.(
x-(
x,(
x+(
x*(
x)(
x((
x'(
x&(
x%(
x$(
x#(
x"(
x!(
x~'
x}'
x>(
x=(
x<(
x;(
x:(
x9(
x8(
x7(
x6(
x5(
x4(
x3(
x2(
x1(
x0(
x/(
0?(
xO(
xN(
xM(
xL(
xK(
xJ(
xI(
xH(
xG(
xF(
xE(
xD(
xC(
xB(
xA(
x@(
xP(
0`(
0_(
0^(
0](
0\(
0[(
0Z(
0Y(
0X(
0W(
0V(
0U(
0T(
0S(
0R(
0Q(
xp(
1o(
xn(
xm(
xl(
xk(
xj(
xi(
xh(
xg(
xf(
xe(
xd(
xc(
xb(
xa(
x")
x!)
x~(
x}(
x|(
x{(
xz(
xy(
xx(
xw(
xv(
xu(
xt(
xs(
xr(
xq(
x2)
01)
x0)
x/)
x.)
x-)
x,)
x+)
x*)
x))
x()
x')
x&)
x%)
x$)
x#)
x3)
x7)
x6)
x5)
x4)
x8)
x<)
x;)
x:)
x9)
x=)
xA)
x@)
x?)
x>)
xB)
xF)
xE)
xD)
xC)
zG)
0L)
0K)
xJ)
xI)
xH)
0P)
xO)
0N)
0M)
xT)
1S)
xR)
xQ)
x])
x\)
x[)
xZ)
xY)
0a)
0`)
0_)
0^)
xe)
xd)
xc)
xb)
xn)
xm)
xl)
xk)
xj)
0r)
0q)
0p)
0o)
xv)
xu)
xt)
xs)
x!*
x~)
x})
x|)
x{)
0%*
0$*
0#*
0"*
x)*
x(*
x'*
x&*
0/*
00*
xC*
xB*
xA*
x@*
x?*
x>*
x=*
x<*
x;*
x:*
x9*
x8*
x7*
x6*
x5*
x4*
xS*
xR*
xQ*
xP*
xO*
xN*
xM*
xL*
xK*
xJ*
xI*
xH*
xG*
xF*
xE*
xD*
xc*
xb*
xa*
x`*
x_*
x^*
x]*
x\*
x[*
xZ*
xY*
xX*
xW*
xV*
xU*
xT*
0s*
xr*
xq*
xp*
xo*
xn*
xm*
xl*
xk*
xj*
xi*
xh*
xg*
xf*
xe*
xd*
xC+
xB+
xA+
x@+
x?+
x>+
x=+
x<+
x;+
x:+
x9+
x8+
x7+
x6+
x5+
x4+
xS+
xR+
xQ+
xP+
xO+
xN+
xM+
xL+
xK+
xJ+
xI+
xH+
xG+
xF+
xE+
xD+
xc+
xb+
xa+
x`+
x_+
x^+
x]+
x\+
x[+
xZ+
xY+
xX+
xW+
xV+
xU+
xT+
xs+
xr+
xq+
xp+
xo+
xn+
xm+
xl+
xk+
xj+
xi+
xh+
xg+
xf+
xe+
xd+
0t+
x&,
x%,
x$,
x#,
x",
x!,
x~+
x}+
x|+
x{+
xz+
xy+
xx+
xw+
xv+
xu+
x',
07,
06,
05,
04,
03,
02,
01,
00,
0/,
0.,
0-,
0,,
0+,
0*,
0),
0(,
xG,
xF,
xE,
xD,
xC,
xB,
xA,
x@,
x?,
x>,
x=,
x<,
x;,
x:,
x9,
x8,
xW,
xV,
xU,
xT,
xS,
xR,
xQ,
xP,
xO,
xN,
xM,
xL,
xK,
xJ,
xI,
xH,
xg,
xf,
xe,
xd,
xc,
xb,
xa,
x`,
x_,
x^,
x],
x\,
x[,
xZ,
xY,
xX,
xh,
xl,
xk,
xj,
xi,
xm,
xq,
xp,
xo,
xn,
xr,
xv,
xu,
xt,
xs,
xw,
x{,
xz,
xy,
xx,
z|,
0#-
x"-
x!-
x~,
x},
x'-
x&-
x%-
x$-
x+-
x*-
x)-
x(-
x4-
x3-
x2-
x1-
x0-
x8-
x7-
x6-
x5-
x<-
x;-
x:-
x9-
xE-
xD-
xC-
xB-
xA-
xI-
xH-
xG-
xF-
xM-
xL-
xK-
xJ-
xV-
xU-
xT-
xS-
xR-
xZ-
xY-
xX-
xW-
x^-
x]-
x\-
x[-
0d-
0e-
xx-
xw-
xv-
xu-
xt-
xs-
xr-
xq-
xp-
xo-
xn-
xm-
xl-
xk-
xj-
xi-
x*.
x).
x(.
x'.
x&.
x%.
x$.
x#.
x".
x!.
x~-
x}-
x|-
x{-
xz-
xy-
x:.
x9.
x8.
x7.
x6.
x5.
x4.
x3.
x2.
x1.
x0.
x/.
x..
x-.
x,.
x+.
xJ.
xI.
xH.
xG.
xF.
xE.
xD.
xC.
xB.
xA.
x@.
x?.
x>.
x=.
x<.
x;.
x_.
x^.
x].
x\.
x[.
xZ.
xY.
xX.
xW.
xV.
xU.
xT.
xS.
xR.
xQ.
xP.
x:/
x9/
x8/
x7/
x6/
x5/
x4/
x3/
x2/
x1/
x0/
x//
x./
x-/
x,/
x+/
xO/
xN/
xM/
0L/
xP/
z"0
z#0
x$0
x%0
x&0
x'0
x(0
x)0
x*0
x+0
x,0
x-0
x.0
x/0
x00
x10
x20
x30
x40
x50
x60
x70
x80
x90
x:0
x;0
x<0
x=0
x>0
x?0
x@0
xA0
xB0
xC0
xD0
0E0
0F0
xG0
1H0
1I0
xJ0
1K0
1L0
xM0
1N0
1O0
xs0
xr0
xq0
xp0
xo0
xn0
xm0
xl0
xk0
xj0
xi0
xh0
xg0
xf0
xe0
xd0
x%1
x$1
x#1
x"1
x!1
x~0
x}0
x|0
x{0
xz0
xy0
xx0
xw0
xv0
xu0
xt0
x51
x41
x31
x21
x11
x01
x/1
x.1
x-1
x,1
x+1
x*1
x)1
x(1
x'1
x&1
xE1
xD1
xC1
xB1
xA1
x@1
x?1
x>1
x=1
x<1
x;1
x:1
x91
x81
x71
x61
xU1
xT1
xS1
xR1
xQ1
xP1
xO1
xN1
xM1
xL1
xK1
xJ1
xI1
xH1
xG1
xF1
xe1
xd1
xc1
xb1
xa1
x`1
x_1
x^1
x]1
x\1
x[1
xZ1
xY1
xX1
xW1
xV1
xu1
xt1
xs1
xr1
xq1
xp1
xo1
xn1
xm1
xl1
xk1
xj1
xi1
xh1
xg1
xf1
x'2
x&2
x%2
x$2
x#2
x"2
x!2
x~1
x}1
x|1
x{1
xz1
xy1
xx1
xw1
xv1
x`/
x_/
x^/
x]/
x\/
x[/
xZ/
xY/
xX/
xW/
xV/
xU/
xT/
xS/
xR/
xQ/
xa/
xb/
xc/
xd/
x&5
x'5
1(5
x)5
x*5
1+5
x,5
x-5
1.5
x/5
x05
115
x25
x35
145
x55
x65
175
x85
x95
1:5
x;5
x<5
1=5
x>5
x?5
1@5
xA5
xB5
1C5
xD5
xE5
1F5
xG5
xH5
1I5
xJ5
xK5
1L5
xM5
xN5
1O5
xP5
xQ5
1R5
xS5
xT5
1U5
xw/
xv/
xu/
xt/
xs/
xr/
xq/
xp/
xo/
xn/
xm/
xl/
xk/
xj/
xi/
xh/
xx/
xf5
xn5
xm5
xl5
xk5
xj5
xi5
xh5
xq5
zr5
zs5
x%6
x$6
x#6
x"6
x!6
x~5
x}5
x|5
x{5
xz5
xy5
xx5
xw5
xv5
xu5
xt5
x56
x46
x36
x26
x16
x06
x/6
x.6
x-6
x,6
x+6
x*6
x)6
x(6
x'6
x&6
x66
xF6
xE6
xD6
xC6
xB6
xA6
x@6
x?6
x>6
x=6
x<6
x;6
x:6
x96
x86
x76
xV6
xU6
xT6
xS6
xR6
xQ6
xP6
xO6
xN6
xM6
xL6
xK6
xJ6
xI6
xH6
xG6
xf6
xe6
xd6
xc6
xb6
xa6
x`6
x_6
x^6
x]6
x\6
x[6
xZ6
xY6
xX6
xW6
xv6
xu6
xt6
xs6
xr6
xq6
xp6
xo6
xn6
xm6
xl6
xk6
xj6
xi6
xh6
xg6
x(7
x'7
x&7
x%7
x$7
x#7
x"7
x!7
x~6
x}6
x|6
x{6
xz6
xy6
xx6
xw6
x87
x77
x67
x57
x47
x37
x27
x17
x07
x/7
x.7
0-7
0,7
0+7
0*7
0)7
xK7
xL7
1M7
xN7
xO7
1P7
xQ7
xR7
1S7
xT7
xU7
1V7
xW7
xX7
1Y7
xZ7
x[7
1\7
x]7
x^7
1_7
x`7
xa7
1b7
xc7
xd7
1e7
xf7
xg7
1h7
xi7
xj7
1k7
xl7
xm7
1n7
xo7
xp7
1q7
xr7
xs7
1t7
xu7
xv7
1w7
xx7
xy7
1z7
x%8
x&8
x'8
x(8
x)8
x*8
x+8
x,8
x-8
x.8
x/8
x08
x18
x28
x38
x48
x58
x68
x78
x88
x98
x:8
x;8
x<8
x=8
x>8
x?8
x@8
xA8
xB8
xC8
xD8
xE8
xF8
xG8
xH8
xI8
xJ8
xK8
xL8
xM8
xN8
xO8
xP8
xQ8
xR8
xS8
xT8
xU8
xV8
xW8
xX8
xY8
xZ8
x[8
x\8
x]8
x^8
x_8
x`8
xa8
xb8
xc8
xd8
xe8
xf8
xg8
xh8
xi8
xj8
xk8
xl8
xm8
xn8
xo8
xp8
xq8
xr8
xs8
xt8
xu8
xv8
xw8
xx8
xy8
xz8
x{8
x|8
x}8
x~8
x!9
x"9
x#9
x$9
x%9
1&9
x'9
x(9
x)9
x*9
x+9
x,9
x-9
x.9
x/9
x09
119
x29
x39
x49
x59
x69
x79
x89
x99
x:9
x;9
1<9
x=9
x>9
x?9
x@9
xA9
xB9
xC9
xD9
xE9
xF9
1G9
xH9
xI9
xJ9
xK9
xL9
xM9
xN9
xO9
xP9
xQ9
1R9
xS9
xT9
xU9
xV9
xW9
xX9
xY9
xZ9
x[9
x\9
1]9
x^9
x_9
x`9
xa9
xb9
xc9
xd9
xe9
xf9
xg9
1h9
xi9
xj9
xk9
xl9
xm9
xn9
xo9
xp9
xq9
xr9
1s9
xt9
xu9
xv9
x%:
x&:
x':
x(:
x):
x*:
x+:
x,:
x-:
x.:
x/:
x0:
x1:
12:
x3:
x4:
15:
x6:
x7:
18:
x9:
x::
1;:
x<:
x=:
1>:
x?:
x@:
1A:
xB:
xC:
1D:
xE:
xF:
1G:
xH:
xI:
1J:
xK:
xL:
1M:
xN:
xO:
1P:
xQ:
xR:
1S:
xT:
xa:
xb:
xc:
xd:
xe:
xf:
xg:
xh:
xi:
xj:
xk:
xl:
xm:
1n:
xo:
xp:
1q:
xr:
xs:
1t:
xu:
xv:
1w:
xx:
xy:
1z:
x{:
x|:
1}:
x~:
x!;
1";
x#;
x$;
1%;
x&;
x';
1(;
x);
x*;
1+;
x,;
x-;
1.;
x/;
x0;
11;
x2;
x>;
x?;
x@;
xA;
xB;
xC;
xD;
xE;
xF;
xG;
xH;
xI;
xJ;
xK;
xL;
xM;
1N;
xO;
xP;
1Q;
xR;
xS;
1T;
xU;
xV;
1W;
xX;
xY;
1Z;
x[;
x\;
1];
x^;
x_;
1`;
xa;
xb;
1c;
xd;
xe;
1f;
xg;
xh;
1i;
xj;
xk;
1l;
xm;
x:<
x9<
x8<
x7<
x6<
x5<
x4<
x3<
x2<
x1<
x0<
x/<
x.<
x-<
x,<
x+<
xJ<
xI<
xH<
xG<
xF<
xE<
xD<
xC<
xB<
xA<
x@<
x?<
x><
x=<
x<<
x;<
xZ<
xY<
xX<
xW<
xV<
xU<
xT<
xS<
xR<
xQ<
xP<
xO<
xN<
xM<
xL<
xK<
xj<
xi<
xh<
xg<
xf<
xe<
xd<
xc<
xb<
xa<
x`<
x_<
x^<
x]<
x\<
x[<
0k<
x{<
xz<
xy<
xx<
xw<
xv<
xu<
xt<
xs<
xr<
xq<
xp<
xo<
xn<
xm<
xl<
x|<
0.=
0-=
0,=
0+=
0*=
0)=
0(=
0'=
0&=
0%=
0$=
0#=
0"=
0!=
0~<
0}<
x>=
x==
x<=
x;=
x:=
x9=
x8=
x7=
x6=
x5=
x4=
x3=
x2=
x1=
x0=
x/=
xN=
xM=
xL=
xK=
xJ=
xI=
xH=
xG=
xF=
xE=
xD=
xC=
xB=
xA=
x@=
x?=
x^=
x]=
x\=
x[=
xZ=
xY=
xX=
xW=
xV=
xU=
xT=
xS=
xR=
xQ=
xP=
xO=
x_=
xc=
xb=
xa=
x`=
xd=
xh=
xg=
xf=
xe=
xi=
xm=
xl=
xk=
xj=
xn=
xr=
xq=
xp=
xo=
zs=
0x=
xw=
xv=
xu=
xt=
x|=
x{=
xz=
xy=
x">
x!>
x~=
x}=
x+>
x*>
x)>
x(>
x'>
x/>
x.>
x->
x,>
x3>
x2>
x1>
x0>
x<>
x;>
x:>
x9>
x8>
x@>
x?>
x>>
x=>
xD>
xC>
xB>
xA>
xM>
xL>
xK>
xJ>
xI>
xQ>
xP>
xO>
xN>
xU>
xT>
xS>
xR>
0[>
0\>
xo>
xn>
xm>
xl>
xk>
xj>
xi>
xh>
xg>
xf>
xe>
xd>
xc>
xb>
xa>
x`>
x!?
x~>
x}>
x|>
x{>
xz>
xy>
xx>
xw>
xv>
xu>
xt>
xs>
xr>
xq>
xp>
x1?
x0?
x/?
x.?
x-?
x,?
x+?
x*?
x)?
x(?
x'?
x&?
x%?
x$?
x#?
x"?
xA?
x@?
x??
x>?
x=?
x<?
x;?
x:?
x9?
x8?
x7?
x6?
x5?
x4?
x3?
x2?
xg?
xf?
xe?
xd?
xc?
xb?
xa?
x`?
x_?
x^?
x]?
x\?
x[?
xZ?
xY?
xX?
xw?
xv?
xu?
xt?
xs?
xr?
xq?
xp?
xo?
xn?
xm?
xl?
xk?
xj?
xi?
xh?
x)@
x(@
x'@
x&@
x%@
x$@
x#@
x"@
x!@
x~?
x}?
x|?
x{?
xz?
xy?
xx?
x9@
x8@
x7@
x6@
x5@
x4@
x3@
x2@
x1@
x0@
x/@
x.@
x-@
x,@
x+@
x*@
x:@
xJ@
xI@
xH@
xG@
xF@
xE@
xD@
xC@
xB@
xA@
x@@
x?@
x>@
x=@
x<@
x;@
xK@
x[@
xZ@
xY@
xX@
xW@
xV@
xU@
xT@
xS@
xR@
xQ@
xP@
xO@
xN@
xM@
xL@
xk@
xj@
xi@
xh@
xg@
xf@
xe@
xd@
xc@
xb@
xa@
x`@
x_@
x^@
x]@
x\@
x{@
xz@
xy@
xx@
xw@
xv@
xu@
xt@
xs@
xr@
xq@
xp@
xo@
xn@
xm@
xl@
x-A
x,A
x+A
x*A
x)A
x(A
x'A
x&A
x%A
x$A
x#A
x"A
x!A
x~@
x}@
x|@
x.A
x2A
x1A
x0A
x/A
x3A
x7A
x6A
x5A
x4A
x8A
x<A
x;A
x:A
x9A
x=A
xAA
x@A
x?A
x>A
zBA
xGA
xFA
xEA
xDA
xCA
xKA
xJA
xIA
xHA
xOA
xNA
xMA
xLA
xXA
xWA
xVA
xUA
xTA
x\A
x[A
xZA
xYA
x`A
x_A
x^A
x]A
xiA
xhA
xgA
xfA
xeA
xmA
xlA
xkA
xjA
xqA
xpA
xoA
xnA
xzA
xyA
xxA
xwA
xvA
x~A
x}A
x|A
x{A
x$B
x#B
x"B
x!B
x*B
x+B
x>B
x=B
x<B
x;B
x:B
x9B
x8B
x7B
x6B
x5B
x4B
x3B
x2B
x1B
x0B
x/B
xNB
xMB
xLB
xKB
xJB
xIB
xHB
xGB
xFB
xEB
xDB
xCB
xBB
xAB
x@B
x?B
x^B
x]B
x\B
x[B
xZB
xYB
xXB
xWB
xVB
xUB
xTB
xSB
xRB
xQB
xPB
xOB
xnB
xmB
xlB
xkB
xjB
xiB
xhB
xgB
xfB
xeB
xdB
xcB
xbB
xaB
x`B
x_B
0{B
0|B
x1C
x0C
x/C
x.C
x-C
x,C
x+C
x*C
x)C
x(C
x'C
x&C
x%C
x$C
x#C
x"C
0@C
0AC
0TC
0SC
0RC
0QC
0PC
xOC
xNC
xMC
xLC
xKC
xJC
xIC
xHC
xGC
xFC
xEC
xlC
xkC
xjC
xiC
xhC
xgC
xfC
xeC
xdC
xcC
xbC
xaC
x`C
x_C
x^C
x]C
x|C
x}C
x~C
x!D
x"D
x#D
x$D
x%D
x&D
x'D
x(D
x)D
x*D
x+D
x,D
x-D
x.D
1/D
x0D
x1D
x2D
x3D
x4D
x5D
x6D
x7D
x8D
x9D
1:D
x;D
x<D
x=D
x>D
x?D
x@D
xAD
xBD
xCD
xDD
1ED
xFD
xGD
xHD
xID
xJD
xKD
xLD
xMD
xND
xOD
1PD
xQD
xRD
xSD
xTD
xUD
xVD
xWD
xXD
xYD
xZD
1[D
x\D
x]D
x^D
x_D
x`D
xaD
xbD
xcD
xdD
xeD
1fD
xgD
xhD
xiD
xjD
xkD
xlD
xmD
xnD
xoD
xpD
1qD
xrD
xsD
xtD
xuD
xvD
xwD
xxD
xyD
xzD
x{D
1|D
x}D
x~D
x!E
x"E
x#E
x$E
x%E
x&E
x'E
x(E
1)E
x*E
x+E
x,E
x-E
x.E
x/E
x0E
x1E
x2E
x3E
14E
x5E
x6E
x7E
x8E
x9E
x:E
x;E
x<E
x=E
x>E
1?E
x@E
xAE
xBE
xCE
xDE
xEE
xFE
xGE
xHE
xIE
1JE
xKE
xLE
xME
xNE
xOE
xPE
xQE
xRE
xSE
xTE
1UE
xVE
xWE
xXE
xYE
xZE
x[E
x\E
x]E
x^E
x_E
1`E
xaE
xbE
xcE
xdE
xeE
xfE
xgE
xhE
xiE
xjE
1kE
xlE
xmE
xnE
xoE
xpE
xqE
xrE
xsE
xtE
xuE
xvE
xwE
xxE
xyE
xzE
x{E
x|E
x}E
x~E
x!F
x"F
x#F
x$F
x%F
x&F
x'F
x(F
x)F
x*F
x+F
x,F
x-F
x.F
x/F
x0F
x1F
x2F
x3F
x4F
x5F
x6F
x7F
x8F
x9F
x:F
x;F
x<F
x=F
x>F
x?F
x@F
xAF
xVC
zI#
x)/
0#/
1"/
0-+
0,+
0++
0*+
0)+
1(+
0'+
0&+
0V'
0U'
0T'
0S'
0R'
1Q'
0P'
0O'
0N'
1M'
0L'
0K'
0J'
0I'
0H'
0G'
0F'
0E'
0D'
0C'
0B'
0A'
0@'
0?'
0k$
0j$
0i$
0h$
0g$
0f$
0e$
0d$
0c$
0b$
0a$
0`$
0_$
0^$
0]$
0\$
zY'
xW'
xX'
xZ'
x['
x\'
0U)
xV)
xW)
xX)
xf)
xg)
xh)
xi)
xw)
xx)
xy)
xz)
x**
x+*
x,*
x-*
0v*
1u*
0t*
z0+
x.+
x/+
x1+
x2+
x3+
x,-
x--
x.-
x/-
x=-
x>-
x?-
x@-
xN-
xO-
xP-
xQ-
x_-
x`-
xa-
xb-
0M.
1L.
0K.
zO.
z!/
z~.
z}.
z|.
z{.
zz.
zy.
zx.
zw.
zv.
zu.
zt.
zs.
zr.
zq.
zp.
z$/
zK/
0%5
0$5
0#5
0"5
0!5
0~4
0}4
0|4
0{4
0z4
0y4
0x4
0w4
0v4
0u4
0t4
0!0
1~/
1}/
1|/
0{/
0z/
0y/
0c4
0b4
0a4
0`4
0_4
0^4
0]4
0\4
0[4
0Z4
0Y4
0X4
0W4
0V4
0U4
0T4
0B4
0A4
0@4
0?4
0>4
0=4
0<4
0;4
0:4
094
084
074
064
054
044
034
0!4
0~3
0}3
0|3
0{3
0z3
0y3
0x3
0w3
0v3
0u3
0t3
0s3
0r3
0q3
0p3
0^3
0]3
0\3
0[3
0Z3
0Y3
0X3
0W3
0V3
0U3
0T3
0S3
0R3
0Q3
0P3
0O3
0=3
0<3
0;3
0:3
093
083
073
063
053
043
033
023
013
003
0/3
0.3
0z2
0y2
0x2
0w2
0v2
0u2
0t2
0s2
0r2
0q2
0p2
0o2
0n2
0m2
0l2
0k2
0Y2
0X2
0W2
0V2
0U2
0T2
0S2
0R2
0Q2
0P2
0O2
0N2
0M2
0L2
0K2
0J2
082
072
062
052
042
032
022
012
002
0/2
0.2
0-2
0,2
0+2
0*2
0)2
zo5
1>C
0=C
0<C
0;C
0:C
09C
08C
07C
06C
05C
04C
03C
02C
1yB
0xB
0wB
0vB
0uB
0tB
0sB
0rB
0R?
0$<
0#<
0"<
0!<
0~;
1};
0|;
0{;
0=;
0<;
0;;
0:;
09;
08;
07;
06;
05;
04;
03;
0`:
0_:
0^:
0]:
0\:
0[:
0Z:
0Y:
0X:
0W:
0V:
0U:
0$:
0#:
0":
0!:
0~9
0}9
0|9
0{9
0z9
0y9
0x9
0w9
0$8
0#8
0"8
0!8
0~7
0}7
0|7
0{7
xJ7
0I7
0H7
0G7
0F7
0E7
0D7
0C7
0B7
0A7
0@7
0?7
0>7
0=7
0<7
0;7
0:7
z'<
x%<
x&<
x(<
x)<
x*<
x#>
x$>
x%>
x&>
x4>
x5>
x6>
x7>
xE>
xF>
xG>
xH>
xV>
xW>
xX>
xY>
0D?
1C?
0B?
xS?
xT?
xU?
xV?
xW?
xPA
xQA
xRA
xSA
xaA
xbA
xcA
xdA
xrA
xsA
xtA
xuA
x%B
x&B
x'B
x(B
0qB
1pB
0oB
zUC
zWC
z\C
0{C
0zC
0yC
0xC
0wC
0vC
0uC
0tC
0sC
0rC
0qC
0pC
0oC
0nC
0mC
$end
#1
0v1
0w1
0x1
0y1
0z1
0{1
0|1
0}1
0~1
0!2
0"2
0#2
0$2
0%2
0&2
0'2
0f1
0g1
0h1
0i1
0j1
0k1
0l1
0m1
0n1
0o1
0p1
0q1
0r1
0s1
0t1
0u1
0V1
0W1
0X1
0Y1
0Z1
0[1
0\1
0]1
0^1
0_1
0`1
0a1
0b1
0c1
0d1
0e1
0F1
0G1
0H1
0I1
0J1
0K1
0L1
0M1
0N1
0O1
0P1
0Q1
0R1
0S1
0T1
0U1
061
071
081
091
0:1
0;1
0<1
0=1
0>1
0?1
0@1
0A1
0B1
0C1
0D1
0E1
0&1
0'1
0(1
0)1
0*1
0+1
0,1
0-1
0.1
0/1
001
011
021
031
041
051
0t0
0u0
0v0
0w0
0x0
0y0
0z0
0{0
0|0
0}0
0~0
0!1
0"1
0#1
0$1
0%1
0d0
0e0
0f0
0g0
0h0
0i0
0j0
0k0
0l0
0m0
0n0
0o0
0p0
0q0
0r0
0s0
0<$
0=$
0>$
0?$
0@$
0A$
0B$
0C$
0D$
0E$
0F$
0G$
0H$
0I$
0J$
0K$
0L$
0M$
0N$
0O$
0P$
0Q$
0R$
0S$
0T$
0U$
0V$
0W$
0X$
0Y$
0Z$
0[$
00
0/
0.
0-
0,
0+
0*
0)
0(
0'
0&
0%
0$
0#
0"
0!
0l'
0k'
0j'
0i'
0h'
0g'
0f'
0e'
0d'
0c'
0b'
0a'
0`'
0_'
0^'
0]'
0R!
0Q!
0P!
0O!
0N!
0M!
0L!
0K!
0J!
0I!
0H!
0G!
0F!
0E!
0D!
0C!
1&5
1'5
1)5
1*5
1,5
1-5
1/5
105
125
135
155
165
185
195
1;5
1<5
1>5
1?5
1A5
1B5
1D5
1E5
1G5
1H5
1J5
1K5
1M5
1N5
1P5
1Q5
1S5
1T5
066
1>0
130
1(0
1@0
1y8
150
1n8
1*0
1c8
1=0
1X8
1K;
120
1M8
1k:
1H;
1'0
1B8
1h:
1E;
178
1e:
1B;
1,8
1b:
1?;
0R*
0b*
1r*
0S*
1c*
1q*
0a*
0Q*
0$0
0/0
0:0
1J7
0K7
0N7
0Q7
0T7
0W7
0Z7
0]7
0`7
0c7
0f7
0i7
0l7
0o7
0r7
0u7
0x7
1D0
190
1.0
0P*
0`*
1p*
1o*
0_*
0O*
0N*
0^*
1n*
1m*
0]*
0M*
0L*
0\*
1l*
1k*
0[*
0K*
0J*
0Z*
1j*
1i*
0Y*
0I*
0H*
0X*
1h*
1g*
0W*
0G*
0F*
0V*
1f*
1e*
0U*
0E*
0D*
0T*
1d*
1Z'
0\'
0['
0i#
0h#
0g#
0f#
0e#
0d#
0c#
0b#
0a#
0`#
0_#
0^#
0]#
0\#
0[#
0Z#
0$"
0#"
0""
0!"
0~!
0}!
0|!
0{!
0z!
0y!
0x!
0w!
0v!
0u!
0t!
0s!
0r!
0q!
0p!
0o!
0n!
0m!
0l!
0k!
0@
0?
0>
0=
0<
0;
0:
09
08
07
06
05
04
03
02
01
1>(
1=(
1<(
1;(
1:(
19(
18(
17(
16(
15(
14(
13(
12(
11(
10(
1/(
0.(
0-(
0,(
0+(
0*(
0)(
0((
0'(
0&(
0%(
0$(
0#(
0"(
0!(
0~'
0}'
0p(
0n(
0m(
0l(
0k(
0j(
0i(
0h(
0g(
0f(
0e(
0d(
0c(
0b(
0a(
0")
1!)
0~(
0}(
0|(
0{(
0z(
0y(
0x(
0w(
0v(
0u(
0t(
0s(
0r(
0q(
02)
00)
0/)
0.)
0-)
0,)
0+)
0*)
0))
0()
0')
0&)
0%)
0$)
0#)
0-*
0&*
0,*
0'*
0+*
0(*
0**
0)*
0z)
0s)
0y)
0t)
0x)
0u)
0w)
0v)
0i)
0b)
0h)
0c)
0g)
0d)
0f)
0e)
0X)
0Q)
0W)
0R)
16)
0V)
0O)
07)
0T)
1m;
1j;
1g;
1d;
1a;
1^;
1[;
1X;
1U;
1R;
1O;
1L;
1I;
1F;
1C;
1@;
0%6
0$6
0#6
0"6
0!6
0~5
0}5
0|5
0{5
0z5
0y5
0x5
0w5
0v5
0u5
0t5
0J)
0I)
0H)
0\)
0[)
0Z)
0Y)
0m)
0l)
0k)
0j)
0~)
0})
0|)
0{)
0P(
0C)
0D)
0E)
0B)
0>)
0?)
0@)
0=)
09)
0:)
0;)
08)
04)
05)
1r9
1g9
1\9
1Q9
1F9
1;9
109
1%9
1x8
1m8
1b8
1W8
1L8
1A8
168
1+8
0&8
018
0<8
0G8
0R8
0]8
0h8
0s8
0~8
0+9
069
0A9
0L9
0W9
0b9
0m9
0])
0n)
0!*
03)
0F)
0A)
0<)
1u9
1j9
1_9
1T9
1I9
1>9
139
1(9
1{8
1p8
1e8
1Z8
1O8
1D8
198
1.8
0O(
1N(
0M(
0L(
0K(
0J(
0I(
0H(
0G(
0F(
0E(
0D(
0C(
0B(
0A(
0@(
0W'
0D"
1C"
0B"
0A"
0@"
0?"
0>"
0="
0<"
0;"
0:"
09"
08"
07"
06"
05"
11'
1lE
1.'
1aE
1+'
1VE
1('
1KE
1%'
1@E
1"'
15E
1}&
1*E
1z&
1}D
1w&
1rD
1t&
1gD
1q&
1\D
1n&
1QD
1k&
1FD
1h&
1;D
1b&
1%D
05D
0@D
0KD
0VD
0aD
0lD
0wD
0$E
0/E
0:E
0EE
0PE
0[E
0fE
1nE
1cE
1XE
1ME
1BE
17E
1,E
1!E
1tD
1iD
1^D
1SD
1HD
1=D
0_.
0].
0\.
0[.
0Z.
0Y.
0X.
0W.
0V.
0U.
0T.
0S.
0R.
0Q.
0P.
0X'
04*
05*
06*
07*
08*
09*
0:*
0;*
0<*
0=*
0>*
0?*
0@*
0A*
0B*
0C*
0EC
0FC
0GC
0HC
0IC
0JC
0KC
0LC
0MC
0NC
0OC
0`/
0_/
0^/
0]/
0\/
0[/
0Z/
0Y/
0X/
0W/
0V/
0U/
0T/
0S/
0R/
0Q/
0S+
1R+
0Q+
0P+
0O+
0N+
0M+
0L+
0K+
0J+
0I+
0H+
0G+
0F+
0E+
0D+
0J<
1I<
0H<
0G<
0F<
0E<
0D<
0C<
0B<
0A<
0@<
0?<
0><
0=<
0<<
0;<
0C+
0B+
0A+
0@+
0?+
0>+
0=+
0<+
0;+
0:+
09+
08+
07+
06+
05+
04+
0b!
0a!
0`!
0_!
0^!
0]!
0\!
0[!
0Z!
0Y!
0X!
0W!
0V!
0U!
0T!
0S!
0n5
0m5
0l5
0k5
12;
1hE
1/;
1]E
1,;
1RE
1);
1GE
1&;
1<E
1#;
11E
1~:
1&E
1{:
1yD
1x:
1nD
1u:
1cD
1r:
1XD
1o:
1MD
1l:
1BD
1i:
17D
1f:
1,D
1c:
1!D
0).
09.
1I.
0*.
1:.
0N>
0O>
0P>
0Q>
0=>
0>>
0?>
0@>
0,>
0->
0.>
0/>
0y=
0z=
1!>
0#>
0|=
0A?
0W-
0X-
0Y-
0Z-
0F-
0G-
0H-
0I-
05-
06-
07-
08-
0$-
0%-
1*-
0,-
0'-
0J.
0"-
0w=
1H.
08.
0(.
0V6
0U6
0T6
0S6
0R6
0Q6
0P6
0O6
0N6
0M6
0L6
0K6
0J6
0I6
0H6
0G6
1o9
1d9
1Y9
1N9
1C9
189
1-9
1"9
1u8
1j8
1_8
1T8
1I8
1>8
138
1(8
0'.
07.
1G.
1F.
06.
0&.
0%.
05.
1E.
1D.
04.
0$.
0#.
03.
1C.
1B.
02.
0".
0!.
01.
1A.
1@.
00.
0~-
0}-
0/.
1?.
1>.
0..
0|-
0{-
0-.
1=.
1<.
0,.
0z-
0y-
0+.
1;.
11+
03+
02+
1s+
1r+
1q+
1p+
1o+
1n+
1m+
1l+
1k+
1j+
1i+
1h+
1g+
1f+
1e+
1d+
0c+
0b+
0a+
0`+
0_+
0^+
0]+
0\+
0[+
0Z+
0Y+
0X+
0W+
0V+
0U+
0T+
1==
0]=
0G,
1F,
0E,
0D,
0C,
0B,
0A,
0@,
0?,
0>,
0=,
0<,
0;,
0:,
09,
08,
0W,
1V,
0U,
0T,
0S,
0R,
0Q,
0P,
0O,
0N,
0M,
0L,
0K,
0J,
0I,
0H,
0g,
0f,
0e,
0d,
0c,
0b,
0a,
0`,
0_,
0^,
0],
0\,
0[,
0Z,
0Y,
0X,
0b-
0[-
0a-
0\-
0`-
0]-
0_-
0^-
0Q-
0J-
0P-
0K-
0O-
0L-
0N-
0M-
0@-
09-
0?-
0:-
0>-
0;-
0=-
0<-
0/-
0(-
0.-
0)-
1k,
0--
0&-
0l,
0+-
0!-
0~,
0},
03-
02-
01-
00-
0D-
0C-
0B-
0A-
0U-
0T-
0S-
0R-
0',
0x,
0y,
0z,
0w,
0s,
0t,
0u,
0r,
0n,
0o,
0p,
0m,
0i,
0j,
04-
0E-
0V-
0h,
0{,
0v,
0q,
0&,
1%,
0$,
0#,
0",
0!,
0~+
0}+
0|+
0{+
0z+
0y+
0x+
0w+
0v+
0u+
0.+
0y#
1x#
0w#
0v#
0u#
0t#
0s#
0r#
0q#
0p#
0o#
0n#
0m#
0l#
0k#
0j#
1X&
1M&
1B&
17&
1,&
1!&
1t%
1i%
1^%
1S%
1H%
1=%
12%
1'%
1o$
0/+
0i-
0j-
0k-
0l-
0m-
0n-
0o-
0p-
0q-
0r-
0s-
0t-
0u-
0v-
0w-
0x-
0"C
0#C
0$C
0%C
0&C
0'C
0(C
0)C
0*C
0+C
0,C
0-C
0.C
0/C
00C
01C
b100 g5
b0 }B
b0 ~B
b0 !C
b0 zB
0f/
0g/
b0 e/
0e5
0V5
xV5
b0 BC
b0 CC
b0 DC
b0 ?C
09!
1`&
1a&
1c&
1d&
1f&
1g&
1i&
1j&
1l&
1m&
1o&
1p&
1r&
1s&
1u&
1v&
1x&
1y&
1{&
1|&
1~&
1!'
1#'
1$'
1&'
1''
1)'
1*'
1,'
1-'
1/'
10'
0J#
0K#
0L#
0M#
0N#
0O#
0P#
0Q#
0R#
0S#
0T#
0U#
0V#
0W#
0e&
0Y#
1p$
1X#
1(%
13%
1>%
1I%
1T%
1_%
1j%
1u%
1"&
1-&
18&
1C&
1N&
1Y&
0U&
0J&
0?&
04&
0)&
0|%
0q%
0f%
0[%
0P%
0E%
0:%
0/%
0$%
0l$
1v$
1.%
19%
1D%
1O%
1Z%
1e%
1p%
1{%
1(&
13&
1>&
1I&
1T&
1_&
087
077
067
057
047
037
027
017
007
0/7
0.7
0(7
0'7
0&7
0%7
0$7
0#7
0"7
0!7
0~6
0}6
0|6
0{6
0z6
0y6
0x6
0w6
0:<
09<
08<
07<
06<
05<
04<
03<
02<
01<
00<
0/<
0.<
0-<
0,<
0+<
0B!
0A!
1@!
0?!
0*B
0~>
00?
1@?
0!?
11?
1??
0/?
0}>
0|>
0.?
1>?
1=?
0-?
0{>
0z>
0,?
1<?
1;?
0+?
0y>
0x>
0*?
1:?
19?
0)?
0w>
0v>
0(?
18?
17?
0'?
0u>
0t>
0&?
16?
15?
0%?
0s>
0r>
0$?
14?
13?
0#?
0q>
0p>
0"?
12?
1(<
0*<
0)<
1j<
1i<
1h<
1g<
1f<
1e<
1d<
1c<
1b<
1a<
1`<
1_<
1^<
1]<
1\<
1[<
0Z<
0Y<
0X<
0W<
0V<
0U<
0T<
0S<
0R<
0Q<
0P<
0O<
0N<
0M<
0L<
0K<
0>=
0<=
0;=
0:=
09=
08=
07=
06=
05=
04=
03=
02=
01=
00=
0/=
0N=
1M=
0L=
0K=
0J=
0I=
0H=
0G=
0F=
0E=
0D=
0C=
0B=
0A=
0@=
0?=
0^=
0\=
0[=
0Z=
0Y=
0X=
0W=
0V=
0U=
0T=
0S=
0R=
0Q=
0P=
0O=
0q5
0Y>
0R>
0X>
0S>
0W>
0T>
0V>
0U>
0H>
0A>
0G>
0B>
0F>
0C>
0E>
0D>
07>
00>
06>
01>
05>
02>
04>
03>
0&>
0}=
0%>
0~=
1b=
0$>
0{=
0c=
0">
0v=
0u=
0t=
0*>
0)>
0(>
0'>
0;>
0:>
09>
08>
0L>
0K>
0J>
0I>
0|<
0o=
0p=
0q=
0n=
0j=
0k=
0l=
0i=
0e=
0f=
0g=
0d=
0`=
0a=
0+>
0<>
0M>
0_=
0r=
0m=
0h=
0:@
0{<
1z<
0y<
0x<
0w<
0v<
0u<
0t<
0s<
0r<
0q<
0p<
0o<
0n<
0m<
0l<
0%<
0GA
0T"
1S"
0R"
0Q"
0P"
0O"
0N"
0M"
0L"
0K"
0J"
0I"
0H"
0G"
0F"
0E"
0&<
0`>
0a>
0b>
0c>
0d>
0e>
0f>
0g>
0h>
0i>
0j>
0k>
0l>
0m>
0n>
0o>
0+B
b0 )B
0[@
0Z@
0Y@
0X@
0W@
0V@
0U@
0T@
0S@
0R@
0Q@
0P@
0O@
0N@
0M@
0L@
b0 W5
0X5
b0 Y5
0Z5
0[5
b0 \5
0]5
b0 ^5
0_5
b0 `5
b0 a5
1b5
0c5
0d5
b0 Z0
b0 [0
0f5
0(!
0)!
0-!
15!
07!
06!
06#
05#
04#
03#
02#
01#
00#
0/#
0.#
0-#
0,#
0+#
0*#
0)#
0(#
0'#
04!
03!
02!
01!
0/!
0.!
0'!
0&!
0$!
0#!
1,0
1-0
170
180
1B0
1C0
1M0
1&0
1)0
110
140
1<0
1?0
1G0
1J0
1t$
1u$
1!%
1"%
1,%
1-%
17%
18%
1B%
1C%
1M%
1N%
1X%
1Y%
1c%
1d%
1n%
1o%
1y%
1z%
1&&
1'&
11&
12&
1<&
1=&
1G&
1H&
1R&
1S&
1]&
1^&
1n$
1q$
1y$
1z$
1|$
1&%
1)%
11%
14%
1<%
1?%
1G%
1J%
1R%
1U%
1]%
1`%
1h%
1k%
1s%
1v%
1~%
1#&
1+&
1.&
16&
19&
1A&
1D&
1L&
1O&
1W&
1Z&
1-8
188
1C8
1N8
1Y8
1d8
1o8
1z8
1'9
129
1=9
1H9
1S9
1^9
1i9
1t9
1'8
1*8
128
158
1=8
1@8
1H8
1K8
1S8
1V8
1^8
1a8
1i8
1l8
1t8
1w8
1!9
1$9
1,9
1/9
179
1:9
1B9
1E9
1M9
1P9
1X9
1[9
1c9
1f9
1n9
1q9
1&D
1'D
11D
12D
1<D
1GD
1RD
1]D
1hD
1sD
1~D
1+E
16E
1AE
1LE
1WE
1bE
1mE
1~C
1#D
1$D
1+D
1.D
16D
19D
1AD
1DD
1LD
1OD
1WD
1ZD
1bD
1eD
1mD
1pD
1xD
1{D
1%E
1(E
10E
13E
1;E
1>E
1FE
1IE
1QE
1TE
1\E
1_E
1gE
1jE
1>;
1A;
1D;
1G;
1J;
1M;
1P;
1S;
1V;
1Y;
1\;
1_;
1b;
1e;
1h;
1k;
1%:
1(:
1+:
1.:
11:
14:
17:
1::
1=:
1@:
1C:
1F:
1I:
1L:
1O:
1R:
1a:
1d:
1g:
1j:
1m:
1p:
1s:
1v:
1y:
1|:
1!;
1$;
1';
1*;
1-;
10;
1T:
1Q:
1N:
1K:
1H:
1E:
1B:
1?:
1<:
19:
16:
13:
1/:
10:
1,:
1-:
1):
1*:
1&:
1':
0)/
0VC
1pE
1qE
1sE
1tE
1vE
1wE
1yE
1zE
1|E
1}E
1!F
1"F
1$F
1%F
1'F
1(F
1*F
1+F
1-F
1.F
10F
11F
13F
14F
16F
17F
19F
1:F
1<F
1=F
1?F
1@F
0F6
0E6
0D6
0C6
0B6
0A6
0@6
0?6
0>6
0=6
0<6
0;6
0:6
096
086
076
00D
0}C
0{$
0,$
0-$
0.$
0/$
00$
01$
02$
03$
04$
05$
06$
07$
08$
09$
0;$
0A0
060
0+0
1%0
100
1;0
1w$
1*D
1y7
1v7
1s7
1p7
1m7
1j7
1g7
1d7
1a7
1^7
1[7
1X7
1U7
1R7
1O7
1L7
056
046
036
026
016
006
0/6
0.6
0-6
0,6
0+6
0*6
0)6
0(6
0'6
0&6
0#%
1:$
1p9
1e9
1Z9
1O9
1D9
199
1.9
1#9
1v8
1k8
1`8
1U8
1J8
1?8
148
1)8
0%8
008
0;8
0F8
0Q8
0\8
0g8
0r8
0}8
0*9
059
0@9
0K9
0V9
0a9
0l9
1v9
1k9
1`9
1U9
1J9
1?9
149
1)9
1|8
1q8
1f8
1[8
1P8
1E8
1:8
1/8
0f6
0e6
0d6
0c6
0b6
0a6
0`6
0_6
0^6
0]6
0\6
0[6
0Z6
0Y6
0X6
0W6
0U
1w
0:/
09/
08/
07/
06/
05/
04/
03/
02/
01/
00/
0//
0./
0-/
0,/
0+/
0v
0u
0t
0s
0r
0q
0p
0o
0n
0m
0l
0k
0j
0i
0h
0g
0^.
0+$
1*$
0)$
0($
0'$
0&$
0%$
0$$
0#$
0"$
0!$
0~#
0}#
0|#
0{#
0z#
0t"
0s"
0r"
0q"
0p"
0o"
0n"
0m"
0l"
0k"
0j"
0i"
0h"
0g"
0f"
0e"
0V
00!
0O/
0N/
0M/
0w?
0v?
0u?
0t?
0s?
0r?
0q?
0p?
0o?
0n?
0m?
0l?
0k?
0j?
0i?
0h?
0&#
0%#
0$#
0##
0"#
0!#
0~"
0}"
0|"
0{"
0z"
0y"
0x"
0w"
0v"
0u"
0,!
0+!
0*!
0{A
0|A
0}A
0~A
0jA
0kA
0lA
0mA
0YA
0ZA
0[A
0\A
0HA
0IA
0JA
0PA
0KA
0nB
0mB
0FA
0QA
0EA
0lB
0kB
0RA
0DA
0SA
0CA
0jB
0iB
03A
0XA
0hB
0gB
0aA
0WA
0bA
0VA
0fB
0eB
0cA
0UA
0dA
0TA
0dB
0cB
08A
0iA
0bB
0aB
0rA
0hA
0sA
0gA
0`B
0_B
0tA
0fA
0uA
0eA
0U?
0=A
0zA
0%B
0yA
0&B
0xA
0'B
0wA
0(B
0vA
0K@
0.A
0A
0w/
0v/
0u/
0t/
0s/
0r/
0q/
0p/
0o/
0n/
0m/
0l/
0k/
0j/
0i/
0h/
0D
0C
0B
0S?
0x/
0j5
0i5
0h5
0g?
0f?
0e?
0d?
0c?
0b?
0a?
0`?
0_?
0^?
0]?
0\?
0[?
0Z?
0Y?
0X?
1d/
0a/
1c/
0NB
1^B
1]B
0MB
0LB
1\B
1[B
0KB
0JB
1ZB
1YB
0IB
0HB
1XB
1WB
0GB
0FB
1VB
1UB
0EB
0DB
1TB
1SB
0CB
0BB
1RB
1QB
0AB
0@B
1PB
1OB
0?B
0V?
1W?
19@
18@
17@
16@
15@
14@
13@
12@
11@
10@
1/@
1.@
1-@
1,@
1+@
1*@
0)@
0(@
0'@
0&@
0%@
0$@
0#@
0"@
0!@
0~?
0}?
0|?
0{?
0z?
0y?
0x?
0k@
0j@
0i@
0h@
0g@
0f@
0e@
0d@
0c@
0b@
0a@
0`@
0_@
0^@
0]@
0\@
0{@
0z@
0y@
0x@
0w@
0v@
0u@
0t@
0s@
0r@
0q@
0p@
0o@
0n@
0m@
0l@
0-A
0,A
0+A
0*A
0)A
0(A
0'A
0&A
0%A
0$A
0#A
0"A
0!A
0~@
0}@
0|@
0>A
0!B
0?A
0"B
0@A
0#B
0AA
0$B
09A
0nA
0:A
0oA
0;A
0pA
0<A
0qA
04A
0]A
05A
0^A
06A
0_A
07A
0`A
0/A
0LA
00A
0MA
01A
0NA
02A
0OA
0J@
0I@
0H@
0G@
0F@
0E@
0D@
0C@
0B@
0A@
0@@
0?@
0>@
0=@
0<@
0;@
0v6
0u6
0t6
0s6
0r6
0q6
0p6
0o6
0n6
0m6
0l6
0k6
0j6
0i6
0h6
0g6
04"
03"
02"
01"
00"
0/"
0."
0-"
0,"
0+"
0*"
0)"
0("
0'"
0&"
0%"
1T?
1\&
1AF
1Q&
1>F
1F&
1;F
1;&
18F
10&
15F
1%&
12F
1x%
1/F
1m%
1,F
1b%
1)F
1W%
1&F
1L%
1#F
1A%
1~E
16%
1{E
1+%
1xE
1~$
1uE
1s$
1rE
0lC
0m$
0kC
0x$
0jC
0%%
0iC
00%
0hC
0;%
0gC
0F%
0fC
0Q%
0eC
0\%
0dC
0g%
0cC
0r%
0bC
0}%
0aC
0*&
0`C
05&
0_C
0@&
0^C
0K&
0]C
0V&
1iE
1^E
1SE
1HE
1=E
12E
1'E
1zD
1oD
1dD
1YD
1ND
1CD
18D
1-D
1"D
0|C
0)D
04D
0?D
0JD
0UD
0`D
0kD
0vD
0#E
0.E
09E
0DE
0OE
0ZE
0eE
1oE
1dE
1YE
1NE
1CE
18E
1-E
1"E
1uD
1jD
1_D
1TD
1ID
1>D
13D
1(D
0f
0e
0d
0c
0b
0a
0`
0_
0^
0]
0\
0[
0Z
0Y
0X
0W
0/B
00B
01B
02B
03B
04B
05B
06B
07B
08B
09B
0:B
0;B
0<B
0=B
0>B
1b/
07#
08#
09#
0:#
0;#
0<#
0=#
0>#
0?#
0@#
0A#
0B#
0C#
0D#
0E#
0F#
0T
0S
0R
0Q
0P
0O
0N
0M
0L
0K
0J
0I
0H
0G
0F
0E
b0 g5
0V5
1g/
0G#
0@!
b0 ,B
b0 -B
b0 .B
#50
0~
0{
#100
1~
1{
b10 "!
#150
0~
0{
#200
1~
1{
b11 "!
#201
0!!
0}
#250
0~
0{
#300
1~
1{
b100 "!
b1 x
